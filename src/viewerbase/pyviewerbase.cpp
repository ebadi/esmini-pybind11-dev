// File: google/protobuf/io/coded_stream.cpp
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::MethodDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/generated_message_reflection.h> // google::protobuf::internal::DescriptorTable
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <utility> // std::pair

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_io_coded_stream(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B0_[google::protobuf::io::CodedInputStream] ";
	{ // google::protobuf::io::CodedInputStream file:google/protobuf/io/coded_stream.h line:185
		pybind11::class_<google::protobuf::io::CodedInputStream, std::shared_ptr<google::protobuf::io::CodedInputStream>> cl(M("google::protobuf::io"), "CodedInputStream", "");
		cl.def( pybind11::init<class google::protobuf::io::ZeroCopyInputStream *>(), pybind11::arg("input") );

		cl.def( pybind11::init<const unsigned char *, int>(), pybind11::arg("buffer"), pybind11::arg("size") );

		cl.def("IsFlat", (bool (google::protobuf::io::CodedInputStream::*)() const) &google::protobuf::io::CodedInputStream::IsFlat, "C++: google::protobuf::io::CodedInputStream::IsFlat() const --> bool");
		cl.def("Skip", (bool (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::Skip, "C++: google::protobuf::io::CodedInputStream::Skip(int) --> bool", pybind11::arg("count"));
		cl.def("ReadRaw", (bool (google::protobuf::io::CodedInputStream::*)(void *, int)) &google::protobuf::io::CodedInputStream::ReadRaw, "C++: google::protobuf::io::CodedInputStream::ReadRaw(void *, int) --> bool", pybind11::arg("buffer"), pybind11::arg("size"));
		cl.def("ReadLittleEndian32", (bool (google::protobuf::io::CodedInputStream::*)(unsigned int *)) &google::protobuf::io::CodedInputStream::ReadLittleEndian32, "C++: google::protobuf::io::CodedInputStream::ReadLittleEndian32(unsigned int *) --> bool", pybind11::arg("value"));
		cl.def("ReadLittleEndian64", (bool (google::protobuf::io::CodedInputStream::*)(unsigned long *)) &google::protobuf::io::CodedInputStream::ReadLittleEndian64, "C++: google::protobuf::io::CodedInputStream::ReadLittleEndian64(unsigned long *) --> bool", pybind11::arg("value"));
		cl.def_static("ReadLittleEndian32FromArray", (const unsigned char * (*)(const unsigned char *, unsigned int *)) &google::protobuf::io::CodedInputStream::ReadLittleEndian32FromArray, "C++: google::protobuf::io::CodedInputStream::ReadLittleEndian32FromArray(const unsigned char *, unsigned int *) --> const unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("buffer"), pybind11::arg("value"));
		cl.def_static("ReadLittleEndian64FromArray", (const unsigned char * (*)(const unsigned char *, unsigned long *)) &google::protobuf::io::CodedInputStream::ReadLittleEndian64FromArray, "C++: google::protobuf::io::CodedInputStream::ReadLittleEndian64FromArray(const unsigned char *, unsigned long *) --> const unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("buffer"), pybind11::arg("value"));
		cl.def("ReadVarint32", (bool (google::protobuf::io::CodedInputStream::*)(unsigned int *)) &google::protobuf::io::CodedInputStream::ReadVarint32, "C++: google::protobuf::io::CodedInputStream::ReadVarint32(unsigned int *) --> bool", pybind11::arg("value"));
		cl.def("ReadVarint64", (bool (google::protobuf::io::CodedInputStream::*)(unsigned long *)) &google::protobuf::io::CodedInputStream::ReadVarint64, "C++: google::protobuf::io::CodedInputStream::ReadVarint64(unsigned long *) --> bool", pybind11::arg("value"));
		cl.def("ReadVarintSizeAsInt", (bool (google::protobuf::io::CodedInputStream::*)(int *)) &google::protobuf::io::CodedInputStream::ReadVarintSizeAsInt, "C++: google::protobuf::io::CodedInputStream::ReadVarintSizeAsInt(int *) --> bool", pybind11::arg("value"));
		cl.def("ReadTag", (unsigned int (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::ReadTag, "C++: google::protobuf::io::CodedInputStream::ReadTag() --> unsigned int");
		cl.def("ReadTagNoLastTag", (unsigned int (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::ReadTagNoLastTag, "C++: google::protobuf::io::CodedInputStream::ReadTagNoLastTag() --> unsigned int");
		cl.def("ExpectTag", (bool (google::protobuf::io::CodedInputStream::*)(unsigned int)) &google::protobuf::io::CodedInputStream::ExpectTag, "C++: google::protobuf::io::CodedInputStream::ExpectTag(unsigned int) --> bool", pybind11::arg("expected"));
		cl.def_static("ExpectTagFromArray", (const unsigned char * (*)(const unsigned char *, unsigned int)) &google::protobuf::io::CodedInputStream::ExpectTagFromArray, "C++: google::protobuf::io::CodedInputStream::ExpectTagFromArray(const unsigned char *, unsigned int) --> const unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("buffer"), pybind11::arg("expected"));
		cl.def("ExpectAtEnd", (bool (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::ExpectAtEnd, "C++: google::protobuf::io::CodedInputStream::ExpectAtEnd() --> bool");
		cl.def("LastTagWas", (bool (google::protobuf::io::CodedInputStream::*)(unsigned int)) &google::protobuf::io::CodedInputStream::LastTagWas, "C++: google::protobuf::io::CodedInputStream::LastTagWas(unsigned int) --> bool", pybind11::arg("expected"));
		cl.def("SetLastTag", (void (google::protobuf::io::CodedInputStream::*)(unsigned int)) &google::protobuf::io::CodedInputStream::SetLastTag, "C++: google::protobuf::io::CodedInputStream::SetLastTag(unsigned int) --> void", pybind11::arg("tag"));
		cl.def("ConsumedEntireMessage", (bool (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::ConsumedEntireMessage, "C++: google::protobuf::io::CodedInputStream::ConsumedEntireMessage() --> bool");
		cl.def("SetConsumed", (void (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::SetConsumed, "C++: google::protobuf::io::CodedInputStream::SetConsumed() --> void");
		cl.def("PushLimit", (int (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::PushLimit, "C++: google::protobuf::io::CodedInputStream::PushLimit(int) --> int", pybind11::arg("byte_limit"));
		cl.def("PopLimit", (void (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::PopLimit, "C++: google::protobuf::io::CodedInputStream::PopLimit(int) --> void", pybind11::arg("limit"));
		cl.def("BytesUntilLimit", (int (google::protobuf::io::CodedInputStream::*)() const) &google::protobuf::io::CodedInputStream::BytesUntilLimit, "C++: google::protobuf::io::CodedInputStream::BytesUntilLimit() const --> int");
		cl.def("CurrentPosition", (int (google::protobuf::io::CodedInputStream::*)() const) &google::protobuf::io::CodedInputStream::CurrentPosition, "C++: google::protobuf::io::CodedInputStream::CurrentPosition() const --> int");
		cl.def("SetTotalBytesLimit", (void (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::SetTotalBytesLimit, "C++: google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int) --> void", pybind11::arg("total_bytes_limit"));
		cl.def("SetTotalBytesLimit", (void (google::protobuf::io::CodedInputStream::*)(int, int)) &google::protobuf::io::CodedInputStream::SetTotalBytesLimit, "C++: google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int) --> void", pybind11::arg("total_bytes_limit"), pybind11::arg(""));
		cl.def("BytesUntilTotalBytesLimit", (int (google::protobuf::io::CodedInputStream::*)() const) &google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit, "C++: google::protobuf::io::CodedInputStream::BytesUntilTotalBytesLimit() const --> int");
		cl.def("SetRecursionLimit", (void (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::SetRecursionLimit, "C++: google::protobuf::io::CodedInputStream::SetRecursionLimit(int) --> void", pybind11::arg("limit"));
		cl.def("RecursionBudget", (int (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::RecursionBudget, "C++: google::protobuf::io::CodedInputStream::RecursionBudget() --> int");
		cl.def_static("GetDefaultRecursionLimit", (int (*)()) &google::protobuf::io::CodedInputStream::GetDefaultRecursionLimit, "C++: google::protobuf::io::CodedInputStream::GetDefaultRecursionLimit() --> int");
		cl.def("IncrementRecursionDepth", (bool (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::IncrementRecursionDepth, "C++: google::protobuf::io::CodedInputStream::IncrementRecursionDepth() --> bool");
		cl.def("DecrementRecursionDepth", (void (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::DecrementRecursionDepth, "C++: google::protobuf::io::CodedInputStream::DecrementRecursionDepth() --> void");
		cl.def("UnsafeDecrementRecursionDepth", (void (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::UnsafeDecrementRecursionDepth, "C++: google::protobuf::io::CodedInputStream::UnsafeDecrementRecursionDepth() --> void");
		cl.def("ReadLengthAndPushLimit", (int (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::ReadLengthAndPushLimit, "C++: google::protobuf::io::CodedInputStream::ReadLengthAndPushLimit() --> int");
		cl.def("DecrementRecursionDepthAndPopLimit", (bool (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit, "C++: google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(int) --> bool", pybind11::arg("limit"));
		cl.def("CheckEntireMessageConsumedAndPopLimit", (bool (google::protobuf::io::CodedInputStream::*)(int)) &google::protobuf::io::CodedInputStream::CheckEntireMessageConsumedAndPopLimit, "C++: google::protobuf::io::CodedInputStream::CheckEntireMessageConsumedAndPopLimit(int) --> bool", pybind11::arg("limit"));
		cl.def("SetExtensionRegistry", (void (google::protobuf::io::CodedInputStream::*)(const class google::protobuf::DescriptorPool *, class google::protobuf::MessageFactory *)) &google::protobuf::io::CodedInputStream::SetExtensionRegistry, "C++: google::protobuf::io::CodedInputStream::SetExtensionRegistry(const class google::protobuf::DescriptorPool *, class google::protobuf::MessageFactory *) --> void", pybind11::arg("pool"), pybind11::arg("factory"));
		cl.def("GetExtensionPool", (const class google::protobuf::DescriptorPool * (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::GetExtensionPool, "C++: google::protobuf::io::CodedInputStream::GetExtensionPool() --> const class google::protobuf::DescriptorPool *", pybind11::return_value_policy::reference);
		cl.def("GetExtensionFactory", (class google::protobuf::MessageFactory * (google::protobuf::io::CodedInputStream::*)()) &google::protobuf::io::CodedInputStream::GetExtensionFactory, "C++: google::protobuf::io::CodedInputStream::GetExtensionFactory() --> class google::protobuf::MessageFactory *", pybind11::return_value_policy::reference);
	}
	std::cout << "B1_[google::protobuf::io::EpsCopyOutputStream] ";
	{ // google::protobuf::io::EpsCopyOutputStream file:google/protobuf/io/coded_stream.h line:656
		pybind11::class_<google::protobuf::io::EpsCopyOutputStream, std::shared_ptr<google::protobuf::io::EpsCopyOutputStream>> cl(M("google::protobuf::io"), "EpsCopyOutputStream", "");
		cl.def( pybind11::init<void *, int, bool>(), pybind11::arg("data"), pybind11::arg("size"), pybind11::arg("deterministic") );

		cl.def( pybind11::init( [](google::protobuf::io::EpsCopyOutputStream const &o){ return new google::protobuf::io::EpsCopyOutputStream(o); } ) );
		cl.def("Trim", (unsigned char * (google::protobuf::io::EpsCopyOutputStream::*)(unsigned char *)) &google::protobuf::io::EpsCopyOutputStream::Trim, "C++: google::protobuf::io::EpsCopyOutputStream::Trim(unsigned char *) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"));
		cl.def("EnsureSpace", (unsigned char * (google::protobuf::io::EpsCopyOutputStream::*)(unsigned char *)) &google::protobuf::io::EpsCopyOutputStream::EnsureSpace, "C++: google::protobuf::io::EpsCopyOutputStream::EnsureSpace(unsigned char *) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"));
		cl.def("WriteRaw", (unsigned char * (google::protobuf::io::EpsCopyOutputStream::*)(const void *, int, unsigned char *)) &google::protobuf::io::EpsCopyOutputStream::WriteRaw, "C++: google::protobuf::io::EpsCopyOutputStream::WriteRaw(const void *, int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("data"), pybind11::arg("size"), pybind11::arg("ptr"));
		cl.def("WriteRawMaybeAliased", (unsigned char * (google::protobuf::io::EpsCopyOutputStream::*)(const void *, int, unsigned char *)) &google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased, "C++: google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(const void *, int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("data"), pybind11::arg("size"), pybind11::arg("ptr"));
		cl.def("HadError", (bool (google::protobuf::io::EpsCopyOutputStream::*)() const) &google::protobuf::io::EpsCopyOutputStream::HadError, "C++: google::protobuf::io::EpsCopyOutputStream::HadError() const --> bool");
		cl.def("EnableAliasing", (void (google::protobuf::io::EpsCopyOutputStream::*)(bool)) &google::protobuf::io::EpsCopyOutputStream::EnableAliasing, "C++: google::protobuf::io::EpsCopyOutputStream::EnableAliasing(bool) --> void", pybind11::arg("enabled"));
		cl.def("SetSerializationDeterministic", (void (google::protobuf::io::EpsCopyOutputStream::*)(bool)) &google::protobuf::io::EpsCopyOutputStream::SetSerializationDeterministic, "C++: google::protobuf::io::EpsCopyOutputStream::SetSerializationDeterministic(bool) --> void", pybind11::arg("value"));
		cl.def("IsSerializationDeterministic", (bool (google::protobuf::io::EpsCopyOutputStream::*)() const) &google::protobuf::io::EpsCopyOutputStream::IsSerializationDeterministic, "C++: google::protobuf::io::EpsCopyOutputStream::IsSerializationDeterministic() const --> bool");
		cl.def("ByteCount", (long (google::protobuf::io::EpsCopyOutputStream::*)(unsigned char *) const) &google::protobuf::io::EpsCopyOutputStream::ByteCount, "C++: google::protobuf::io::EpsCopyOutputStream::ByteCount(unsigned char *) const --> long", pybind11::arg("ptr"));
		cl.def("SetInitialBuffer", (unsigned char * (google::protobuf::io::EpsCopyOutputStream::*)(void *, int)) &google::protobuf::io::EpsCopyOutputStream::SetInitialBuffer, "C++: google::protobuf::io::EpsCopyOutputStream::SetInitialBuffer(void *, int) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("data"), pybind11::arg("size"));
	}
	std::cout << "B2_[google::protobuf::io::CodedOutputStream] ";
	{ // google::protobuf::io::CodedOutputStream file:google/protobuf/io/coded_stream.h line:1050
		pybind11::class_<google::protobuf::io::CodedOutputStream, std::shared_ptr<google::protobuf::io::CodedOutputStream>> cl(M("google::protobuf::io"), "CodedOutputStream", "");
		cl.def( pybind11::init<class google::protobuf::io::ZeroCopyOutputStream *>(), pybind11::arg("stream") );

		cl.def( pybind11::init<class google::protobuf::io::ZeroCopyOutputStream *, bool>(), pybind11::arg("stream"), pybind11::arg("do_eager_refresh") );

		cl.def("HadError", (bool (google::protobuf::io::CodedOutputStream::*)()) &google::protobuf::io::CodedOutputStream::HadError, "C++: google::protobuf::io::CodedOutputStream::HadError() --> bool");
		cl.def("Trim", (void (google::protobuf::io::CodedOutputStream::*)()) &google::protobuf::io::CodedOutputStream::Trim, "C++: google::protobuf::io::CodedOutputStream::Trim() --> void");
		cl.def("Skip", (bool (google::protobuf::io::CodedOutputStream::*)(int)) &google::protobuf::io::CodedOutputStream::Skip, "C++: google::protobuf::io::CodedOutputStream::Skip(int) --> bool", pybind11::arg("count"));
		cl.def("GetDirectBufferForNBytesAndAdvance", (unsigned char * (google::protobuf::io::CodedOutputStream::*)(int)) &google::protobuf::io::CodedOutputStream::GetDirectBufferForNBytesAndAdvance, "C++: google::protobuf::io::CodedOutputStream::GetDirectBufferForNBytesAndAdvance(int) --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("size"));
		cl.def("WriteRaw", (void (google::protobuf::io::CodedOutputStream::*)(const void *, int)) &google::protobuf::io::CodedOutputStream::WriteRaw, "C++: google::protobuf::io::CodedOutputStream::WriteRaw(const void *, int) --> void", pybind11::arg("buffer"), pybind11::arg("size"));
		cl.def("WriteRawMaybeAliased", (void (google::protobuf::io::CodedOutputStream::*)(const void *, int)) &google::protobuf::io::CodedOutputStream::WriteRawMaybeAliased, "C++: google::protobuf::io::CodedOutputStream::WriteRawMaybeAliased(const void *, int) --> void", pybind11::arg("data"), pybind11::arg("size"));
		cl.def_static("WriteRawToArray", (unsigned char * (*)(const void *, int, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteRawToArray, "C++: google::protobuf::io::CodedOutputStream::WriteRawToArray(const void *, int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("buffer"), pybind11::arg("size"), pybind11::arg("target"));
		cl.def("WriteLittleEndian32", (void (google::protobuf::io::CodedOutputStream::*)(unsigned int)) &google::protobuf::io::CodedOutputStream::WriteLittleEndian32, "C++: google::protobuf::io::CodedOutputStream::WriteLittleEndian32(unsigned int) --> void", pybind11::arg("value"));
		cl.def_static("WriteLittleEndian32ToArray", (unsigned char * (*)(unsigned int, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteLittleEndian32ToArray, "C++: google::protobuf::io::CodedOutputStream::WriteLittleEndian32ToArray(unsigned int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def("WriteLittleEndian64", (void (google::protobuf::io::CodedOutputStream::*)(unsigned long)) &google::protobuf::io::CodedOutputStream::WriteLittleEndian64, "C++: google::protobuf::io::CodedOutputStream::WriteLittleEndian64(unsigned long) --> void", pybind11::arg("value"));
		cl.def_static("WriteLittleEndian64ToArray", (unsigned char * (*)(unsigned long, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteLittleEndian64ToArray, "C++: google::protobuf::io::CodedOutputStream::WriteLittleEndian64ToArray(unsigned long, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def("WriteVarint32", (void (google::protobuf::io::CodedOutputStream::*)(unsigned int)) &google::protobuf::io::CodedOutputStream::WriteVarint32, "C++: google::protobuf::io::CodedOutputStream::WriteVarint32(unsigned int) --> void", pybind11::arg("value"));
		cl.def_static("WriteVarint32ToArray", (unsigned char * (*)(unsigned int, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteVarint32ToArray, "C++: google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(unsigned int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def("WriteVarint64", (void (google::protobuf::io::CodedOutputStream::*)(unsigned long)) &google::protobuf::io::CodedOutputStream::WriteVarint64, "C++: google::protobuf::io::CodedOutputStream::WriteVarint64(unsigned long) --> void", pybind11::arg("value"));
		cl.def_static("WriteVarint64ToArray", (unsigned char * (*)(unsigned long, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteVarint64ToArray, "C++: google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(unsigned long, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def("WriteVarint32SignExtended", (void (google::protobuf::io::CodedOutputStream::*)(int)) &google::protobuf::io::CodedOutputStream::WriteVarint32SignExtended, "C++: google::protobuf::io::CodedOutputStream::WriteVarint32SignExtended(int) --> void", pybind11::arg("value"));
		cl.def_static("WriteVarint32SignExtendedToArray", (unsigned char * (*)(int, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteVarint32SignExtendedToArray, "C++: google::protobuf::io::CodedOutputStream::WriteVarint32SignExtendedToArray(int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def("WriteTag", (void (google::protobuf::io::CodedOutputStream::*)(unsigned int)) &google::protobuf::io::CodedOutputStream::WriteTag, "C++: google::protobuf::io::CodedOutputStream::WriteTag(unsigned int) --> void", pybind11::arg("value"));
		cl.def_static("WriteTagToArray", (unsigned char * (*)(unsigned int, unsigned char *)) &google::protobuf::io::CodedOutputStream::WriteTagToArray, "C++: google::protobuf::io::CodedOutputStream::WriteTagToArray(unsigned int, unsigned char *) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("value"), pybind11::arg("target"));
		cl.def_static("VarintSize32", (unsigned long (*)(unsigned int)) &google::protobuf::io::CodedOutputStream::VarintSize32, "C++: google::protobuf::io::CodedOutputStream::VarintSize32(unsigned int) --> unsigned long", pybind11::arg("value"));
		cl.def_static("VarintSize64", (unsigned long (*)(unsigned long)) &google::protobuf::io::CodedOutputStream::VarintSize64, "C++: google::protobuf::io::CodedOutputStream::VarintSize64(unsigned long) --> unsigned long", pybind11::arg("value"));
		cl.def_static("VarintSize32SignExtended", (unsigned long (*)(int)) &google::protobuf::io::CodedOutputStream::VarintSize32SignExtended, "C++: google::protobuf::io::CodedOutputStream::VarintSize32SignExtended(int) --> unsigned long", pybind11::arg("value"));
		cl.def("ByteCount", (int (google::protobuf::io::CodedOutputStream::*)() const) &google::protobuf::io::CodedOutputStream::ByteCount, "C++: google::protobuf::io::CodedOutputStream::ByteCount() const --> int");
		cl.def("EnableAliasing", (void (google::protobuf::io::CodedOutputStream::*)(bool)) &google::protobuf::io::CodedOutputStream::EnableAliasing, "C++: google::protobuf::io::CodedOutputStream::EnableAliasing(bool) --> void", pybind11::arg("enabled"));
		cl.def("SetSerializationDeterministic", (void (google::protobuf::io::CodedOutputStream::*)(bool)) &google::protobuf::io::CodedOutputStream::SetSerializationDeterministic, "C++: google::protobuf::io::CodedOutputStream::SetSerializationDeterministic(bool) --> void", pybind11::arg("value"));
		cl.def("IsSerializationDeterministic", (bool (google::protobuf::io::CodedOutputStream::*)() const) &google::protobuf::io::CodedOutputStream::IsSerializationDeterministic, "C++: google::protobuf::io::CodedOutputStream::IsSerializationDeterministic() const --> bool");
		cl.def_static("IsDefaultSerializationDeterministic", (bool (*)()) &google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic, "C++: google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic() --> bool");
		cl.def("Cur", (unsigned char * (google::protobuf::io::CodedOutputStream::*)() const) &google::protobuf::io::CodedOutputStream::Cur, "C++: google::protobuf::io::CodedOutputStream::Cur() const --> unsigned char *", pybind11::return_value_policy::reference);
		cl.def("SetCur", (void (google::protobuf::io::CodedOutputStream::*)(unsigned char *)) &google::protobuf::io::CodedOutputStream::SetCur, "C++: google::protobuf::io::CodedOutputStream::SetCur(unsigned char *) --> void", pybind11::arg("ptr"));
		cl.def("EpsCopy", (class google::protobuf::io::EpsCopyOutputStream * (google::protobuf::io::CodedOutputStream::*)()) &google::protobuf::io::CodedOutputStream::EpsCopy, "C++: google::protobuf::io::CodedOutputStream::EpsCopy() --> class google::protobuf::io::EpsCopyOutputStream *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/arena.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::Arena::InternalHelper
#include <google/protobuf/arena.h> // google::protobuf::Arena::is_arena_constructable
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_arena(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B3_[google::protobuf::ArenaOptions] ";
	{ // google::protobuf::ArenaOptions file:google/protobuf/arena.h line:126
		pybind11::class_<google::protobuf::ArenaOptions, std::shared_ptr<google::protobuf::ArenaOptions>> cl(M("google::protobuf"), "ArenaOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::ArenaOptions(); } ) );
		cl.def_readwrite("start_block_size", &google::protobuf::ArenaOptions::start_block_size);
		cl.def_readwrite("max_block_size", &google::protobuf::ArenaOptions::max_block_size);
		cl.def_readwrite("initial_block_size", &google::protobuf::ArenaOptions::initial_block_size);
	}
	std::cout << "B4_[google::protobuf::Arena] ";
	{ // google::protobuf::Arena file:google/protobuf/arena.h line:245
		pybind11::class_<google::protobuf::Arena, std::shared_ptr<google::protobuf::Arena>> cl(M("google::protobuf"), "Arena", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::Arena(); } ) );
		cl.def( pybind11::init<char *, unsigned long>(), pybind11::arg("initial_block"), pybind11::arg("initial_block_size") );

		cl.def( pybind11::init<const struct google::protobuf::ArenaOptions &>(), pybind11::arg("options") );

		cl.def_static("CreateMessage", (class google::protobuf::internal::ImplicitWeakMessage * (*)(class google::protobuf::Arena *)) &google::protobuf::Arena::CreateMessage<google::protobuf::internal::ImplicitWeakMessage>, "C++: google::protobuf::Arena::CreateMessage(class google::protobuf::Arena *) --> class google::protobuf::internal::ImplicitWeakMessage *", pybind11::return_value_policy::automatic, pybind11::arg("arena"));
		cl.def_static("Create", (struct google::protobuf::internal::InternalMetadata::Container<class google::protobuf::UnknownFieldSet> * (*)(class google::protobuf::Arena *)) &google::protobuf::Arena::Create<google::protobuf::internal::InternalMetadata::Container<google::protobuf::UnknownFieldSet>>, "C++: google::protobuf::Arena::Create(class google::protobuf::Arena *) --> struct google::protobuf::internal::InternalMetadata::Container<class google::protobuf::UnknownFieldSet> *", pybind11::return_value_policy::automatic, pybind11::arg("arena"));
		cl.def_static("CreateArray", (char * (*)(class google::protobuf::Arena *, unsigned long)) &google::protobuf::Arena::CreateArray<char>, "C++: google::protobuf::Arena::CreateArray(class google::protobuf::Arena *, unsigned long) --> char *", pybind11::return_value_policy::automatic, pybind11::arg("arena"), pybind11::arg("num_elements"));
		cl.def_static("CreateArray", (unsigned char * (*)(class google::protobuf::Arena *, unsigned long)) &google::protobuf::Arena::CreateArray<unsigned char>, "C++: google::protobuf::Arena::CreateArray(class google::protobuf::Arena *, unsigned long) --> unsigned char *", pybind11::return_value_policy::automatic, pybind11::arg("arena"), pybind11::arg("num_elements"));
		cl.def("Own", (void (google::protobuf::Arena::*)(class google::protobuf::Message *)) &google::protobuf::Arena::Own<google::protobuf::Message>, "C++: google::protobuf::Arena::Own(class google::protobuf::Message *) --> void", pybind11::arg("object"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::FileOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::FileOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::FileOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::SourceCodeInfo *)) &google::protobuf::Arena::GetArena<google::protobuf::SourceCodeInfo>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::SourceCodeInfo *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::ExtensionRangeOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::ExtensionRangeOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::ExtensionRangeOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::MessageOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::MessageOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::MessageOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::FieldOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::FieldOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::FieldOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::OneofOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::OneofOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::OneofOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::EnumOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::EnumOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::EnumOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::EnumValueOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::EnumValueOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::EnumValueOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::ServiceOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::ServiceOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::ServiceOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class google::protobuf::MethodOptions *)) &google::protobuf::Arena::GetArena<google::protobuf::MethodOptions>, "C++: google::protobuf::Arena::GetArena(const class google::protobuf::MethodOptions *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Vector3d *)) &google::protobuf::Arena::GetArena<osi3::Vector3d>, "C++: google::protobuf::Arena::GetArena(const class osi3::Vector3d *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Orientation3d *)) &google::protobuf::Arena::GetArena<osi3::Orientation3d>, "C++: google::protobuf::Arena::GetArena(const class osi3::Orientation3d *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Dimension3d *)) &google::protobuf::Arena::GetArena<osi3::Dimension3d>, "C++: google::protobuf::Arena::GetArena(const class osi3::Dimension3d *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Timestamp *)) &google::protobuf::Arena::GetArena<osi3::Timestamp>, "C++: google::protobuf::Arena::GetArena(const class osi3::Timestamp *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::TrafficSignValue *)) &google::protobuf::Arena::GetArena<osi3::TrafficSignValue>, "C++: google::protobuf::Arena::GetArena(const class osi3::TrafficSignValue *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::TrafficSign_MainSign_Classification *)) &google::protobuf::Arena::GetArena<osi3::TrafficSign_MainSign_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::TrafficSign_MainSign_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::TrafficSign_SupplementarySign_Classification *)) &google::protobuf::Arena::GetArena<osi3::TrafficSign_SupplementarySign_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::TrafficSign_SupplementarySign_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::TrafficSign_MainSign *)) &google::protobuf::Arena::GetArena<osi3::TrafficSign_MainSign>, "C++: google::protobuf::Arena::GetArena(const class osi3::TrafficSign_MainSign *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::StationaryObject_Classification *)) &google::protobuf::Arena::GetArena<osi3::StationaryObject_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::StationaryObject_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::MovingObject_VehicleClassification_LightState *)) &google::protobuf::Arena::GetArena<osi3::MovingObject_VehicleClassification_LightState>, "C++: google::protobuf::Arena::GetArena(const class osi3::MovingObject_VehicleClassification_LightState *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::MovingObject_VehicleAttributes *)) &google::protobuf::Arena::GetArena<osi3::MovingObject_VehicleAttributes>, "C++: google::protobuf::Arena::GetArena(const class osi3::MovingObject_VehicleAttributes *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::MovingObject_VehicleClassification *)) &google::protobuf::Arena::GetArena<osi3::MovingObject_VehicleClassification>, "C++: google::protobuf::Arena::GetArena(const class osi3::MovingObject_VehicleClassification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::MovingObject_MovingObjectClassification *)) &google::protobuf::Arena::GetArena<osi3::MovingObject_MovingObjectClassification>, "C++: google::protobuf::Arena::GetArena(const class osi3::MovingObject_MovingObjectClassification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::DetectedItemHeader *)) &google::protobuf::Arena::GetArena<osi3::DetectedItemHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::DetectedItemHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::DetectedTrafficSign_DetectedMainSign *)) &google::protobuf::Arena::GetArena<osi3::DetectedTrafficSign_DetectedMainSign>, "C++: google::protobuf::Arena::GetArena(const class osi3::DetectedTrafficSign_DetectedMainSign *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::TrafficLight_Classification *)) &google::protobuf::Arena::GetArena<osi3::TrafficLight_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::TrafficLight_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::RoadMarking_Classification *)) &google::protobuf::Arena::GetArena<osi3::RoadMarking_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::RoadMarking_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Lane_Classification_RoadCondition *)) &google::protobuf::Arena::GetArena<osi3::Lane_Classification_RoadCondition>, "C++: google::protobuf::Arena::GetArena(const class osi3::Lane_Classification_RoadCondition *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Lane_Classification *)) &google::protobuf::Arena::GetArena<osi3::Lane_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::Lane_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::LaneBoundary_Classification *)) &google::protobuf::Arena::GetArena<osi3::LaneBoundary_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::LaneBoundary_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::Occupant_Classification *)) &google::protobuf::Arena::GetArena<osi3::Occupant_Classification>, "C++: google::protobuf::Arena::GetArena(const class osi3::Occupant_Classification *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::EnvironmentalConditions_TimeOfDay *)) &google::protobuf::Arena::GetArena<osi3::EnvironmentalConditions_TimeOfDay>, "C++: google::protobuf::Arena::GetArena(const class osi3::EnvironmentalConditions_TimeOfDay *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::SensorDetectionHeader *)) &google::protobuf::Arena::GetArena<osi3::SensorDetectionHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::SensorDetectionHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::UltrasonicDetectionSpecificHeader *)) &google::protobuf::Arena::GetArena<osi3::UltrasonicDetectionSpecificHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::UltrasonicDetectionSpecificHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::CameraDetectionSpecificHeader *)) &google::protobuf::Arena::GetArena<osi3::CameraDetectionSpecificHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::CameraDetectionSpecificHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::LogicalDetectionDataHeader *)) &google::protobuf::Arena::GetArena<osi3::LogicalDetectionDataHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::LogicalDetectionDataHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def_static("GetArena", (class google::protobuf::Arena * (*)(const class osi3::DetectedEntityHeader *)) &google::protobuf::Arena::GetArena<osi3::DetectedEntityHeader>, "C++: google::protobuf::Arena::GetArena(const class osi3::DetectedEntityHeader *) --> class google::protobuf::Arena *", pybind11::return_value_policy::automatic, pybind11::arg("value"));
		cl.def("Init", (void (google::protobuf::Arena::*)(const struct google::protobuf::ArenaOptions &)) &google::protobuf::Arena::Init, "C++: google::protobuf::Arena::Init(const struct google::protobuf::ArenaOptions &) --> void", pybind11::arg(""));
		cl.def("SpaceAllocated", (unsigned long (google::protobuf::Arena::*)() const) &google::protobuf::Arena::SpaceAllocated, "C++: google::protobuf::Arena::SpaceAllocated() const --> unsigned long");
		cl.def("SpaceUsed", (unsigned long (google::protobuf::Arena::*)() const) &google::protobuf::Arena::SpaceUsed, "C++: google::protobuf::Arena::SpaceUsed() const --> unsigned long");
		cl.def("Reset", (unsigned long (google::protobuf::Arena::*)()) &google::protobuf::Arena::Reset, "C++: google::protobuf::Arena::Reset() --> unsigned long");

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::internal::ImplicitWeakMessage>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::internal::ImplicitWeakMessage>>> cl(enclosing_class, "InternalHelper_google_protobuf_internal_ImplicitWeakMessage_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::internal::ImplicitWeakMessage>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::FileOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::FileOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_FileOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::FileOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::SourceCodeInfo>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::SourceCodeInfo>>> cl(enclosing_class, "InternalHelper_google_protobuf_SourceCodeInfo_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::SourceCodeInfo>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::ExtensionRangeOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::ExtensionRangeOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_ExtensionRangeOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::ExtensionRangeOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::MessageOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::MessageOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_MessageOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::MessageOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::FieldOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::FieldOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_FieldOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::FieldOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::OneofOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::OneofOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_OneofOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::OneofOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::EnumOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::EnumOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_EnumOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::EnumOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::EnumValueOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::EnumValueOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_EnumValueOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::EnumValueOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::ServiceOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::ServiceOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_ServiceOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::ServiceOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<google::protobuf::MethodOptions>, std::shared_ptr<google::protobuf::Arena::InternalHelper<google::protobuf::MethodOptions>>> cl(enclosing_class, "InternalHelper_google_protobuf_MethodOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<google::protobuf::MethodOptions>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Vector3d>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Vector3d>>> cl(enclosing_class, "InternalHelper_osi3_Vector3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Vector3d>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Orientation3d>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Orientation3d>>> cl(enclosing_class, "InternalHelper_osi3_Orientation3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Orientation3d>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Dimension3d>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Dimension3d>>> cl(enclosing_class, "InternalHelper_osi3_Dimension3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Dimension3d>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Timestamp>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Timestamp>>> cl(enclosing_class, "InternalHelper_osi3_Timestamp_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Timestamp>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::TrafficSignValue>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::TrafficSignValue>>> cl(enclosing_class, "InternalHelper_osi3_TrafficSignValue_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::TrafficSignValue>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign_Classification>>> cl(enclosing_class, "InternalHelper_osi3_TrafficSign_MainSign_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_SupplementarySign_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_SupplementarySign_Classification>>> cl(enclosing_class, "InternalHelper_osi3_TrafficSign_SupplementarySign_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::TrafficSign_SupplementarySign_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign>>> cl(enclosing_class, "InternalHelper_osi3_TrafficSign_MainSign_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::TrafficSign_MainSign>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::StationaryObject_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::StationaryObject_Classification>>> cl(enclosing_class, "InternalHelper_osi3_StationaryObject_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::StationaryObject_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification_LightState>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification_LightState>>> cl(enclosing_class, "InternalHelper_osi3_MovingObject_VehicleClassification_LightState_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification_LightState>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleAttributes>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleAttributes>>> cl(enclosing_class, "InternalHelper_osi3_MovingObject_VehicleAttributes_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleAttributes>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification>>> cl(enclosing_class, "InternalHelper_osi3_MovingObject_VehicleClassification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::MovingObject_VehicleClassification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::MovingObject_MovingObjectClassification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::MovingObject_MovingObjectClassification>>> cl(enclosing_class, "InternalHelper_osi3_MovingObject_MovingObjectClassification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::MovingObject_MovingObjectClassification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::DetectedItemHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::DetectedItemHeader>>> cl(enclosing_class, "InternalHelper_osi3_DetectedItemHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::DetectedItemHeader>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::DetectedTrafficSign_DetectedMainSign>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::DetectedTrafficSign_DetectedMainSign>>> cl(enclosing_class, "InternalHelper_osi3_DetectedTrafficSign_DetectedMainSign_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::DetectedTrafficSign_DetectedMainSign>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::TrafficLight_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::TrafficLight_Classification>>> cl(enclosing_class, "InternalHelper_osi3_TrafficLight_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::TrafficLight_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::RoadMarking_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::RoadMarking_Classification>>> cl(enclosing_class, "InternalHelper_osi3_RoadMarking_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::RoadMarking_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Lane_Classification_RoadCondition>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Lane_Classification_RoadCondition>>> cl(enclosing_class, "InternalHelper_osi3_Lane_Classification_RoadCondition_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Lane_Classification_RoadCondition>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Lane_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Lane_Classification>>> cl(enclosing_class, "InternalHelper_osi3_Lane_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Lane_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::LaneBoundary_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::LaneBoundary_Classification>>> cl(enclosing_class, "InternalHelper_osi3_LaneBoundary_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::LaneBoundary_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::Occupant_Classification>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::Occupant_Classification>>> cl(enclosing_class, "InternalHelper_osi3_Occupant_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::Occupant_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::EnvironmentalConditions_TimeOfDay>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::EnvironmentalConditions_TimeOfDay>>> cl(enclosing_class, "InternalHelper_osi3_EnvironmentalConditions_TimeOfDay_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::EnvironmentalConditions_TimeOfDay>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::SensorDetectionHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::SensorDetectionHeader>>> cl(enclosing_class, "InternalHelper_osi3_SensorDetectionHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::SensorDetectionHeader>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::UltrasonicDetectionSpecificHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::UltrasonicDetectionSpecificHeader>>> cl(enclosing_class, "InternalHelper_osi3_UltrasonicDetectionSpecificHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::UltrasonicDetectionSpecificHeader>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::CameraDetectionSpecificHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::CameraDetectionSpecificHeader>>> cl(enclosing_class, "InternalHelper_osi3_CameraDetectionSpecificHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::CameraDetectionSpecificHeader>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::LogicalDetectionDataHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::LogicalDetectionDataHeader>>> cl(enclosing_class, "InternalHelper_osi3_LogicalDetectionDataHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::LogicalDetectionDataHeader>(); } ) );
		}

		{ // google::protobuf::Arena::InternalHelper file:google/protobuf/arena.h line:401
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::InternalHelper<osi3::DetectedEntityHeader>, std::shared_ptr<google::protobuf::Arena::InternalHelper<osi3::DetectedEntityHeader>>> cl(enclosing_class, "InternalHelper_osi3_DetectedEntityHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::InternalHelper<osi3::DetectedEntityHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::internal::ImplicitWeakMessage>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::internal::ImplicitWeakMessage>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_internal_ImplicitWeakMessage_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::internal::ImplicitWeakMessage>(); } ) );
			cl.def( pybind11::init( [](google::protobuf::Arena::is_arena_constructable<google::protobuf::internal::ImplicitWeakMessage> const &o){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::internal::ImplicitWeakMessage>(o); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::FileOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::FileOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_FileOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::FileOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::SourceCodeInfo>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::SourceCodeInfo>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_SourceCodeInfo_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::SourceCodeInfo>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::ExtensionRangeOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::ExtensionRangeOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_ExtensionRangeOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::ExtensionRangeOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::MessageOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::MessageOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_MessageOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::MessageOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::FieldOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::FieldOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_FieldOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::FieldOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::OneofOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::OneofOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_OneofOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::OneofOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_EnumOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumValueOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumValueOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_EnumValueOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::EnumValueOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::ServiceOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::ServiceOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_ServiceOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::ServiceOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<google::protobuf::MethodOptions>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<google::protobuf::MethodOptions>>> cl(enclosing_class, "is_arena_constructable_google_protobuf_MethodOptions_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<google::protobuf::MethodOptions>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Vector3d>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Vector3d>>> cl(enclosing_class, "is_arena_constructable_osi3_Vector3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Vector3d>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Orientation3d>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Orientation3d>>> cl(enclosing_class, "is_arena_constructable_osi3_Orientation3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Orientation3d>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Dimension3d>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Dimension3d>>> cl(enclosing_class, "is_arena_constructable_osi3_Dimension3d_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Dimension3d>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Timestamp>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Timestamp>>> cl(enclosing_class, "is_arena_constructable_osi3_Timestamp_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Timestamp>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSignValue>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSignValue>>> cl(enclosing_class, "is_arena_constructable_osi3_TrafficSignValue_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::TrafficSignValue>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_TrafficSign_MainSign_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_SupplementarySign_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_SupplementarySign_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_TrafficSign_SupplementarySign_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_SupplementarySign_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign>>> cl(enclosing_class, "is_arena_constructable_osi3_TrafficSign_MainSign_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::TrafficSign_MainSign>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::StationaryObject_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::StationaryObject_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_StationaryObject_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::StationaryObject_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification_LightState>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification_LightState>>> cl(enclosing_class, "is_arena_constructable_osi3_MovingObject_VehicleClassification_LightState_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification_LightState>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleAttributes>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleAttributes>>> cl(enclosing_class, "is_arena_constructable_osi3_MovingObject_VehicleAttributes_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleAttributes>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification>>> cl(enclosing_class, "is_arena_constructable_osi3_MovingObject_VehicleClassification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_VehicleClassification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_MovingObjectClassification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_MovingObjectClassification>>> cl(enclosing_class, "is_arena_constructable_osi3_MovingObject_MovingObjectClassification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::MovingObject_MovingObjectClassification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::DetectedItemHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::DetectedItemHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_DetectedItemHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::DetectedItemHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::DetectedTrafficSign_DetectedMainSign>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::DetectedTrafficSign_DetectedMainSign>>> cl(enclosing_class, "is_arena_constructable_osi3_DetectedTrafficSign_DetectedMainSign_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::DetectedTrafficSign_DetectedMainSign>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::TrafficLight_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::TrafficLight_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_TrafficLight_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::TrafficLight_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::RoadMarking_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::RoadMarking_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_RoadMarking_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::RoadMarking_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification_RoadCondition>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification_RoadCondition>>> cl(enclosing_class, "is_arena_constructable_osi3_Lane_Classification_RoadCondition_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification_RoadCondition>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_Lane_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Lane_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::LaneBoundary_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::LaneBoundary_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_LaneBoundary_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::LaneBoundary_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::Occupant_Classification>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::Occupant_Classification>>> cl(enclosing_class, "is_arena_constructable_osi3_Occupant_Classification_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::Occupant_Classification>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::EnvironmentalConditions_TimeOfDay>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::EnvironmentalConditions_TimeOfDay>>> cl(enclosing_class, "is_arena_constructable_osi3_EnvironmentalConditions_TimeOfDay_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::EnvironmentalConditions_TimeOfDay>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::SensorDetectionHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::SensorDetectionHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_SensorDetectionHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::SensorDetectionHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::UltrasonicDetectionSpecificHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::UltrasonicDetectionSpecificHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_UltrasonicDetectionSpecificHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::UltrasonicDetectionSpecificHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::CameraDetectionSpecificHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::CameraDetectionSpecificHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_CameraDetectionSpecificHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::CameraDetectionSpecificHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::LogicalDetectionDataHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::LogicalDetectionDataHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_LogicalDetectionDataHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::LogicalDetectionDataHeader>(); } ) );
		}

		{ // google::protobuf::Arena::is_arena_constructable file:google/protobuf/arena.h line:460
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Arena::is_arena_constructable<osi3::DetectedEntityHeader>, std::shared_ptr<google::protobuf::Arena::is_arena_constructable<osi3::DetectedEntityHeader>>> cl(enclosing_class, "is_arena_constructable_osi3_DetectedEntityHeader_t", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Arena::is_arena_constructable<osi3::DetectedEntityHeader>(); } ) );
		}

	}
}


// File: google/protobuf/metadata_lite.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::LiteUnknownFieldSetter
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_metadata_lite(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B5_[google::protobuf::internal::InternalMetadata] ";
	{ // google::protobuf::internal::InternalMetadata file:google/protobuf/metadata_lite.h line:62
		pybind11::class_<google::protobuf::internal::InternalMetadata, std::shared_ptr<google::protobuf::internal::InternalMetadata>> cl(M("google::protobuf::internal"), "InternalMetadata", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::internal::InternalMetadata(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::internal::InternalMetadata const &o){ return new google::protobuf::internal::InternalMetadata(o); } ) );
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::internal::InternalMetadata::*)()) &google::protobuf::internal::InternalMetadata::mutable_unknown_fields<google::protobuf::UnknownFieldSet>, "C++: google::protobuf::internal::InternalMetadata::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def("arena", (class google::protobuf::Arena * (google::protobuf::internal::InternalMetadata::*)() const) &google::protobuf::internal::InternalMetadata::arena, "C++: google::protobuf::internal::InternalMetadata::arena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("have_unknown_fields", (bool (google::protobuf::internal::InternalMetadata::*)() const) &google::protobuf::internal::InternalMetadata::have_unknown_fields, "C++: google::protobuf::internal::InternalMetadata::have_unknown_fields() const --> bool");
		cl.def("raw_arena_ptr", (void * (google::protobuf::internal::InternalMetadata::*)() const) &google::protobuf::internal::InternalMetadata::raw_arena_ptr, "C++: google::protobuf::internal::InternalMetadata::raw_arena_ptr() const --> void *", pybind11::return_value_policy::reference);
		cl.def("GetOwningArena", (class google::protobuf::Arena * (google::protobuf::internal::InternalMetadata::*)() const) &google::protobuf::internal::InternalMetadata::GetOwningArena, "C++: google::protobuf::internal::InternalMetadata::GetOwningArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("SetOwningArena", (void (google::protobuf::internal::InternalMetadata::*)(class google::protobuf::Arena *)) &google::protobuf::internal::InternalMetadata::SetOwningArena, "C++: google::protobuf::internal::InternalMetadata::SetOwningArena(class google::protobuf::Arena *) --> void", pybind11::arg("arena"));
	}
	std::cout << "B6_[google::protobuf::internal::LiteUnknownFieldSetter] ";
}


// File: google/protobuf/repeated_field.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B7_[google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_DescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::DescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Get(int) const --> const class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::DescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Mutable(int) --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::DescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Add() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::DescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::operator[](int) --> class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::DescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::at(int) --> class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::DescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::AddAllocated(class google::protobuf::DescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::DescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ReleaseLast() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::DescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::DescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::DescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::DescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::AddCleared(class google::protobuf::DescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::DescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::ReleaseCleared() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B8_[google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_EnumDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::EnumDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Get(int) const --> const class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::EnumDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Mutable(int) --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::EnumDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Add() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::EnumDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::operator[](int) --> class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::EnumDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::at(int) --> class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::EnumDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::AddAllocated(class google::protobuf::EnumDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::EnumDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ReleaseLast() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::EnumDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::EnumDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::EnumDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::EnumDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::AddCleared(class google::protobuf::EnumDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::EnumDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::ReleaseCleared() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B9_[google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_ServiceDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::ServiceDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Get(int) const --> const class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Mutable(int) --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Add() --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::ServiceDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::operator[](int) --> class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::ServiceDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::at(int) --> class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::ServiceDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::AddAllocated(class google::protobuf::ServiceDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ReleaseLast() --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::ServiceDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::ServiceDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::ServiceDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::AddCleared(class google::protobuf::ServiceDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::ReleaseCleared() --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B10_[google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_FieldDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::FieldDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Get(int) const --> const class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::FieldDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Mutable(int) --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::FieldDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Add() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::FieldDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::operator[](int) --> class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::FieldDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::at(int) --> class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::FieldDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::AddAllocated(class google::protobuf::FieldDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::FieldDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ReleaseLast() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::FieldDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::FieldDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::FieldDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::FieldDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::AddCleared(class google::protobuf::FieldDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::FieldDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::ReleaseCleared() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_2.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_2(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B11_[google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_DescriptorProto_ExtensionRange_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::size() const --> int");
		cl.def("Get", (const class google::protobuf::DescriptorProto_ExtensionRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Get(int) const --> const class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Mutable(int) --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Add() --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::DescriptorProto_ExtensionRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::operator[](int) --> class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::DescriptorProto_ExtensionRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::at(int) --> class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::DescriptorProto_ExtensionRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::AddAllocated(class google::protobuf::DescriptorProto_ExtensionRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ReleaseLast() --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::DescriptorProto_ExtensionRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaAddAllocated(class google::protobuf::DescriptorProto_ExtensionRange *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::UnsafeArenaReleaseLast() --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::DescriptorProto_ExtensionRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::AddCleared(class google::protobuf::DescriptorProto_ExtensionRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::ReleaseCleared() --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B12_[google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_OneofDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::OneofDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Get(int) const --> const class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::OneofDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Mutable(int) --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::OneofDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Add() --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::OneofDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::operator[](int) --> class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::OneofDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::at(int) --> class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::OneofDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::AddAllocated(class google::protobuf::OneofDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::OneofDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ReleaseLast() --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::OneofDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::OneofDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::OneofDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::OneofDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::AddCleared(class google::protobuf::OneofDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::OneofDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::ReleaseCleared() --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_3.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_3(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B13_[google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_DescriptorProto_ReservedRange_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::size() const --> int");
		cl.def("Get", (const class google::protobuf::DescriptorProto_ReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Get(int) const --> const class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Mutable(int) --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Add() --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::DescriptorProto_ReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::operator[](int) --> class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::DescriptorProto_ReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::at(int) --> class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::DescriptorProto_ReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::AddAllocated(class google::protobuf::DescriptorProto_ReservedRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ReleaseLast() --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::DescriptorProto_ReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaAddAllocated(class google::protobuf::DescriptorProto_ReservedRange *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::UnsafeArenaReleaseLast() --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::DescriptorProto_ReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::AddCleared(class google::protobuf::DescriptorProto_ReservedRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::ReleaseCleared() --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B14_[google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_UninterpretedOption_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::size() const --> int");
		cl.def("Get", (const class google::protobuf::UninterpretedOption & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Get(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::UninterpretedOption * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Mutable(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::UninterpretedOption * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Add() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::UninterpretedOption & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::operator[](int) --> class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::UninterpretedOption & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::at(int) --> class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::UninterpretedOption *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::AddAllocated(class google::protobuf::UninterpretedOption *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::UninterpretedOption * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ReleaseLast() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::UninterpretedOption *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaAddAllocated(class google::protobuf::UninterpretedOption *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::UninterpretedOption * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::UnsafeArenaReleaseLast() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::UninterpretedOption *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::AddCleared(class google::protobuf::UninterpretedOption *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::UninterpretedOption * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::ReleaseCleared() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_4.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_4(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B15_[google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_EnumValueDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::EnumValueDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Get(int) const --> const class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Mutable(int) --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Add() --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::EnumValueDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::operator[](int) --> class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::EnumValueDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::at(int) --> class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::EnumValueDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::AddAllocated(class google::protobuf::EnumValueDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ReleaseLast() --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::EnumValueDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::EnumValueDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::EnumValueDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::AddCleared(class google::protobuf::EnumValueDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::ReleaseCleared() --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B16_[google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_EnumDescriptorProto_EnumReservedRange_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::size() const --> int");
		cl.def("Get", (const class google::protobuf::EnumDescriptorProto_EnumReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Get(int) const --> const class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Mutable(int) --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Add() --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::EnumDescriptorProto_EnumReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::operator[](int) --> class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::EnumDescriptorProto_EnumReservedRange & (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::at(int) --> class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::EnumDescriptorProto_EnumReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::AddAllocated(class google::protobuf::EnumDescriptorProto_EnumReservedRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ReleaseLast() --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::EnumDescriptorProto_EnumReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaAddAllocated(class google::protobuf::EnumDescriptorProto_EnumReservedRange *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::UnsafeArenaReleaseLast() --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::EnumDescriptorProto_EnumReservedRange *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::AddCleared(class google::protobuf::EnumDescriptorProto_EnumReservedRange *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::ReleaseCleared() --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *)) &google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_5.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_5(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B17_[google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_MethodDescriptorProto_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> & (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::size() const --> int");
		cl.def("Get", (const class google::protobuf::MethodDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Get(int) const --> const class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::MethodDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Mutable(int) --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::MethodDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Add() --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::MethodDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::operator[](int) --> class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::MethodDescriptorProto & (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::at(int) --> class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::MethodDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::AddAllocated(class google::protobuf::MethodDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::MethodDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ReleaseLast() --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::MethodDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaAddAllocated(class google::protobuf::MethodDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::MethodDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::UnsafeArenaReleaseLast() --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::MethodDescriptorProto *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::AddCleared(class google::protobuf::MethodDescriptorProto *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::MethodDescriptorProto * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::ReleaseCleared() --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *)) &google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B18_[google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_UninterpretedOption_NamePart_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::size() const --> int");
		cl.def("Get", (const class google::protobuf::UninterpretedOption_NamePart & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Get(int) const --> const class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Mutable(int) --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Add() --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::UninterpretedOption_NamePart & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::operator[](int) --> class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::UninterpretedOption_NamePart & (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::at(int) --> class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::UninterpretedOption_NamePart *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::AddAllocated(class google::protobuf::UninterpretedOption_NamePart *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ReleaseLast() --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::UninterpretedOption_NamePart *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaAddAllocated(class google::protobuf::UninterpretedOption_NamePart *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::UnsafeArenaReleaseLast() --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::UninterpretedOption_NamePart *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::AddCleared(class google::protobuf::UninterpretedOption_NamePart *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::ReleaseCleared() --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *)) &google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_6.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::GeneratedCodeInfo_Annotation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_6(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B19_[google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>, std::shared_ptr<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>>> cl(M("google::protobuf"), "RepeatedPtrField_google_protobuf_SourceCodeInfo_Location_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location> const &o){ return new google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> & (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::operator=, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::operator=(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &) --> class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::empty, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::size, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::size() const --> int");
		cl.def("Get", (const class google::protobuf::SourceCodeInfo_Location & (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int) const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Get, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Get(int) const --> const class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Mutable, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Mutable(int) --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Add, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Add() --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class google::protobuf::SourceCodeInfo_Location & (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::operator[], "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::operator[](int) --> class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class google::protobuf::SourceCodeInfo_Location & (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::at, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::at(int) --> class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Clear, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::MergeFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::CopyFrom(const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Reserve, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Capacity, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Swap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::Swap(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(int, int)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SwapElements, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::SourceCodeInfo_Location *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::AddAllocated(class google::protobuf::SourceCodeInfo_Location *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ReleaseLast() --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::SourceCodeInfo_Location *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaAddAllocated(class google::protobuf::SourceCodeInfo_Location *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::UnsafeArenaReleaseLast() --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::SourceCodeInfo_Location *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::AddCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::AddCleared(class google::protobuf::SourceCodeInfo_Location *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)()) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::ReleaseCleared() --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)() const) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::GetArena, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::*)(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *)) &google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::InternalSwap(class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B20_[google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>] ";
	std::cout << "B21_[google::protobuf::RepeatedPtrField<osi3::Vector2d>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Vector2d>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Vector2d>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Vector2d_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Vector2d>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Vector2d> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Vector2d>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Vector2d> & (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &) --> class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::size() const --> int");
		cl.def("Get", (const class osi3::Vector2d & (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Get(int) const --> const class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Vector2d * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Mutable(int) --> class osi3::Vector2d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Vector2d * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Add() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Vector2d & (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::operator[](int) --> class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Vector2d & (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::at(int) --> class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class osi3::Vector2d *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::AddAllocated(class osi3::Vector2d *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Vector2d * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::ReleaseLast() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class osi3::Vector2d *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaAddAllocated(class osi3::Vector2d *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Vector2d * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::UnsafeArenaReleaseLast() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class osi3::Vector2d *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::AddCleared(class osi3::Vector2d *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Vector2d * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::ReleaseCleared() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Vector2d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector2d>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector2d>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_7.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_7(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B22_[google::protobuf::RepeatedPtrField<osi3::Identifier>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Identifier>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Identifier>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Identifier_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Identifier>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Identifier> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Identifier>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &) --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::size() const --> int");
		cl.def("Get", (const class osi3::Identifier & (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Get(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Identifier * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Mutable(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Identifier * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Add() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Identifier & (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::operator[](int) --> class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Identifier & (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::at(int) --> class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class osi3::Identifier *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::AddAllocated(class osi3::Identifier *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Identifier * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::ReleaseLast() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class osi3::Identifier *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaAddAllocated(class osi3::Identifier *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Identifier * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::UnsafeArenaReleaseLast() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class osi3::Identifier *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::AddCleared(class osi3::Identifier *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Identifier * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)()) &google::protobuf::RepeatedPtrField<osi3::Identifier>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::ReleaseCleared() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Identifier>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Identifier>::*)(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *)) &google::protobuf::RepeatedPtrField<osi3::Identifier>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Identifier>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Identifier> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B23_[google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_TrafficSignValue_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::TrafficSignValue> const &o){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> & (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &) --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::size, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::size() const --> int");
		cl.def("Get", (const class osi3::TrafficSignValue & (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Get(int) const --> const class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::TrafficSignValue * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Mutable(int) --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::TrafficSignValue * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Add() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::TrafficSignValue & (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::operator[](int) --> class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::TrafficSignValue & (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::at, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::at(int) --> class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::Swap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class osi3::TrafficSignValue *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::AddAllocated(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::TrafficSignValue * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ReleaseLast() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class osi3::TrafficSignValue *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaAddAllocated(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::TrafficSignValue * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::UnsafeArenaReleaseLast() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class osi3::TrafficSignValue *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::AddCleared(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::TrafficSignValue * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::ReleaseCleared() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSignValue>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_8.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_8(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B24_[google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_TrafficSign_SupplementarySign_Classification_Arrow_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow> const &o){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &) --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::size, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::size() const --> int");
		cl.def("Get", (const class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Get(int) const --> const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Mutable(int) --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Add() --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::operator[](int) --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::at, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::at(int) --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::Swap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::AddAllocated(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ReleaseLast() --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaAddAllocated(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::UnsafeArenaReleaseLast() --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::AddCleared(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::ReleaseCleared() --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign_Classification_Arrow>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B25_[google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_TrafficSign_SupplementarySign_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign> const &o){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &) --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::size, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::size() const --> int");
		cl.def("Get", (const class osi3::TrafficSign_SupplementarySign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Get(int) const --> const class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::TrafficSign_SupplementarySign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Mutable(int) --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::TrafficSign_SupplementarySign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Add() --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::TrafficSign_SupplementarySign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::operator[](int) --> class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::TrafficSign_SupplementarySign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::at, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::at(int) --> class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::Swap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class osi3::TrafficSign_SupplementarySign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::AddAllocated(class osi3::TrafficSign_SupplementarySign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::TrafficSign_SupplementarySign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ReleaseLast() --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class osi3::TrafficSign_SupplementarySign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaAddAllocated(class osi3::TrafficSign_SupplementarySign *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::TrafficSign_SupplementarySign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::UnsafeArenaReleaseLast() --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class osi3::TrafficSign_SupplementarySign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::AddCleared(class osi3::TrafficSign_SupplementarySign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::TrafficSign_SupplementarySign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::ReleaseCleared() --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign_SupplementarySign>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_9.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_9(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B26_[google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_MovingObject_VehicleAttributes_WheelData_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData> const &o){ return new google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> & (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &) --> class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::size, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::size() const --> int");
		cl.def("Get", (const class osi3::MovingObject_VehicleAttributes_WheelData & (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Get(int) const --> const class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::MovingObject_VehicleAttributes_WheelData * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Mutable(int) --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::MovingObject_VehicleAttributes_WheelData * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Add() --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::MovingObject_VehicleAttributes_WheelData & (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::operator[](int) --> class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::MovingObject_VehicleAttributes_WheelData & (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::at, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::at(int) --> class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::Swap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class osi3::MovingObject_VehicleAttributes_WheelData *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::AddAllocated(class osi3::MovingObject_VehicleAttributes_WheelData *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::MovingObject_VehicleAttributes_WheelData * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ReleaseLast() --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class osi3::MovingObject_VehicleAttributes_WheelData *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaAddAllocated(class osi3::MovingObject_VehicleAttributes_WheelData *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::MovingObject_VehicleAttributes_WheelData * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::UnsafeArenaReleaseLast() --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class osi3::MovingObject_VehicleAttributes_WheelData *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::AddCleared(class osi3::MovingObject_VehicleAttributes_WheelData *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::MovingObject_VehicleAttributes_WheelData * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::ReleaseCleared() --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject_VehicleAttributes_WheelData>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B27_[google::protobuf::RepeatedPtrField<osi3::StatePoint>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::StatePoint>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::StatePoint>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_StatePoint_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::StatePoint>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::StatePoint> const &o){ return new google::protobuf::RepeatedPtrField<osi3::StatePoint>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::StatePoint> & (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &) --> class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::size, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::size() const --> int");
		cl.def("Get", (const class osi3::StatePoint & (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Get(int) const --> const class osi3::StatePoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::StatePoint * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Mutable(int) --> class osi3::StatePoint *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::StatePoint * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Add() --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::StatePoint & (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::operator[](int) --> class osi3::StatePoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::StatePoint & (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::at, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::at(int) --> class osi3::StatePoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::Swap(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class osi3::StatePoint *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::AddAllocated(class osi3::StatePoint *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::StatePoint * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::ReleaseLast() --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class osi3::StatePoint *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaAddAllocated(class osi3::StatePoint *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::StatePoint * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::UnsafeArenaReleaseLast() --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class osi3::StatePoint *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::AddCleared(class osi3::StatePoint *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::StatePoint * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::ReleaseCleared() --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::StatePoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *)) &google::protobuf::RepeatedPtrField<osi3::StatePoint>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::StatePoint>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_10.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_10(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B28_[google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_DetectedTrafficSign_DetectedMainSign_CandidateMainSign_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> const &o){ return new google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> & (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &) --> class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::size, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::size() const --> int");
		cl.def("Get", (const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Get(int) const --> const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Mutable(int) --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Add() --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::operator[](int) --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::at, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::at(int) --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::Swap(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::AddAllocated(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ReleaseLast() --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaAddAllocated(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::UnsafeArenaReleaseLast() --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::AddCleared(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::ReleaseCleared() --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *)) &google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B29_[google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign>] ";
	std::cout << "B30_[google::protobuf::RepeatedPtrField<osi3::DetectedTrafficSign_DetectedSupplementarySign>] ";
	std::cout << "B31_[google::protobuf::RepeatedPtrField<osi3::DetectedTrafficLight_CandidateTrafficLight>] ";
}


// File: google/protobuf/repeated_field_11.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_11(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B32_[google::protobuf::RepeatedPtrField<osi3::Vector3d>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Vector3d>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Vector3d>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Vector3d_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Vector3d>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Vector3d> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Vector3d>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Vector3d> & (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &) --> class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::size() const --> int");
		cl.def("Get", (const class osi3::Vector3d & (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Get(int) const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Vector3d * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Mutable(int) --> class osi3::Vector3d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Vector3d * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Add() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Vector3d & (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::operator[](int) --> class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Vector3d & (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::at(int) --> class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class osi3::Vector3d *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::AddAllocated(class osi3::Vector3d *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Vector3d * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::ReleaseLast() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class osi3::Vector3d *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaAddAllocated(class osi3::Vector3d *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Vector3d * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::UnsafeArenaReleaseLast() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class osi3::Vector3d *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::AddCleared(class osi3::Vector3d *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Vector3d * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)()) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::ReleaseCleared() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Vector3d>::*)(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *)) &google::protobuf::RepeatedPtrField<osi3::Vector3d>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Vector3d>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B33_[google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Lane_Classification_LanePairing_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> & (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &) --> class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::size() const --> int");
		cl.def("Get", (const class osi3::Lane_Classification_LanePairing & (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Get(int) const --> const class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Lane_Classification_LanePairing * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Mutable(int) --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Lane_Classification_LanePairing * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Add() --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Lane_Classification_LanePairing & (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::operator[](int) --> class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Lane_Classification_LanePairing & (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::at(int) --> class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class osi3::Lane_Classification_LanePairing *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::AddAllocated(class osi3::Lane_Classification_LanePairing *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Lane_Classification_LanePairing * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ReleaseLast() --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class osi3::Lane_Classification_LanePairing *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaAddAllocated(class osi3::Lane_Classification_LanePairing *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Lane_Classification_LanePairing * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::UnsafeArenaReleaseLast() --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class osi3::Lane_Classification_LanePairing *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::AddCleared(class osi3::Lane_Classification_LanePairing *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Lane_Classification_LanePairing * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::ReleaseCleared() --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *)) &google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane_Classification_LanePairing>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_12.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_12(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B34_[google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_LaneBoundary_BoundaryPoint_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint> const &o){ return new google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &) --> class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::size, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::size() const --> int");
		cl.def("Get", (const class osi3::LaneBoundary_BoundaryPoint & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Get(int) const --> const class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::LaneBoundary_BoundaryPoint * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Mutable(int) --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::LaneBoundary_BoundaryPoint * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Add() --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::LaneBoundary_BoundaryPoint & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::operator[](int) --> class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::LaneBoundary_BoundaryPoint & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::at, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::at(int) --> class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::Swap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class osi3::LaneBoundary_BoundaryPoint *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::AddAllocated(class osi3::LaneBoundary_BoundaryPoint *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::LaneBoundary_BoundaryPoint * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ReleaseLast() --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class osi3::LaneBoundary_BoundaryPoint *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaAddAllocated(class osi3::LaneBoundary_BoundaryPoint *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::LaneBoundary_BoundaryPoint * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::UnsafeArenaReleaseLast() --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class osi3::LaneBoundary_BoundaryPoint *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::AddCleared(class osi3::LaneBoundary_BoundaryPoint *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::LaneBoundary_BoundaryPoint * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::ReleaseCleared() --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary_BoundaryPoint>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B35_[google::protobuf::RepeatedPtrField<osi3::DetectedLane_CandidateLane>] ";
	std::cout << "B36_[google::protobuf::RepeatedPtrField<osi3::DetectedLaneBoundary_CandidateLaneBoundary>] ";
	std::cout << "B37_[google::protobuf::RepeatedPtrField<osi3::DetectedOccupant_CandidateOccupant>] ";
	std::cout << "B38_[google::protobuf::RepeatedPtrField<osi3::StationaryObject>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::StationaryObject>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::StationaryObject>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_StationaryObject_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::StationaryObject>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::StationaryObject> const &o){ return new google::protobuf::RepeatedPtrField<osi3::StationaryObject>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> & (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &) --> class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::size, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::size() const --> int");
		cl.def("Get", (const class osi3::StationaryObject & (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Get(int) const --> const class osi3::StationaryObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::StationaryObject * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Mutable(int) --> class osi3::StationaryObject *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::StationaryObject * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Add() --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::StationaryObject & (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::operator[](int) --> class osi3::StationaryObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::StationaryObject & (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::at, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::at(int) --> class osi3::StationaryObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::Swap(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class osi3::StationaryObject *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::AddAllocated(class osi3::StationaryObject *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::StationaryObject * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ReleaseLast() --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class osi3::StationaryObject *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaAddAllocated(class osi3::StationaryObject *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::StationaryObject * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::UnsafeArenaReleaseLast() --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class osi3::StationaryObject *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::AddCleared(class osi3::StationaryObject *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::StationaryObject * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::ReleaseCleared() --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::StationaryObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *)) &google::protobuf::RepeatedPtrField<osi3::StationaryObject>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::StationaryObject>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_13.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_13(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B39_[google::protobuf::RepeatedPtrField<osi3::MovingObject>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::MovingObject>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::MovingObject>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_MovingObject_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::MovingObject>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::MovingObject> const &o){ return new google::protobuf::RepeatedPtrField<osi3::MovingObject>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::MovingObject> & (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &) --> class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::size, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::size() const --> int");
		cl.def("Get", (const class osi3::MovingObject & (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Get(int) const --> const class osi3::MovingObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::MovingObject * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Mutable(int) --> class osi3::MovingObject *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::MovingObject * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Add() --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::MovingObject & (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::operator[](int) --> class osi3::MovingObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::MovingObject & (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::at, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::at(int) --> class osi3::MovingObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::Swap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class osi3::MovingObject *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::AddAllocated(class osi3::MovingObject *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::MovingObject * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::ReleaseLast() --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class osi3::MovingObject *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaAddAllocated(class osi3::MovingObject *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::MovingObject * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::UnsafeArenaReleaseLast() --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class osi3::MovingObject *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::AddCleared(class osi3::MovingObject *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::MovingObject * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)()) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::ReleaseCleared() --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)() const) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::MovingObject>::*)(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *)) &google::protobuf::RepeatedPtrField<osi3::MovingObject>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::MovingObject>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B40_[google::protobuf::RepeatedPtrField<osi3::TrafficSign>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::TrafficSign>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::TrafficSign>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_TrafficSign_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::TrafficSign> const &o){ return new google::protobuf::RepeatedPtrField<osi3::TrafficSign>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> & (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &) --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::size, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::size() const --> int");
		cl.def("Get", (const class osi3::TrafficSign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Get(int) const --> const class osi3::TrafficSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::TrafficSign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Mutable(int) --> class osi3::TrafficSign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::TrafficSign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Add() --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::TrafficSign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::operator[](int) --> class osi3::TrafficSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::TrafficSign & (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::at, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::at(int) --> class osi3::TrafficSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::Swap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class osi3::TrafficSign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::AddAllocated(class osi3::TrafficSign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::TrafficSign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ReleaseLast() --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class osi3::TrafficSign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaAddAllocated(class osi3::TrafficSign *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::TrafficSign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::UnsafeArenaReleaseLast() --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class osi3::TrafficSign *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::AddCleared(class osi3::TrafficSign *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::TrafficSign * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::ReleaseCleared() --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficSign>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficSign>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficSign>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_14.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_14(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B41_[google::protobuf::RepeatedPtrField<osi3::TrafficLight>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::TrafficLight>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::TrafficLight>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_TrafficLight_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::TrafficLight>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::TrafficLight> const &o){ return new google::protobuf::RepeatedPtrField<osi3::TrafficLight>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> & (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &) --> class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::size, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::size() const --> int");
		cl.def("Get", (const class osi3::TrafficLight & (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Get(int) const --> const class osi3::TrafficLight &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::TrafficLight * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Mutable(int) --> class osi3::TrafficLight *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::TrafficLight * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Add() --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::TrafficLight & (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::operator[](int) --> class osi3::TrafficLight &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::TrafficLight & (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::at, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::at(int) --> class osi3::TrafficLight &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::Swap(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class osi3::TrafficLight *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::AddAllocated(class osi3::TrafficLight *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::TrafficLight * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ReleaseLast() --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class osi3::TrafficLight *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaAddAllocated(class osi3::TrafficLight *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::TrafficLight * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::UnsafeArenaReleaseLast() --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class osi3::TrafficLight *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::AddCleared(class osi3::TrafficLight *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::TrafficLight * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)()) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::ReleaseCleared() --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)() const) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::TrafficLight>::*)(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *)) &google::protobuf::RepeatedPtrField<osi3::TrafficLight>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::TrafficLight>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B42_[google::protobuf::RepeatedPtrField<osi3::RoadMarking>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::RoadMarking>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::RoadMarking>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_RoadMarking_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::RoadMarking>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::RoadMarking> const &o){ return new google::protobuf::RepeatedPtrField<osi3::RoadMarking>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> & (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &) --> class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::size, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::size() const --> int");
		cl.def("Get", (const class osi3::RoadMarking & (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Get(int) const --> const class osi3::RoadMarking &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::RoadMarking * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Mutable(int) --> class osi3::RoadMarking *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::RoadMarking * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Add() --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::RoadMarking & (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::operator[](int) --> class osi3::RoadMarking &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::RoadMarking & (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::at, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::at(int) --> class osi3::RoadMarking &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::Swap(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class osi3::RoadMarking *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::AddAllocated(class osi3::RoadMarking *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::RoadMarking * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ReleaseLast() --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class osi3::RoadMarking *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaAddAllocated(class osi3::RoadMarking *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::RoadMarking * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::UnsafeArenaReleaseLast() --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class osi3::RoadMarking *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::AddCleared(class osi3::RoadMarking *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::RoadMarking * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)()) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::ReleaseCleared() --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::RoadMarking>::*)(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *)) &google::protobuf::RepeatedPtrField<osi3::RoadMarking>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RoadMarking>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_15.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_15(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B43_[google::protobuf::RepeatedPtrField<osi3::LaneBoundary>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::LaneBoundary>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::LaneBoundary>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_LaneBoundary_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::LaneBoundary>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::LaneBoundary> const &o){ return new google::protobuf::RepeatedPtrField<osi3::LaneBoundary>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &) --> class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::size, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::size() const --> int");
		cl.def("Get", (const class osi3::LaneBoundary & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Get(int) const --> const class osi3::LaneBoundary &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::LaneBoundary * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Mutable(int) --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::LaneBoundary * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Add() --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::LaneBoundary & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::operator[](int) --> class osi3::LaneBoundary &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::LaneBoundary & (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::at, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::at(int) --> class osi3::LaneBoundary &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::Swap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class osi3::LaneBoundary *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::AddAllocated(class osi3::LaneBoundary *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::LaneBoundary * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ReleaseLast() --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class osi3::LaneBoundary *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaAddAllocated(class osi3::LaneBoundary *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::LaneBoundary * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::UnsafeArenaReleaseLast() --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class osi3::LaneBoundary *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::AddCleared(class osi3::LaneBoundary *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::LaneBoundary * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)()) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::ReleaseCleared() --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::*)(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *)) &google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LaneBoundary>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B44_[google::protobuf::RepeatedPtrField<osi3::Lane>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Lane>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Lane>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Lane_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Lane>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Lane> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Lane>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Lane> & (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &)) &google::protobuf::RepeatedPtrField<osi3::Lane>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &) --> class google::protobuf::RepeatedPtrField<class osi3::Lane> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::size() const --> int");
		cl.def("Get", (const class osi3::Lane & (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Lane>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Get(int) const --> const class osi3::Lane &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Lane * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Mutable(int) --> class osi3::Lane *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Lane * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Add() --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Lane & (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::operator[](int) --> class osi3::Lane &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Lane & (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::at(int) --> class osi3::Lane &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &)) &google::protobuf::RepeatedPtrField<osi3::Lane>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &)) &google::protobuf::RepeatedPtrField<osi3::Lane>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Lane> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane> *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Lane> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane> *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Lane> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Lane>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class osi3::Lane *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::AddAllocated(class osi3::Lane *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Lane * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::ReleaseLast() --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class osi3::Lane *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaAddAllocated(class osi3::Lane *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Lane * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::UnsafeArenaReleaseLast() --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class osi3::Lane *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::AddCleared(class osi3::Lane *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Lane * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)()) &google::protobuf::RepeatedPtrField<osi3::Lane>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::ReleaseCleared() --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Lane>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Lane>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Lane>::*)(class google::protobuf::RepeatedPtrField<class osi3::Lane> *)) &google::protobuf::RepeatedPtrField<osi3::Lane>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Lane>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Lane> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_16.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_16(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B45_[google::protobuf::RepeatedPtrField<osi3::Occupant>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::Occupant>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::Occupant>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_Occupant_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::Occupant>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::Occupant> const &o){ return new google::protobuf::RepeatedPtrField<osi3::Occupant>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::Occupant> & (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &) --> class google::protobuf::RepeatedPtrField<class osi3::Occupant> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::size, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::size() const --> int");
		cl.def("Get", (const class osi3::Occupant & (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Get(int) const --> const class osi3::Occupant &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::Occupant * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Mutable(int) --> class osi3::Occupant *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::Occupant * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Add() --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::Occupant & (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::operator[](int) --> class osi3::Occupant &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::Occupant & (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::at, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::at(int) --> class osi3::Occupant &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::Swap(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class osi3::Occupant *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::AddAllocated(class osi3::Occupant *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::Occupant * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::ReleaseLast() --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class osi3::Occupant *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaAddAllocated(class osi3::Occupant *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::Occupant * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::UnsafeArenaReleaseLast() --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class osi3::Occupant *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::AddCleared(class osi3::Occupant *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::Occupant * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)()) &google::protobuf::RepeatedPtrField<osi3::Occupant>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::ReleaseCleared() --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)() const) &google::protobuf::RepeatedPtrField<osi3::Occupant>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::Occupant>::*)(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *)) &google::protobuf::RepeatedPtrField<osi3::Occupant>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::Occupant>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::Occupant> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B46_[google::protobuf::RepeatedPtrField<osi3::GenericSensorViewConfiguration>] ";
	std::cout << "B47_[google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration>] ";
	std::cout << "B48_[google::protobuf::RepeatedPtrField<osi3::LidarSensorViewConfiguration>] ";
	std::cout << "B49_[google::protobuf::RepeatedPtrField<osi3::CameraSensorViewConfiguration>] ";
	std::cout << "B50_[google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorViewConfiguration>] ";
	std::cout << "B51_[google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_RadarSensorViewConfiguration_AntennaDiagramEntry_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> const &o){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> & (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &) --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::size, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::size() const --> int");
		cl.def("Get", (const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Get(int) const --> const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Mutable(int) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Add() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::operator[](int) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::at, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::at(int) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::Swap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::AddAllocated(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ReleaseLast() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaAddAllocated(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::UnsafeArenaReleaseLast() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::AddCleared(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::ReleaseCleared() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_17.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_17(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B52_[google::protobuf::RepeatedPtrField<osi3::WavelengthData>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::WavelengthData>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::WavelengthData>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_WavelengthData_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::WavelengthData>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::WavelengthData> const &o){ return new google::protobuf::RepeatedPtrField<osi3::WavelengthData>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> & (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &) --> class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::size, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::size() const --> int");
		cl.def("Get", (const class osi3::WavelengthData & (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Get(int) const --> const class osi3::WavelengthData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::WavelengthData * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Mutable(int) --> class osi3::WavelengthData *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::WavelengthData * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Add() --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::WavelengthData & (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::operator[](int) --> class osi3::WavelengthData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::WavelengthData & (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::at, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::at(int) --> class osi3::WavelengthData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::Swap(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class osi3::WavelengthData *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::AddAllocated(class osi3::WavelengthData *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::WavelengthData * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ReleaseLast() --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class osi3::WavelengthData *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaAddAllocated(class osi3::WavelengthData *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::WavelengthData * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::UnsafeArenaReleaseLast() --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class osi3::WavelengthData *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::AddCleared(class osi3::WavelengthData *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::WavelengthData * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)()) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::ReleaseCleared() --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)() const) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::WavelengthData>::*)(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *)) &google::protobuf::RepeatedPtrField<osi3::WavelengthData>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::WavelengthData>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B53_[google::protobuf::RepeatedPtrField<osi3::GenericSensorView>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::GenericSensorView>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::GenericSensorView>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_GenericSensorView_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::GenericSensorView>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::GenericSensorView> const &o){ return new google::protobuf::RepeatedPtrField<osi3::GenericSensorView>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> & (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &) --> class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::size, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::size() const --> int");
		cl.def("Get", (const class osi3::GenericSensorView & (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Get(int) const --> const class osi3::GenericSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::GenericSensorView * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Mutable(int) --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::GenericSensorView * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Add() --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::GenericSensorView & (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::operator[](int) --> class osi3::GenericSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::GenericSensorView & (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::at, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::at(int) --> class osi3::GenericSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::Swap(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class osi3::GenericSensorView *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::AddAllocated(class osi3::GenericSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::GenericSensorView * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ReleaseLast() --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class osi3::GenericSensorView *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaAddAllocated(class osi3::GenericSensorView *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::GenericSensorView * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::UnsafeArenaReleaseLast() --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class osi3::GenericSensorView *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::AddCleared(class osi3::GenericSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::GenericSensorView * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::ReleaseCleared() --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::GenericSensorView>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_18.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_18(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B54_[google::protobuf::RepeatedPtrField<osi3::RadarSensorView>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::RadarSensorView>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::RadarSensorView>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_RadarSensorView_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorView>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::RadarSensorView> const &o){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorView>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &) --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::size, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::size() const --> int");
		cl.def("Get", (const class osi3::RadarSensorView & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Get(int) const --> const class osi3::RadarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::RadarSensorView * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Mutable(int) --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::RadarSensorView * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Add() --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::RadarSensorView & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::operator[](int) --> class osi3::RadarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::RadarSensorView & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::at, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::at(int) --> class osi3::RadarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::Swap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class osi3::RadarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::AddAllocated(class osi3::RadarSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::RadarSensorView * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ReleaseLast() --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class osi3::RadarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaAddAllocated(class osi3::RadarSensorView *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::RadarSensorView * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::UnsafeArenaReleaseLast() --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class osi3::RadarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::AddCleared(class osi3::RadarSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::RadarSensorView * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::ReleaseCleared() --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B55_[google::protobuf::RepeatedPtrField<osi3::LidarSensorView>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::LidarSensorView>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::LidarSensorView>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_LidarSensorView_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::LidarSensorView>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::LidarSensorView> const &o){ return new google::protobuf::RepeatedPtrField<osi3::LidarSensorView>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &) --> class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::size, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::size() const --> int");
		cl.def("Get", (const class osi3::LidarSensorView & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Get(int) const --> const class osi3::LidarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::LidarSensorView * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Mutable(int) --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::LidarSensorView * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Add() --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::LidarSensorView & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::operator[](int) --> class osi3::LidarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::LidarSensorView & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::at, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::at(int) --> class osi3::LidarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::Swap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class osi3::LidarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::AddAllocated(class osi3::LidarSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::LidarSensorView * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ReleaseLast() --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class osi3::LidarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaAddAllocated(class osi3::LidarSensorView *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::LidarSensorView * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::UnsafeArenaReleaseLast() --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class osi3::LidarSensorView *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::AddCleared(class osi3::LidarSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::LidarSensorView * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::ReleaseCleared() --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_19.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_19(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B56_[google::protobuf::RepeatedPtrField<osi3::CameraSensorView>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::CameraSensorView>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::CameraSensorView>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_CameraSensorView_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::CameraSensorView>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::CameraSensorView> const &o){ return new google::protobuf::RepeatedPtrField<osi3::CameraSensorView>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> & (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &) --> class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::size, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::size() const --> int");
		cl.def("Get", (const class osi3::CameraSensorView & (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Get(int) const --> const class osi3::CameraSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::CameraSensorView * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Mutable(int) --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::CameraSensorView * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Add() --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::CameraSensorView & (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::operator[](int) --> class osi3::CameraSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::CameraSensorView & (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::at, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::at(int) --> class osi3::CameraSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::Swap(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class osi3::CameraSensorView *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::AddAllocated(class osi3::CameraSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::CameraSensorView * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ReleaseLast() --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class osi3::CameraSensorView *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaAddAllocated(class osi3::CameraSensorView *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::CameraSensorView * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::UnsafeArenaReleaseLast() --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class osi3::CameraSensorView *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::AddCleared(class osi3::CameraSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::CameraSensorView * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::ReleaseCleared() --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::CameraSensorView>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B57_[google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_UltrasonicSensorView_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView> const &o){ return new google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> & (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &) --> class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::size, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::size() const --> int");
		cl.def("Get", (const class osi3::UltrasonicSensorView & (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Get(int) const --> const class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::UltrasonicSensorView * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Mutable(int) --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::UltrasonicSensorView * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Add() --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::UltrasonicSensorView & (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::operator[](int) --> class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::UltrasonicSensorView & (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::at, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::at(int) --> class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::Swap(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class osi3::UltrasonicSensorView *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::AddAllocated(class osi3::UltrasonicSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::UltrasonicSensorView * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ReleaseLast() --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class osi3::UltrasonicSensorView *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaAddAllocated(class osi3::UltrasonicSensorView *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::UltrasonicSensorView * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::UnsafeArenaReleaseLast() --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class osi3::UltrasonicSensorView *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::AddCleared(class osi3::UltrasonicSensorView *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::UltrasonicSensorView * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)()) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::ReleaseCleared() --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)() const) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::*)(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *)) &google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::UltrasonicSensorView>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_20.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_20(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B58_[google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_RadarSensorView_Reflection_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection> const &o){ return new google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &) --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::size, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::size() const --> int");
		cl.def("Get", (const class osi3::RadarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Get(int) const --> const class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::RadarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Mutable(int) --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::RadarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Add() --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::RadarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::operator[](int) --> class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::RadarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::at, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::at(int) --> class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::Swap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class osi3::RadarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::AddAllocated(class osi3::RadarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::RadarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ReleaseLast() --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class osi3::RadarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaAddAllocated(class osi3::RadarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::RadarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::UnsafeArenaReleaseLast() --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class osi3::RadarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::AddCleared(class osi3::RadarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::RadarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::ReleaseCleared() --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::RadarSensorView_Reflection>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B59_[google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>] ";
	{ // google::protobuf::RepeatedPtrField file:google/protobuf/repeated_field.h line:920
		pybind11::class_<google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>, std::shared_ptr<google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>>> cl(M("google::protobuf"), "RepeatedPtrField_osi3_LidarSensorView_Reflection_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection> const &o){ return new google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::operator=, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::operator=(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &) --> class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::empty, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::size, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::size() const --> int");
		cl.def("Get", (const class osi3::LidarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int) const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Get, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Get(int) const --> const class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (class osi3::LidarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Mutable, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Mutable(int) --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("Add", (class osi3::LidarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Add, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Add() --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("__getitem__", (class osi3::LidarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::operator[], "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::operator[](int) --> class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (class osi3::LidarSensorView_Reflection & (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::at, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::at(int) --> class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("RemoveLast", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::RemoveLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::RemoveLast() --> void");
		cl.def("DeleteSubrange", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::DeleteSubrange, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("Clear", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Clear, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::MergeFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::MergeFrom(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::CopyFrom, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::CopyFrom(const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Reserve, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Capacity", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Capacity, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Capacity() const --> int");
		cl.def("Swap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Swap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::Swap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaSwap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(int, int)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SwapElements, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::SpaceUsedExcludingSelf() const --> int");
		cl.def("AddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class osi3::LidarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::AddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::AddAllocated(class osi3::LidarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("ReleaseLast", (class osi3::LidarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ReleaseLast() --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("UnsafeArenaAddAllocated", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class osi3::LidarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaAddAllocated, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaAddAllocated(class osi3::LidarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("UnsafeArenaReleaseLast", (class osi3::LidarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaReleaseLast, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::UnsafeArenaReleaseLast() --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("ClearedCount", (int (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ClearedCount, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ClearedCount() const --> int");
		cl.def("AddCleared", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class osi3::LidarSensorView_Reflection *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::AddCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::AddCleared(class osi3::LidarSensorView_Reflection *) --> void", pybind11::arg("value"));
		cl.def("ReleaseCleared", (class osi3::LidarSensorView_Reflection * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)()) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ReleaseCleared, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::ReleaseCleared() --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)() const) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::GetArena, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::*)(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *)) &google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::InternalSwap, "C++: google::protobuf::RepeatedPtrField<osi3::LidarSensorView_Reflection>::InternalSwap(class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/message_lite.cpp
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/message_lite.h> // google::protobuf::internal::FromIntSize
#include <google/protobuf/message_lite.h> // google::protobuf::internal::GetEmptyStringAlreadyInited
#include <google/protobuf/message_lite.h> // google::protobuf::internal::StringSpaceUsedExcludingSelfLong
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ToCachedSize
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ToIntSize
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_message_lite(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B60_[google::protobuf::internal::ConstantInitialized] ";
	{ // google::protobuf::internal::ConstantInitialized file:google/protobuf/message_lite.h line:79
		pybind11::class_<google::protobuf::internal::ConstantInitialized, std::shared_ptr<google::protobuf::internal::ConstantInitialized>> cl(M("google::protobuf::internal"), "ConstantInitialized", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::internal::ConstantInitialized(); } ) );
		cl.def( pybind11::init( [](google::protobuf::internal::ConstantInitialized const &o){ return new google::protobuf::internal::ConstantInitialized(o); } ) );
	}
	std::cout << "B61_[int google::protobuf::internal::ToCachedSize(unsigned long)] ";
	std::cout << "B62_[unsigned long google::protobuf::internal::FromIntSize(int)] ";
	std::cout << "B63_[int google::protobuf::internal::ToIntSize(unsigned long)] ";
	std::cout << "B64_[const class std::__cxx11::basic_string<char> & google::protobuf::internal::GetEmptyStringAlreadyInited()] ";
	std::cout << "B65_[unsigned long google::protobuf::internal::StringSpaceUsedExcludingSelfLong(const std::string &)] ";
}


// File: google/protobuf/message_lite_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <ios> // std::_Ios_Seekdir
#include <iostream> // --trace
#include <istream> // std::basic_istream
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <ostream> // std::basic_ostream
#include <sstream> // __str__
#include <streambuf> // std::basic_streambuf
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <utility> // std::pair

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_message_lite_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B66_[google::protobuf::MessageLite] ";
	{ // google::protobuf::MessageLite file:google/protobuf/message_lite.h line:195
		pybind11::class_<google::protobuf::MessageLite, std::shared_ptr<google::protobuf::MessageLite>> cl(M("google::protobuf"), "MessageLite", "");

		pybind11::enum_<google::protobuf::MessageLite::ParseFlags>(cl, "ParseFlags", pybind11::arithmetic(), "")
			.value("kMerge", google::protobuf::MessageLite::kMerge)
			.value("kParse", google::protobuf::MessageLite::kParse)
			.value("kMergePartial", google::protobuf::MessageLite::kMergePartial)
			.value("kParsePartial", google::protobuf::MessageLite::kParsePartial)
			.value("kMergeWithAliasing", google::protobuf::MessageLite::kMergeWithAliasing)
			.value("kParseWithAliasing", google::protobuf::MessageLite::kParseWithAliasing)
			.value("kMergePartialWithAliasing", google::protobuf::MessageLite::kMergePartialWithAliasing)
			.value("kParsePartialWithAliasing", google::protobuf::MessageLite::kParsePartialWithAliasing)
			.export_values();

		cl.def("New", (class google::protobuf::MessageLite * (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::New, "C++: google::protobuf::MessageLite::New() const --> class google::protobuf::MessageLite *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::MessageLite * (google::protobuf::MessageLite::*)(class google::protobuf::Arena *) const) &google::protobuf::MessageLite::New, "C++: google::protobuf::MessageLite::New(class google::protobuf::Arena *) const --> class google::protobuf::MessageLite *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::GetArena, "C++: google::protobuf::MessageLite::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("GetMaybeArenaPointer", (void * (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::GetMaybeArenaPointer, "C++: google::protobuf::MessageLite::GetMaybeArenaPointer() const --> void *", pybind11::return_value_policy::reference);
		cl.def("Clear", (void (google::protobuf::MessageLite::*)()) &google::protobuf::MessageLite::Clear, "C++: google::protobuf::MessageLite::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::IsInitialized, "C++: google::protobuf::MessageLite::IsInitialized() const --> bool");
		cl.def("CheckTypeAndMergeFrom", (void (google::protobuf::MessageLite::*)(const class google::protobuf::MessageLite &)) &google::protobuf::MessageLite::CheckTypeAndMergeFrom, "C++: google::protobuf::MessageLite::CheckTypeAndMergeFrom(const class google::protobuf::MessageLite &) --> void", pybind11::arg("other"));
		cl.def("ParseFromCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::MessageLite::ParseFromCodedStream, "C++: google::protobuf::MessageLite::ParseFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParsePartialFromCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::MessageLite::ParsePartialFromCodedStream, "C++: google::protobuf::MessageLite::ParsePartialFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParseFromZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *)) &google::protobuf::MessageLite::ParseFromZeroCopyStream, "C++: google::protobuf::MessageLite::ParseFromZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParsePartialFromZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *)) &google::protobuf::MessageLite::ParsePartialFromZeroCopyStream, "C++: google::protobuf::MessageLite::ParsePartialFromZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParseFromFileDescriptor", (bool (google::protobuf::MessageLite::*)(int)) &google::protobuf::MessageLite::ParseFromFileDescriptor, "C++: google::protobuf::MessageLite::ParseFromFileDescriptor(int) --> bool", pybind11::arg("file_descriptor"));
		cl.def("ParsePartialFromFileDescriptor", (bool (google::protobuf::MessageLite::*)(int)) &google::protobuf::MessageLite::ParsePartialFromFileDescriptor, "C++: google::protobuf::MessageLite::ParsePartialFromFileDescriptor(int) --> bool", pybind11::arg("file_descriptor"));
		cl.def("MergePartialFromBoundedZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *, int)) &google::protobuf::MessageLite::MergePartialFromBoundedZeroCopyStream, "C++: google::protobuf::MessageLite::MergePartialFromBoundedZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *, int) --> bool", pybind11::arg("input"), pybind11::arg("size"));
		cl.def("MergeFromBoundedZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *, int)) &google::protobuf::MessageLite::MergeFromBoundedZeroCopyStream, "C++: google::protobuf::MessageLite::MergeFromBoundedZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *, int) --> bool", pybind11::arg("input"), pybind11::arg("size"));
		cl.def("ParseFromBoundedZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *, int)) &google::protobuf::MessageLite::ParseFromBoundedZeroCopyStream, "C++: google::protobuf::MessageLite::ParseFromBoundedZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *, int) --> bool", pybind11::arg("input"), pybind11::arg("size"));
		cl.def("ParsePartialFromBoundedZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyInputStream *, int)) &google::protobuf::MessageLite::ParsePartialFromBoundedZeroCopyStream, "C++: google::protobuf::MessageLite::ParsePartialFromBoundedZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *, int) --> bool", pybind11::arg("input"), pybind11::arg("size"));
		cl.def("ParseFromString", (bool (google::protobuf::MessageLite::*)(const std::string &)) &google::protobuf::MessageLite::ParseFromString, "C++: google::protobuf::MessageLite::ParseFromString(const std::string &) --> bool", pybind11::arg("data"));
		cl.def("ParsePartialFromString", (bool (google::protobuf::MessageLite::*)(const std::string &)) &google::protobuf::MessageLite::ParsePartialFromString, "C++: google::protobuf::MessageLite::ParsePartialFromString(const std::string &) --> bool", pybind11::arg("data"));
		cl.def("ParseFromArray", (bool (google::protobuf::MessageLite::*)(const void *, int)) &google::protobuf::MessageLite::ParseFromArray, "C++: google::protobuf::MessageLite::ParseFromArray(const void *, int) --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def("ParsePartialFromArray", (bool (google::protobuf::MessageLite::*)(const void *, int)) &google::protobuf::MessageLite::ParsePartialFromArray, "C++: google::protobuf::MessageLite::ParsePartialFromArray(const void *, int) --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def("MergeFromCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::MessageLite::MergeFromCodedStream, "C++: google::protobuf::MessageLite::MergeFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("MergePartialFromCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::MessageLite::MergePartialFromCodedStream, "C++: google::protobuf::MessageLite::MergePartialFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("MergeFromString", (bool (google::protobuf::MessageLite::*)(const std::string &)) &google::protobuf::MessageLite::MergeFromString, "C++: google::protobuf::MessageLite::MergeFromString(const std::string &) --> bool", pybind11::arg("data"));
		cl.def("SerializeToCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedOutputStream *) const) &google::protobuf::MessageLite::SerializeToCodedStream, "C++: google::protobuf::MessageLite::SerializeToCodedStream(class google::protobuf::io::CodedOutputStream *) const --> bool", pybind11::arg("output"));
		cl.def("SerializePartialToCodedStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedOutputStream *) const) &google::protobuf::MessageLite::SerializePartialToCodedStream, "C++: google::protobuf::MessageLite::SerializePartialToCodedStream(class google::protobuf::io::CodedOutputStream *) const --> bool", pybind11::arg("output"));
		cl.def("SerializeToZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyOutputStream *) const) &google::protobuf::MessageLite::SerializeToZeroCopyStream, "C++: google::protobuf::MessageLite::SerializeToZeroCopyStream(class google::protobuf::io::ZeroCopyOutputStream *) const --> bool", pybind11::arg("output"));
		cl.def("SerializePartialToZeroCopyStream", (bool (google::protobuf::MessageLite::*)(class google::protobuf::io::ZeroCopyOutputStream *) const) &google::protobuf::MessageLite::SerializePartialToZeroCopyStream, "C++: google::protobuf::MessageLite::SerializePartialToZeroCopyStream(class google::protobuf::io::ZeroCopyOutputStream *) const --> bool", pybind11::arg("output"));
		cl.def("SerializeToArray", (bool (google::protobuf::MessageLite::*)(void *, int) const) &google::protobuf::MessageLite::SerializeToArray, "C++: google::protobuf::MessageLite::SerializeToArray(void *, int) const --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def("SerializePartialToArray", (bool (google::protobuf::MessageLite::*)(void *, int) const) &google::protobuf::MessageLite::SerializePartialToArray, "C++: google::protobuf::MessageLite::SerializePartialToArray(void *, int) const --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def("SerializeToFileDescriptor", (bool (google::protobuf::MessageLite::*)(int) const) &google::protobuf::MessageLite::SerializeToFileDescriptor, "C++: google::protobuf::MessageLite::SerializeToFileDescriptor(int) const --> bool", pybind11::arg("file_descriptor"));
		cl.def("SerializePartialToFileDescriptor", (bool (google::protobuf::MessageLite::*)(int) const) &google::protobuf::MessageLite::SerializePartialToFileDescriptor, "C++: google::protobuf::MessageLite::SerializePartialToFileDescriptor(int) const --> bool", pybind11::arg("file_descriptor"));
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::ByteSizeLong, "C++: google::protobuf::MessageLite::ByteSizeLong() const --> unsigned long");
		cl.def("ByteSize", (int (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::ByteSize, "C++: google::protobuf::MessageLite::ByteSize() const --> int");
		cl.def("SerializeWithCachedSizes", (void (google::protobuf::MessageLite::*)(class google::protobuf::io::CodedOutputStream *) const) &google::protobuf::MessageLite::SerializeWithCachedSizes, "C++: google::protobuf::MessageLite::SerializeWithCachedSizes(class google::protobuf::io::CodedOutputStream *) const --> void", pybind11::arg("output"));
		cl.def("SerializeWithCachedSizesToArray", (unsigned char * (google::protobuf::MessageLite::*)(unsigned char *) const) &google::protobuf::MessageLite::SerializeWithCachedSizesToArray, "C++: google::protobuf::MessageLite::SerializeWithCachedSizesToArray(unsigned char *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"));
		cl.def("GetCachedSize", (int (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::GetCachedSize, "C++: google::protobuf::MessageLite::GetCachedSize() const --> int");
		cl.def("_InternalParse", (const char * (google::protobuf::MessageLite::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::MessageLite::_InternalParse, "C++: google::protobuf::MessageLite::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg(""), pybind11::arg(""));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::MessageLite::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::MessageLite::_InternalSerialize, "C++: google::protobuf::MessageLite::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("stream"));
		cl.def("IsInitializedWithErrors", (bool (google::protobuf::MessageLite::*)() const) &google::protobuf::MessageLite::IsInitializedWithErrors, "C++: google::protobuf::MessageLite::IsInitializedWithErrors() const --> bool");
	}
}


// File: google/protobuf/io/zero_copy_stream.cpp
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_io_zero_copy_stream(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B67_[google::protobuf::io::ZeroCopyInputStream] ";
	{ // google::protobuf::io::ZeroCopyInputStream file:google/protobuf/io/zero_copy_stream.h line:127
		pybind11::class_<google::protobuf::io::ZeroCopyInputStream, std::shared_ptr<google::protobuf::io::ZeroCopyInputStream>> cl(M("google::protobuf::io"), "ZeroCopyInputStream", "");
		cl.def("BackUp", (void (google::protobuf::io::ZeroCopyInputStream::*)(int)) &google::protobuf::io::ZeroCopyInputStream::BackUp, "C++: google::protobuf::io::ZeroCopyInputStream::BackUp(int) --> void", pybind11::arg("count"));
		cl.def("Skip", (bool (google::protobuf::io::ZeroCopyInputStream::*)(int)) &google::protobuf::io::ZeroCopyInputStream::Skip, "C++: google::protobuf::io::ZeroCopyInputStream::Skip(int) --> bool", pybind11::arg("count"));
		cl.def("ByteCount", (long (google::protobuf::io::ZeroCopyInputStream::*)() const) &google::protobuf::io::ZeroCopyInputStream::ByteCount, "C++: google::protobuf::io::ZeroCopyInputStream::ByteCount() const --> long");
	}
	std::cout << "B68_[google::protobuf::io::ZeroCopyOutputStream] ";
	{ // google::protobuf::io::ZeroCopyOutputStream file:google/protobuf/io/zero_copy_stream.h line:184
		pybind11::class_<google::protobuf::io::ZeroCopyOutputStream, std::shared_ptr<google::protobuf::io::ZeroCopyOutputStream>> cl(M("google::protobuf::io"), "ZeroCopyOutputStream", "");
		cl.def("BackUp", (void (google::protobuf::io::ZeroCopyOutputStream::*)(int)) &google::protobuf::io::ZeroCopyOutputStream::BackUp, "C++: google::protobuf::io::ZeroCopyOutputStream::BackUp(int) --> void", pybind11::arg("count"));
		cl.def("ByteCount", (long (google::protobuf::io::ZeroCopyOutputStream::*)() const) &google::protobuf::io::ZeroCopyOutputStream::ByteCount, "C++: google::protobuf::io::ZeroCopyOutputStream::ByteCount() const --> long");
		cl.def("WriteAliasedRaw", (bool (google::protobuf::io::ZeroCopyOutputStream::*)(const void *, int)) &google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw, "C++: google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(const void *, int) --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def("AllowsAliasing", (bool (google::protobuf::io::ZeroCopyOutputStream::*)() const) &google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing, "C++: google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing() const --> bool");
	}
}


// File: google/protobuf/repeated_field_21.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_21(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B69_[google::protobuf::RepeatedField<int>] ";
	{ // google::protobuf::RepeatedField file:google/protobuf/repeated_field.h line:2838
		pybind11::class_<google::protobuf::RepeatedField<int>, std::shared_ptr<google::protobuf::RepeatedField<int>>> cl(M("google::protobuf"), "RepeatedField_int_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedField<int>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedField<int> const &o){ return new google::protobuf::RepeatedField<int>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedField<google::protobuf::int32> & (google::protobuf::RepeatedField<int>::*)(const class google::protobuf::RepeatedField<google::protobuf::int32> &)) &google::protobuf::RepeatedField<int>::operator=, "C++: google::protobuf::RepeatedField<int>::operator=(const class google::protobuf::RepeatedField<google::protobuf::int32> &) --> class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::empty, "C++: google::protobuf::RepeatedField<int>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::size, "C++: google::protobuf::RepeatedField<int>::size() const --> int");
		cl.def("Get", (const int & (google::protobuf::RepeatedField<int>::*)(int) const) &google::protobuf::RepeatedField<int>::Get, "C++: google::protobuf::RepeatedField<int>::Get(int) const --> const int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (int * (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::Mutable, "C++: google::protobuf::RepeatedField<int>::Mutable(int) --> int *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("__getitem__", (int & (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::operator[], "C++: google::protobuf::RepeatedField<int>::operator[](int) --> int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (int & (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::at, "C++: google::protobuf::RepeatedField<int>::at(int) --> int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Set", (void (google::protobuf::RepeatedField<int>::*)(int, const int &)) &google::protobuf::RepeatedField<int>::Set, "C++: google::protobuf::RepeatedField<int>::Set(int, const int &) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("Add", (void (google::protobuf::RepeatedField<int>::*)(const int &)) &google::protobuf::RepeatedField<int>::Add, "C++: google::protobuf::RepeatedField<int>::Add(const int &) --> void", pybind11::arg("value"));
		cl.def("Add", (int * (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::Add, "C++: google::protobuf::RepeatedField<int>::Add() --> int *", pybind11::return_value_policy::reference);
		cl.def("RemoveLast", (void (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::RemoveLast, "C++: google::protobuf::RepeatedField<int>::RemoveLast() --> void");
		cl.def("ExtractSubrange", (void (google::protobuf::RepeatedField<int>::*)(int, int, int *)) &google::protobuf::RepeatedField<int>::ExtractSubrange, "C++: google::protobuf::RepeatedField<int>::ExtractSubrange(int, int, int *) --> void", pybind11::arg("start"), pybind11::arg("num"), pybind11::arg("elements"));
		cl.def("Clear", (void (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::Clear, "C++: google::protobuf::RepeatedField<int>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedField<int>::*)(const class google::protobuf::RepeatedField<google::protobuf::int32> &)) &google::protobuf::RepeatedField<int>::MergeFrom, "C++: google::protobuf::RepeatedField<int>::MergeFrom(const class google::protobuf::RepeatedField<google::protobuf::int32> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedField<int>::*)(const class google::protobuf::RepeatedField<google::protobuf::int32> &)) &google::protobuf::RepeatedField<int>::CopyFrom, "C++: google::protobuf::RepeatedField<int>::CopyFrom(const class google::protobuf::RepeatedField<google::protobuf::int32> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::Reserve, "C++: google::protobuf::RepeatedField<int>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Truncate", (void (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::Truncate, "C++: google::protobuf::RepeatedField<int>::Truncate(int) --> void", pybind11::arg("new_size"));
		cl.def("AddAlreadyReserved", (void (google::protobuf::RepeatedField<int>::*)(const int &)) &google::protobuf::RepeatedField<int>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<int>::AddAlreadyReserved(const int &) --> void", pybind11::arg("value"));
		cl.def("AddAlreadyReserved", (int * (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<int>::AddAlreadyReserved() --> int *", pybind11::return_value_policy::reference);
		cl.def("AddNAlreadyReserved", (int * (google::protobuf::RepeatedField<int>::*)(int)) &google::protobuf::RepeatedField<int>::AddNAlreadyReserved, "C++: google::protobuf::RepeatedField<int>::AddNAlreadyReserved(int) --> int *", pybind11::return_value_policy::reference, pybind11::arg("elements"));
		cl.def("Capacity", (int (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::Capacity, "C++: google::protobuf::RepeatedField<int>::Capacity() const --> int");
		cl.def("Resize", (void (google::protobuf::RepeatedField<int>::*)(int, const int &)) &google::protobuf::RepeatedField<int>::Resize, "C++: google::protobuf::RepeatedField<int>::Resize(int, const int &) --> void", pybind11::arg("new_size"), pybind11::arg("value"));
		cl.def("mutable_data", (int * (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::mutable_data, "C++: google::protobuf::RepeatedField<int>::mutable_data() --> int *", pybind11::return_value_policy::reference);
		cl.def("data", (const int * (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::data, "C++: google::protobuf::RepeatedField<int>::data() const --> const int *", pybind11::return_value_policy::reference);
		cl.def("Swap", (void (google::protobuf::RepeatedField<int>::*)(class google::protobuf::RepeatedField<google::protobuf::int32> *)) &google::protobuf::RepeatedField<int>::Swap, "C++: google::protobuf::RepeatedField<int>::Swap(class google::protobuf::RepeatedField<google::protobuf::int32> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedField<int>::*)(class google::protobuf::RepeatedField<google::protobuf::int32> *)) &google::protobuf::RepeatedField<int>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedField<int>::UnsafeArenaSwap(class google::protobuf::RepeatedField<google::protobuf::int32> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedField<int>::*)(int, int)) &google::protobuf::RepeatedField<int>::SwapElements, "C++: google::protobuf::RepeatedField<int>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("begin", (int * (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::begin, "C++: google::protobuf::RepeatedField<int>::begin() --> int *", pybind11::return_value_policy::reference);
		cl.def("cbegin", (const int * (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::cbegin, "C++: google::protobuf::RepeatedField<int>::cbegin() const --> const int *", pybind11::return_value_policy::reference);
		cl.def("end", (int * (google::protobuf::RepeatedField<int>::*)()) &google::protobuf::RepeatedField<int>::end, "C++: google::protobuf::RepeatedField<int>::end() --> int *", pybind11::return_value_policy::reference);
		cl.def("cend", (const int * (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::cend, "C++: google::protobuf::RepeatedField<int>::cend() const --> const int *", pybind11::return_value_policy::reference);
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedField<int>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedField<int>::SpaceUsedExcludingSelf() const --> int");
		cl.def("erase", (int * (google::protobuf::RepeatedField<int>::*)(const int *)) &google::protobuf::RepeatedField<int>::erase, "C++: google::protobuf::RepeatedField<int>::erase(const int *) --> int *", pybind11::return_value_policy::reference, pybind11::arg("position"));
		cl.def("erase", (int * (google::protobuf::RepeatedField<int>::*)(const int *, const int *)) &google::protobuf::RepeatedField<int>::erase, "C++: google::protobuf::RepeatedField<int>::erase(const int *, const int *) --> int *", pybind11::return_value_policy::reference, pybind11::arg("first"), pybind11::arg("last"));
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedField<int>::*)() const) &google::protobuf::RepeatedField<int>::GetArena, "C++: google::protobuf::RepeatedField<int>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedField<int>::*)(class google::protobuf::RepeatedField<google::protobuf::int32> *)) &google::protobuf::RepeatedField<int>::InternalSwap, "C++: google::protobuf::RepeatedField<int>::InternalSwap(class google::protobuf::RepeatedField<google::protobuf::int32> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B70_[google::protobuf::RepeatedField<unsigned int>] ";
	{ // google::protobuf::RepeatedField file:google/protobuf/repeated_field.h line:2839
		pybind11::class_<google::protobuf::RepeatedField<unsigned int>, std::shared_ptr<google::protobuf::RepeatedField<unsigned int>>> cl(M("google::protobuf"), "RepeatedField_unsigned_int_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedField<unsigned int>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedField<unsigned int> const &o){ return new google::protobuf::RepeatedField<unsigned int>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedField<google::protobuf::uint32> & (google::protobuf::RepeatedField<unsigned int>::*)(const class google::protobuf::RepeatedField<google::protobuf::uint32> &)) &google::protobuf::RepeatedField<unsigned int>::operator=, "C++: google::protobuf::RepeatedField<unsigned int>::operator=(const class google::protobuf::RepeatedField<google::protobuf::uint32> &) --> class google::protobuf::RepeatedField<google::protobuf::uint32> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::empty, "C++: google::protobuf::RepeatedField<unsigned int>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::size, "C++: google::protobuf::RepeatedField<unsigned int>::size() const --> int");
		cl.def("Get", (const unsigned int & (google::protobuf::RepeatedField<unsigned int>::*)(int) const) &google::protobuf::RepeatedField<unsigned int>::Get, "C++: google::protobuf::RepeatedField<unsigned int>::Get(int) const --> const unsigned int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::Mutable, "C++: google::protobuf::RepeatedField<unsigned int>::Mutable(int) --> unsigned int *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("__getitem__", (unsigned int & (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::operator[], "C++: google::protobuf::RepeatedField<unsigned int>::operator[](int) --> unsigned int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (unsigned int & (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::at, "C++: google::protobuf::RepeatedField<unsigned int>::at(int) --> unsigned int &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Set", (void (google::protobuf::RepeatedField<unsigned int>::*)(int, const unsigned int &)) &google::protobuf::RepeatedField<unsigned int>::Set, "C++: google::protobuf::RepeatedField<unsigned int>::Set(int, const unsigned int &) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("Add", (void (google::protobuf::RepeatedField<unsigned int>::*)(const unsigned int &)) &google::protobuf::RepeatedField<unsigned int>::Add, "C++: google::protobuf::RepeatedField<unsigned int>::Add(const unsigned int &) --> void", pybind11::arg("value"));
		cl.def("Add", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::Add, "C++: google::protobuf::RepeatedField<unsigned int>::Add() --> unsigned int *", pybind11::return_value_policy::reference);
		cl.def("RemoveLast", (void (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::RemoveLast, "C++: google::protobuf::RepeatedField<unsigned int>::RemoveLast() --> void");
		cl.def("ExtractSubrange", (void (google::protobuf::RepeatedField<unsigned int>::*)(int, int, unsigned int *)) &google::protobuf::RepeatedField<unsigned int>::ExtractSubrange, "C++: google::protobuf::RepeatedField<unsigned int>::ExtractSubrange(int, int, unsigned int *) --> void", pybind11::arg("start"), pybind11::arg("num"), pybind11::arg("elements"));
		cl.def("Clear", (void (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::Clear, "C++: google::protobuf::RepeatedField<unsigned int>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedField<unsigned int>::*)(const class google::protobuf::RepeatedField<google::protobuf::uint32> &)) &google::protobuf::RepeatedField<unsigned int>::MergeFrom, "C++: google::protobuf::RepeatedField<unsigned int>::MergeFrom(const class google::protobuf::RepeatedField<google::protobuf::uint32> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedField<unsigned int>::*)(const class google::protobuf::RepeatedField<google::protobuf::uint32> &)) &google::protobuf::RepeatedField<unsigned int>::CopyFrom, "C++: google::protobuf::RepeatedField<unsigned int>::CopyFrom(const class google::protobuf::RepeatedField<google::protobuf::uint32> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::Reserve, "C++: google::protobuf::RepeatedField<unsigned int>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Truncate", (void (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::Truncate, "C++: google::protobuf::RepeatedField<unsigned int>::Truncate(int) --> void", pybind11::arg("new_size"));
		cl.def("AddAlreadyReserved", (void (google::protobuf::RepeatedField<unsigned int>::*)(const unsigned int &)) &google::protobuf::RepeatedField<unsigned int>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<unsigned int>::AddAlreadyReserved(const unsigned int &) --> void", pybind11::arg("value"));
		cl.def("AddAlreadyReserved", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<unsigned int>::AddAlreadyReserved() --> unsigned int *", pybind11::return_value_policy::reference);
		cl.def("AddNAlreadyReserved", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)(int)) &google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved, "C++: google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved(int) --> unsigned int *", pybind11::return_value_policy::reference, pybind11::arg("elements"));
		cl.def("Capacity", (int (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::Capacity, "C++: google::protobuf::RepeatedField<unsigned int>::Capacity() const --> int");
		cl.def("Resize", (void (google::protobuf::RepeatedField<unsigned int>::*)(int, const unsigned int &)) &google::protobuf::RepeatedField<unsigned int>::Resize, "C++: google::protobuf::RepeatedField<unsigned int>::Resize(int, const unsigned int &) --> void", pybind11::arg("new_size"), pybind11::arg("value"));
		cl.def("mutable_data", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::mutable_data, "C++: google::protobuf::RepeatedField<unsigned int>::mutable_data() --> unsigned int *", pybind11::return_value_policy::reference);
		cl.def("data", (const unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::data, "C++: google::protobuf::RepeatedField<unsigned int>::data() const --> const unsigned int *", pybind11::return_value_policy::reference);
		cl.def("Swap", (void (google::protobuf::RepeatedField<unsigned int>::*)(class google::protobuf::RepeatedField<google::protobuf::uint32> *)) &google::protobuf::RepeatedField<unsigned int>::Swap, "C++: google::protobuf::RepeatedField<unsigned int>::Swap(class google::protobuf::RepeatedField<google::protobuf::uint32> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedField<unsigned int>::*)(class google::protobuf::RepeatedField<google::protobuf::uint32> *)) &google::protobuf::RepeatedField<unsigned int>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedField<unsigned int>::UnsafeArenaSwap(class google::protobuf::RepeatedField<google::protobuf::uint32> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedField<unsigned int>::*)(int, int)) &google::protobuf::RepeatedField<unsigned int>::SwapElements, "C++: google::protobuf::RepeatedField<unsigned int>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("begin", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::begin, "C++: google::protobuf::RepeatedField<unsigned int>::begin() --> unsigned int *", pybind11::return_value_policy::reference);
		cl.def("cbegin", (const unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::cbegin, "C++: google::protobuf::RepeatedField<unsigned int>::cbegin() const --> const unsigned int *", pybind11::return_value_policy::reference);
		cl.def("end", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)()) &google::protobuf::RepeatedField<unsigned int>::end, "C++: google::protobuf::RepeatedField<unsigned int>::end() --> unsigned int *", pybind11::return_value_policy::reference);
		cl.def("cend", (const unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::cend, "C++: google::protobuf::RepeatedField<unsigned int>::cend() const --> const unsigned int *", pybind11::return_value_policy::reference);
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedField<unsigned int>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedField<unsigned int>::SpaceUsedExcludingSelf() const --> int");
		cl.def("erase", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)(const unsigned int *)) &google::protobuf::RepeatedField<unsigned int>::erase, "C++: google::protobuf::RepeatedField<unsigned int>::erase(const unsigned int *) --> unsigned int *", pybind11::return_value_policy::reference, pybind11::arg("position"));
		cl.def("erase", (unsigned int * (google::protobuf::RepeatedField<unsigned int>::*)(const unsigned int *, const unsigned int *)) &google::protobuf::RepeatedField<unsigned int>::erase, "C++: google::protobuf::RepeatedField<unsigned int>::erase(const unsigned int *, const unsigned int *) --> unsigned int *", pybind11::return_value_policy::reference, pybind11::arg("first"), pybind11::arg("last"));
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedField<unsigned int>::*)() const) &google::protobuf::RepeatedField<unsigned int>::GetArena, "C++: google::protobuf::RepeatedField<unsigned int>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedField<unsigned int>::*)(class google::protobuf::RepeatedField<google::protobuf::uint32> *)) &google::protobuf::RepeatedField<unsigned int>::InternalSwap, "C++: google::protobuf::RepeatedField<unsigned int>::InternalSwap(class google::protobuf::RepeatedField<google::protobuf::uint32> *) --> void", pybind11::arg("other"));
	}
}


// File: google/protobuf/repeated_field_22.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_repeated_field_22(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B71_[google::protobuf::RepeatedField<double>] ";
	{ // google::protobuf::RepeatedField file:google/protobuf/repeated_field.h line:2843
		pybind11::class_<google::protobuf::RepeatedField<double>, std::shared_ptr<google::protobuf::RepeatedField<double>>> cl(M("google::protobuf"), "RepeatedField_double_t", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::RepeatedField<double>(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def( pybind11::init( [](google::protobuf::RepeatedField<double> const &o){ return new google::protobuf::RepeatedField<double>(o); } ) );
		cl.def("assign", (class google::protobuf::RepeatedField<double> & (google::protobuf::RepeatedField<double>::*)(const class google::protobuf::RepeatedField<double> &)) &google::protobuf::RepeatedField<double>::operator=, "C++: google::protobuf::RepeatedField<double>::operator=(const class google::protobuf::RepeatedField<double> &) --> class google::protobuf::RepeatedField<double> &", pybind11::return_value_policy::automatic, pybind11::arg("other"));
		cl.def("empty", (bool (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::empty, "C++: google::protobuf::RepeatedField<double>::empty() const --> bool");
		cl.def("size", (int (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::size, "C++: google::protobuf::RepeatedField<double>::size() const --> int");
		cl.def("Get", (const double & (google::protobuf::RepeatedField<double>::*)(int) const) &google::protobuf::RepeatedField<double>::Get, "C++: google::protobuf::RepeatedField<double>::Get(int) const --> const double &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Mutable", (double * (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::Mutable, "C++: google::protobuf::RepeatedField<double>::Mutable(int) --> double *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("__getitem__", (double & (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::operator[], "C++: google::protobuf::RepeatedField<double>::operator[](int) --> double &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("at", (double & (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::at, "C++: google::protobuf::RepeatedField<double>::at(int) --> double &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("Set", (void (google::protobuf::RepeatedField<double>::*)(int, const double &)) &google::protobuf::RepeatedField<double>::Set, "C++: google::protobuf::RepeatedField<double>::Set(int, const double &) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("Add", (void (google::protobuf::RepeatedField<double>::*)(const double &)) &google::protobuf::RepeatedField<double>::Add, "C++: google::protobuf::RepeatedField<double>::Add(const double &) --> void", pybind11::arg("value"));
		cl.def("Add", (double * (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::Add, "C++: google::protobuf::RepeatedField<double>::Add() --> double *", pybind11::return_value_policy::reference);
		cl.def("RemoveLast", (void (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::RemoveLast, "C++: google::protobuf::RepeatedField<double>::RemoveLast() --> void");
		cl.def("ExtractSubrange", (void (google::protobuf::RepeatedField<double>::*)(int, int, double *)) &google::protobuf::RepeatedField<double>::ExtractSubrange, "C++: google::protobuf::RepeatedField<double>::ExtractSubrange(int, int, double *) --> void", pybind11::arg("start"), pybind11::arg("num"), pybind11::arg("elements"));
		cl.def("Clear", (void (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::Clear, "C++: google::protobuf::RepeatedField<double>::Clear() --> void");
		cl.def("MergeFrom", (void (google::protobuf::RepeatedField<double>::*)(const class google::protobuf::RepeatedField<double> &)) &google::protobuf::RepeatedField<double>::MergeFrom, "C++: google::protobuf::RepeatedField<double>::MergeFrom(const class google::protobuf::RepeatedField<double> &) --> void", pybind11::arg("other"));
		cl.def("CopyFrom", (void (google::protobuf::RepeatedField<double>::*)(const class google::protobuf::RepeatedField<double> &)) &google::protobuf::RepeatedField<double>::CopyFrom, "C++: google::protobuf::RepeatedField<double>::CopyFrom(const class google::protobuf::RepeatedField<double> &) --> void", pybind11::arg("other"));
		cl.def("Reserve", (void (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::Reserve, "C++: google::protobuf::RepeatedField<double>::Reserve(int) --> void", pybind11::arg("new_size"));
		cl.def("Truncate", (void (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::Truncate, "C++: google::protobuf::RepeatedField<double>::Truncate(int) --> void", pybind11::arg("new_size"));
		cl.def("AddAlreadyReserved", (void (google::protobuf::RepeatedField<double>::*)(const double &)) &google::protobuf::RepeatedField<double>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<double>::AddAlreadyReserved(const double &) --> void", pybind11::arg("value"));
		cl.def("AddAlreadyReserved", (double * (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::AddAlreadyReserved, "C++: google::protobuf::RepeatedField<double>::AddAlreadyReserved() --> double *", pybind11::return_value_policy::reference);
		cl.def("AddNAlreadyReserved", (double * (google::protobuf::RepeatedField<double>::*)(int)) &google::protobuf::RepeatedField<double>::AddNAlreadyReserved, "C++: google::protobuf::RepeatedField<double>::AddNAlreadyReserved(int) --> double *", pybind11::return_value_policy::reference, pybind11::arg("elements"));
		cl.def("Capacity", (int (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::Capacity, "C++: google::protobuf::RepeatedField<double>::Capacity() const --> int");
		cl.def("Resize", (void (google::protobuf::RepeatedField<double>::*)(int, const double &)) &google::protobuf::RepeatedField<double>::Resize, "C++: google::protobuf::RepeatedField<double>::Resize(int, const double &) --> void", pybind11::arg("new_size"), pybind11::arg("value"));
		cl.def("mutable_data", (double * (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::mutable_data, "C++: google::protobuf::RepeatedField<double>::mutable_data() --> double *", pybind11::return_value_policy::reference);
		cl.def("data", (const double * (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::data, "C++: google::protobuf::RepeatedField<double>::data() const --> const double *", pybind11::return_value_policy::reference);
		cl.def("Swap", (void (google::protobuf::RepeatedField<double>::*)(class google::protobuf::RepeatedField<double> *)) &google::protobuf::RepeatedField<double>::Swap, "C++: google::protobuf::RepeatedField<double>::Swap(class google::protobuf::RepeatedField<double> *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::RepeatedField<double>::*)(class google::protobuf::RepeatedField<double> *)) &google::protobuf::RepeatedField<double>::UnsafeArenaSwap, "C++: google::protobuf::RepeatedField<double>::UnsafeArenaSwap(class google::protobuf::RepeatedField<double> *) --> void", pybind11::arg("other"));
		cl.def("SwapElements", (void (google::protobuf::RepeatedField<double>::*)(int, int)) &google::protobuf::RepeatedField<double>::SwapElements, "C++: google::protobuf::RepeatedField<double>::SwapElements(int, int) --> void", pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("begin", (double * (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::begin, "C++: google::protobuf::RepeatedField<double>::begin() --> double *", pybind11::return_value_policy::reference);
		cl.def("cbegin", (const double * (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::cbegin, "C++: google::protobuf::RepeatedField<double>::cbegin() const --> const double *", pybind11::return_value_policy::reference);
		cl.def("end", (double * (google::protobuf::RepeatedField<double>::*)()) &google::protobuf::RepeatedField<double>::end, "C++: google::protobuf::RepeatedField<double>::end() --> double *", pybind11::return_value_policy::reference);
		cl.def("cend", (const double * (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::cend, "C++: google::protobuf::RepeatedField<double>::cend() const --> const double *", pybind11::return_value_policy::reference);
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::SpaceUsedExcludingSelfLong, "C++: google::protobuf::RepeatedField<double>::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::SpaceUsedExcludingSelf, "C++: google::protobuf::RepeatedField<double>::SpaceUsedExcludingSelf() const --> int");
		cl.def("erase", (double * (google::protobuf::RepeatedField<double>::*)(const double *)) &google::protobuf::RepeatedField<double>::erase, "C++: google::protobuf::RepeatedField<double>::erase(const double *) --> double *", pybind11::return_value_policy::reference, pybind11::arg("position"));
		cl.def("erase", (double * (google::protobuf::RepeatedField<double>::*)(const double *, const double *)) &google::protobuf::RepeatedField<double>::erase, "C++: google::protobuf::RepeatedField<double>::erase(const double *, const double *) --> double *", pybind11::return_value_policy::reference, pybind11::arg("first"), pybind11::arg("last"));
		cl.def("GetArena", (class google::protobuf::Arena * (google::protobuf::RepeatedField<double>::*)() const) &google::protobuf::RepeatedField<double>::GetArena, "C++: google::protobuf::RepeatedField<double>::GetArena() const --> class google::protobuf::Arena *", pybind11::return_value_policy::reference);
		cl.def("InternalSwap", (void (google::protobuf::RepeatedField<double>::*)(class google::protobuf::RepeatedField<double> *)) &google::protobuf::RepeatedField<double>::InternalSwap, "C++: google::protobuf::RepeatedField<double>::InternalSwap(class google::protobuf::RepeatedField<double> *) --> void", pybind11::arg("other"));
	}
	std::cout << "B72_[google::protobuf::RepeatedPtrField<std::string>] ";
}


// File: google/protobuf/implicit_weak_message.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::EndianHelper
#include <google/protobuf/parse_context.h> // google::protobuf::internal::EpsCopyInputStream
#include <google/protobuf/parse_context.h> // google::protobuf::internal::InlineGreedyStringParser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedBoolParser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedEnumParser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedFixed32Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedFixed64Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedFloatParser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedInt32Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedInt64Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedSFixed32Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedSFixed64Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedSInt32Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedSInt64Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedUInt32Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::PackedUInt64Parser
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseBigVarint
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext::Data
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ReadSizeFallback
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ReadTag
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ReadTagFallback
#include <google/protobuf/parse_context.h> // google::protobuf::internal::UnalignedLoad
#include <google/protobuf/parse_context.h> // google::protobuf::internal::VarintParse
#include <google/protobuf/parse_context.h> // google::protobuf::internal::VarintParseSlow
#include <google/protobuf/parse_context.h> // google::protobuf::internal::VarintParseSlow32
#include <google/protobuf/parse_context.h> // google::protobuf::internal::VarintParseSlow64
#include <google/protobuf/parse_context.h> // google::protobuf::internal::VerifyUTF8
#include <google/protobuf/parse_context.h> // google::protobuf::internal::WriteLengthDelimited
#include <google/protobuf/parse_context.h> // google::protobuf::internal::WriteVarint
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/stubs/stringpiece.h> // google::protobuf::StringPiece
#include <google/protobuf/unknown_field_set.h> // 
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <google/protobuf/wire_format_lite.h> // 
#include <google/protobuf/wire_format_lite.h> // google::protobuf::internal::CodedOutputStreamFieldSkipper
#include <google/protobuf/wire_format_lite.h> // google::protobuf::internal::ComputeUnknownMessageSetItemsSize
#include <google/protobuf/wire_format_lite.h> // google::protobuf::internal::FieldSkipper
#include <google/protobuf/wire_format_lite.h> // google::protobuf::internal::InternalSerializeUnknownMessageSetItemsToArray
#include <google/protobuf/wire_format_lite.h> // google::protobuf::internal::WireFormatLite
#include <ios> // std::_Ios_Seekdir
#include <iostream> // --trace
#include <istream> // std::basic_istream
#include <iterator> // __gnu_cxx::__normal_iterator
#include <iterator> // std::reverse_iterator
#include <memory> // std::allocator
#include <ostream> // std::basic_ostream
#include <sstream> // __str__
#include <streambuf> // std::basic_streambuf
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <utility> // std::pair
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

// google::protobuf::internal::ImplicitWeakMessage file:google/protobuf/implicit_weak_message.h line:57
struct PyCallBack_google_protobuf_internal_ImplicitWeakMessage : public google::protobuf::internal::ImplicitWeakMessage {
	using google::protobuf::internal::ImplicitWeakMessage::ImplicitWeakMessage;

	class google::protobuf::MessageLite * New() const override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "New");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<class google::protobuf::MessageLite *>::value) {
				static pybind11::detail::override_caster_t<class google::protobuf::MessageLite *> caster;
				return pybind11::detail::cast_ref<class google::protobuf::MessageLite *>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<class google::protobuf::MessageLite *>(std::move(o));
		}
		return ImplicitWeakMessage::New();
	}
	class google::protobuf::MessageLite * New(class google::protobuf::Arena * a0) const override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "New");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>(a0);
			if (pybind11::detail::cast_is_temporary_value_reference<class google::protobuf::MessageLite *>::value) {
				static pybind11::detail::override_caster_t<class google::protobuf::MessageLite *> caster;
				return pybind11::detail::cast_ref<class google::protobuf::MessageLite *>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<class google::protobuf::MessageLite *>(std::move(o));
		}
		return ImplicitWeakMessage::New(a0);
	}
	void Clear() override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "Clear");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<void>::value) {
				static pybind11::detail::override_caster_t<void> caster;
				return pybind11::detail::cast_ref<void>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<void>(std::move(o));
		}
		return ImplicitWeakMessage::Clear();
	}
	bool IsInitialized() const override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "IsInitialized");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<bool>::value) {
				static pybind11::detail::override_caster_t<bool> caster;
				return pybind11::detail::cast_ref<bool>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<bool>(std::move(o));
		}
		return ImplicitWeakMessage::IsInitialized();
	}
	void CheckTypeAndMergeFrom(const class google::protobuf::MessageLite & a0) override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "CheckTypeAndMergeFrom");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>(a0);
			if (pybind11::detail::cast_is_temporary_value_reference<void>::value) {
				static pybind11::detail::override_caster_t<void> caster;
				return pybind11::detail::cast_ref<void>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<void>(std::move(o));
		}
		return ImplicitWeakMessage::CheckTypeAndMergeFrom(a0);
	}
	unsigned long ByteSizeLong() const override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "ByteSizeLong");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<unsigned long>::value) {
				static pybind11::detail::override_caster_t<unsigned long> caster;
				return pybind11::detail::cast_ref<unsigned long>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<unsigned long>(std::move(o));
		}
		return ImplicitWeakMessage::ByteSizeLong();
	}
	int GetCachedSize() const override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::internal::ImplicitWeakMessage *>(this), "GetCachedSize");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<int>::value) {
				static pybind11::detail::override_caster_t<int> caster;
				return pybind11::detail::cast_ref<int>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<int>(std::move(o));
		}
		return ImplicitWeakMessage::GetCachedSize();
	}
};

void bind_google_protobuf_implicit_weak_message(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B73_[google::protobuf::internal::ImplicitWeakMessage] ";
	{ // google::protobuf::internal::ImplicitWeakMessage file:google/protobuf/implicit_weak_message.h line:57
		pybind11::class_<google::protobuf::internal::ImplicitWeakMessage, std::shared_ptr<google::protobuf::internal::ImplicitWeakMessage>, PyCallBack_google_protobuf_internal_ImplicitWeakMessage, google::protobuf::MessageLite> cl(M("google::protobuf::internal"), "ImplicitWeakMessage", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::internal::ImplicitWeakMessage(); }, [](){ return new PyCallBack_google_protobuf_internal_ImplicitWeakMessage(); } ) );
		cl.def( pybind11::init<class google::protobuf::Arena *>(), pybind11::arg("arena") );

		cl.def_static("default_instance", (const class google::protobuf::internal::ImplicitWeakMessage * (*)()) &google::protobuf::internal::ImplicitWeakMessage::default_instance, "C++: google::protobuf::internal::ImplicitWeakMessage::default_instance() --> const class google::protobuf::internal::ImplicitWeakMessage *", pybind11::return_value_policy::automatic);
		cl.def("New", (class google::protobuf::MessageLite * (google::protobuf::internal::ImplicitWeakMessage::*)() const) &google::protobuf::internal::ImplicitWeakMessage::New, "C++: google::protobuf::internal::ImplicitWeakMessage::New() const --> class google::protobuf::MessageLite *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::MessageLite * (google::protobuf::internal::ImplicitWeakMessage::*)(class google::protobuf::Arena *) const) &google::protobuf::internal::ImplicitWeakMessage::New, "C++: google::protobuf::internal::ImplicitWeakMessage::New(class google::protobuf::Arena *) const --> class google::protobuf::MessageLite *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("Clear", (void (google::protobuf::internal::ImplicitWeakMessage::*)()) &google::protobuf::internal::ImplicitWeakMessage::Clear, "C++: google::protobuf::internal::ImplicitWeakMessage::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::internal::ImplicitWeakMessage::*)() const) &google::protobuf::internal::ImplicitWeakMessage::IsInitialized, "C++: google::protobuf::internal::ImplicitWeakMessage::IsInitialized() const --> bool");
		cl.def("CheckTypeAndMergeFrom", (void (google::protobuf::internal::ImplicitWeakMessage::*)(const class google::protobuf::MessageLite &)) &google::protobuf::internal::ImplicitWeakMessage::CheckTypeAndMergeFrom, "C++: google::protobuf::internal::ImplicitWeakMessage::CheckTypeAndMergeFrom(const class google::protobuf::MessageLite &) --> void", pybind11::arg("other"));
		cl.def("_InternalParse", (const char * (google::protobuf::internal::ImplicitWeakMessage::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::internal::ImplicitWeakMessage::_InternalParse, "C++: google::protobuf::internal::ImplicitWeakMessage::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::internal::ImplicitWeakMessage::*)() const) &google::protobuf::internal::ImplicitWeakMessage::ByteSizeLong, "C++: google::protobuf::internal::ImplicitWeakMessage::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::internal::ImplicitWeakMessage::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::internal::ImplicitWeakMessage::_InternalSerialize, "C++: google::protobuf::internal::ImplicitWeakMessage::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::internal::ImplicitWeakMessage::*)() const) &google::protobuf::internal::ImplicitWeakMessage::GetCachedSize, "C++: google::protobuf::internal::ImplicitWeakMessage::GetCachedSize() const --> int");
	}
	std::cout << "B74_[google::protobuf::internal::WireFormatLite] ";
	std::cout << "B75_[google::protobuf::internal::FieldSkipper] ";
	std::cout << "B76_[google::protobuf::internal::CodedOutputStreamFieldSkipper] ";
	std::cout << "B77_[unsigned char * google::protobuf::internal::InternalSerializeUnknownMessageSetItemsToArray(const std::string &, unsigned char *, class google::protobuf::io::EpsCopyOutputStream *)] ";
	std::cout << "B78_[unsigned long google::protobuf::internal::ComputeUnknownMessageSetItemsSize(const std::string &)] ";
	std::cout << "B79_[void google::protobuf::internal::WriteVarint(unsigned int, unsigned long, std::string *)] ";
	std::cout << "B80_[void google::protobuf::internal::WriteLengthDelimited(unsigned int, class google::protobuf::StringPiece, std::string *)] ";
	std::cout << "B81_[void google::protobuf::internal::WriteVarint(unsigned int, unsigned long, class google::protobuf::UnknownFieldSet *)] ";
	std::cout << "B82_[void google::protobuf::internal::WriteLengthDelimited(unsigned int, class google::protobuf::StringPiece, class google::protobuf::UnknownFieldSet *)] ";
	std::cout << "B83_[google::protobuf::internal::EpsCopyInputStream] ";
	{ // google::protobuf::internal::EpsCopyInputStream file:google/protobuf/parse_context.h line:108
		pybind11::class_<google::protobuf::internal::EpsCopyInputStream, std::shared_ptr<google::protobuf::internal::EpsCopyInputStream>> cl(M("google::protobuf::internal"), "EpsCopyInputStream", "");
		cl.def( pybind11::init<bool>(), pybind11::arg("enable_aliasing") );

		cl.def( pybind11::init( [](google::protobuf::internal::EpsCopyInputStream const &o){ return new google::protobuf::internal::EpsCopyInputStream(o); } ) );
		cl.def("BackUp", (void (google::protobuf::internal::EpsCopyInputStream::*)(const char *)) &google::protobuf::internal::EpsCopyInputStream::BackUp, "C++: google::protobuf::internal::EpsCopyInputStream::BackUp(const char *) --> void", pybind11::arg("ptr"));
		cl.def("PushLimit", (int (google::protobuf::internal::EpsCopyInputStream::*)(const char *, int)) &google::protobuf::internal::EpsCopyInputStream::PushLimit, "C++: google::protobuf::internal::EpsCopyInputStream::PushLimit(const char *, int) --> int", pybind11::arg("ptr"), pybind11::arg("limit"));
		cl.def("PopLimit", (bool (google::protobuf::internal::EpsCopyInputStream::*)(int)) &google::protobuf::internal::EpsCopyInputStream::PopLimit, "C++: google::protobuf::internal::EpsCopyInputStream::PopLimit(int) --> bool", pybind11::arg("delta"));
		cl.def("Skip", (const char * (google::protobuf::internal::EpsCopyInputStream::*)(const char *, int)) &google::protobuf::internal::EpsCopyInputStream::Skip, "C++: google::protobuf::internal::EpsCopyInputStream::Skip(const char *, int) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("size"));
		cl.def("LastTag", (unsigned int (google::protobuf::internal::EpsCopyInputStream::*)() const) &google::protobuf::internal::EpsCopyInputStream::LastTag, "C++: google::protobuf::internal::EpsCopyInputStream::LastTag() const --> unsigned int");
		cl.def("ConsumeEndGroup", (bool (google::protobuf::internal::EpsCopyInputStream::*)(unsigned int)) &google::protobuf::internal::EpsCopyInputStream::ConsumeEndGroup, "C++: google::protobuf::internal::EpsCopyInputStream::ConsumeEndGroup(unsigned int) --> bool", pybind11::arg("start_tag"));
		cl.def("EndedAtLimit", (bool (google::protobuf::internal::EpsCopyInputStream::*)() const) &google::protobuf::internal::EpsCopyInputStream::EndedAtLimit, "C++: google::protobuf::internal::EpsCopyInputStream::EndedAtLimit() const --> bool");
		cl.def("EndedAtEndOfStream", (bool (google::protobuf::internal::EpsCopyInputStream::*)() const) &google::protobuf::internal::EpsCopyInputStream::EndedAtEndOfStream, "C++: google::protobuf::internal::EpsCopyInputStream::EndedAtEndOfStream() const --> bool");
		cl.def("SetLastTag", (void (google::protobuf::internal::EpsCopyInputStream::*)(unsigned int)) &google::protobuf::internal::EpsCopyInputStream::SetLastTag, "C++: google::protobuf::internal::EpsCopyInputStream::SetLastTag(unsigned int) --> void", pybind11::arg("tag"));
		cl.def("SetEndOfStream", (void (google::protobuf::internal::EpsCopyInputStream::*)()) &google::protobuf::internal::EpsCopyInputStream::SetEndOfStream, "C++: google::protobuf::internal::EpsCopyInputStream::SetEndOfStream() --> void");
		cl.def("IsExceedingLimit", (bool (google::protobuf::internal::EpsCopyInputStream::*)(const char *)) &google::protobuf::internal::EpsCopyInputStream::IsExceedingLimit, "C++: google::protobuf::internal::EpsCopyInputStream::IsExceedingLimit(const char *) --> bool", pybind11::arg("ptr"));
		cl.def("BytesUntilLimit", (int (google::protobuf::internal::EpsCopyInputStream::*)(const char *) const) &google::protobuf::internal::EpsCopyInputStream::BytesUntilLimit, "C++: google::protobuf::internal::EpsCopyInputStream::BytesUntilLimit(const char *) const --> int", pybind11::arg("ptr"));
		cl.def("DataAvailable", (bool (google::protobuf::internal::EpsCopyInputStream::*)(const char *)) &google::protobuf::internal::EpsCopyInputStream::DataAvailable, "C++: google::protobuf::internal::EpsCopyInputStream::DataAvailable(const char *) --> bool", pybind11::arg("ptr"));
	}
	std::cout << "B84_[google::protobuf::internal::ParseContext] ";
	{ // google::protobuf::internal::ParseContext file:google/protobuf/parse_context.h line:375
		pybind11::class_<google::protobuf::internal::ParseContext, std::shared_ptr<google::protobuf::internal::ParseContext>, google::protobuf::internal::EpsCopyInputStream> cl(M("google::protobuf::internal"), "ParseContext", "");
		cl.def("TrackCorrectEnding", (void (google::protobuf::internal::ParseContext::*)()) &google::protobuf::internal::ParseContext::TrackCorrectEnding, "C++: google::protobuf::internal::ParseContext::TrackCorrectEnding() --> void");
		cl.def("depth", (int (google::protobuf::internal::ParseContext::*)() const) &google::protobuf::internal::ParseContext::depth, "C++: google::protobuf::internal::ParseContext::depth() const --> int");
		cl.def("data", (struct google::protobuf::internal::ParseContext::Data & (google::protobuf::internal::ParseContext::*)()) &google::protobuf::internal::ParseContext::data, "C++: google::protobuf::internal::ParseContext::data() --> struct google::protobuf::internal::ParseContext::Data &", pybind11::return_value_policy::automatic);
		cl.def("ParseMessage", (const char * (google::protobuf::internal::ParseContext::*)(class google::protobuf::MessageLite *, const char *)) &google::protobuf::internal::ParseContext::ParseMessage, "C++: google::protobuf::internal::ParseContext::ParseMessage(class google::protobuf::MessageLite *, const char *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("msg"), pybind11::arg("ptr"));
		cl.def("ParseMessage", (const char * (google::protobuf::internal::ParseContext::*)(class google::protobuf::Message *, const char *)) &google::protobuf::internal::ParseContext::ParseMessage, "C++: google::protobuf::internal::ParseContext::ParseMessage(class google::protobuf::Message *, const char *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("msg"), pybind11::arg("ptr"));

		{ // google::protobuf::internal::ParseContext::Data file:google/protobuf/parse_context.h line:377
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::internal::ParseContext::Data, std::shared_ptr<google::protobuf::internal::ParseContext::Data>> cl(enclosing_class, "Data", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::internal::ParseContext::Data(); } ) );
		}

	}
	std::cout << "B85_[google::protobuf::internal::EndianHelper<1>] ";
	std::cout << "B86_[google::protobuf::internal::EndianHelper<2>] ";
	std::cout << "B87_[google::protobuf::internal::EndianHelper<4>] ";
	std::cout << "B88_[google::protobuf::internal::EndianHelper<8>] ";
	std::cout << "B89_[unsigned short google::protobuf::internal::UnalignedLoad<unsigned short>(const char *)] ";
	std::cout << "B90_[unsigned long google::protobuf::internal::UnalignedLoad<unsigned long>(const char *)] ";
	std::cout << "B91_[unsigned int google::protobuf::internal::UnalignedLoad<unsigned int>(const char *)] ";
	std::cout << "B92_[float google::protobuf::internal::UnalignedLoad<float>(const char *)] ";
	std::cout << "B93_[double google::protobuf::internal::UnalignedLoad<double>(const char *)] ";
	std::cout << "B94_[long google::protobuf::internal::UnalignedLoad<long>(const char *)] ";
	std::cout << "B95_[int google::protobuf::internal::UnalignedLoad<int>(const char *)] ";
	std::cout << "B96_[struct std::pair<const char *, unsigned int> google::protobuf::internal::VarintParseSlow32(const char *, unsigned int)] ";
	std::cout << "B97_[struct std::pair<const char *, unsigned long> google::protobuf::internal::VarintParseSlow64(const char *, unsigned int)] ";
	std::cout << "B98_[const char * google::protobuf::internal::VarintParseSlow(const char *, unsigned int, unsigned int *)] ";
	std::cout << "B99_[const char * google::protobuf::internal::VarintParseSlow(const char *, unsigned int, unsigned long *)] ";
	std::cout << "B100_[const char * google::protobuf::internal::VarintParse<unsigned long>(const char *, unsigned long *)] ";
	std::cout << "B101_[const char * google::protobuf::internal::VarintParse<unsigned int>(const char *, unsigned int *)] ";
	std::cout << "B102_[struct std::pair<const char *, unsigned int> google::protobuf::internal::ReadTagFallback(const char *, unsigned int)] ";
	std::cout << "B103_[const char * google::protobuf::internal::ReadTag(const char *, unsigned int *, unsigned int)] ";
	std::cout << "B104_[const char * google::protobuf::internal::ParseBigVarint(const char *, unsigned long *)] ";
	std::cout << "B105_[struct std::pair<const char *, int> google::protobuf::internal::ReadSizeFallback(const char *, unsigned int)] ";
	std::cout << "B106_[bool google::protobuf::internal::VerifyUTF8(class google::protobuf::StringPiece, const char *)] ";
	std::cout << "B107_[bool google::protobuf::internal::VerifyUTF8(const std::string *, const char *)] ";
	std::cout << "B108_[const char * google::protobuf::internal::InlineGreedyStringParser(std::string *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B109_[const char * google::protobuf::internal::PackedInt32Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B110_[const char * google::protobuf::internal::PackedUInt32Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B111_[const char * google::protobuf::internal::PackedInt64Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B112_[const char * google::protobuf::internal::PackedUInt64Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B113_[const char * google::protobuf::internal::PackedSInt32Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B114_[const char * google::protobuf::internal::PackedSInt64Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B115_[const char * google::protobuf::internal::PackedEnumParser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B116_[const char * google::protobuf::internal::PackedBoolParser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B117_[const char * google::protobuf::internal::PackedFixed32Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B118_[const char * google::protobuf::internal::PackedSFixed32Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B119_[const char * google::protobuf::internal::PackedFixed64Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B120_[const char * google::protobuf::internal::PackedSFixed64Parser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
	std::cout << "B121_[const char * google::protobuf::internal::PackedFloatParser(void *, const char *, class google::protobuf::internal::ParseContext *)] ";
}


// File: google/protobuf/descriptor.cpp
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B122_[google::protobuf::SourceLocation] ";
	{ // google::protobuf::SourceLocation file:google/protobuf/descriptor.h line:148
		pybind11::class_<google::protobuf::SourceLocation, std::shared_ptr<google::protobuf::SourceLocation>> cl(M("google::protobuf"), "SourceLocation", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::SourceLocation(); } ) );
		cl.def( pybind11::init( [](google::protobuf::SourceLocation const &o){ return new google::protobuf::SourceLocation(o); } ) );
		cl.def_readwrite("start_line", &google::protobuf::SourceLocation::start_line);
		cl.def_readwrite("end_line", &google::protobuf::SourceLocation::end_line);
		cl.def_readwrite("start_column", &google::protobuf::SourceLocation::start_column);
		cl.def_readwrite("end_column", &google::protobuf::SourceLocation::end_column);
		cl.def_readwrite("leading_comments", &google::protobuf::SourceLocation::leading_comments);
		cl.def_readwrite("trailing_comments", &google::protobuf::SourceLocation::trailing_comments);
		cl.def_readwrite("leading_detached_comments", &google::protobuf::SourceLocation::leading_detached_comments);
	}
	std::cout << "B123_[google::protobuf::DebugStringOptions] ";
}


// File: google/protobuf/descriptor_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor::ExtensionRange
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor::ReservedRange
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B124_[google::protobuf::Descriptor] ";
	{ // google::protobuf::Descriptor file:google/protobuf/descriptor.h line:234
		pybind11::class_<google::protobuf::Descriptor, std::shared_ptr<google::protobuf::Descriptor>> cl(M("google::protobuf"), "Descriptor", "");

		pybind11::enum_<google::protobuf::Descriptor::WellKnownType>(cl, "WellKnownType", pybind11::arithmetic(), "")
			.value("WELLKNOWNTYPE_UNSPECIFIED", google::protobuf::Descriptor::WELLKNOWNTYPE_UNSPECIFIED)
			.value("WELLKNOWNTYPE_DOUBLEVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_DOUBLEVALUE)
			.value("WELLKNOWNTYPE_FLOATVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_FLOATVALUE)
			.value("WELLKNOWNTYPE_INT64VALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_INT64VALUE)
			.value("WELLKNOWNTYPE_UINT64VALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_UINT64VALUE)
			.value("WELLKNOWNTYPE_INT32VALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_INT32VALUE)
			.value("WELLKNOWNTYPE_UINT32VALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_UINT32VALUE)
			.value("WELLKNOWNTYPE_STRINGVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_STRINGVALUE)
			.value("WELLKNOWNTYPE_BYTESVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_BYTESVALUE)
			.value("WELLKNOWNTYPE_BOOLVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_BOOLVALUE)
			.value("WELLKNOWNTYPE_ANY", google::protobuf::Descriptor::WELLKNOWNTYPE_ANY)
			.value("WELLKNOWNTYPE_FIELDMASK", google::protobuf::Descriptor::WELLKNOWNTYPE_FIELDMASK)
			.value("WELLKNOWNTYPE_DURATION", google::protobuf::Descriptor::WELLKNOWNTYPE_DURATION)
			.value("WELLKNOWNTYPE_TIMESTAMP", google::protobuf::Descriptor::WELLKNOWNTYPE_TIMESTAMP)
			.value("WELLKNOWNTYPE_VALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_VALUE)
			.value("WELLKNOWNTYPE_LISTVALUE", google::protobuf::Descriptor::WELLKNOWNTYPE_LISTVALUE)
			.value("WELLKNOWNTYPE_STRUCT", google::protobuf::Descriptor::WELLKNOWNTYPE_STRUCT)
			.value("__WELLKNOWNTYPE__DO_NOT_USE__ADD_DEFAULT_INSTEAD__", google::protobuf::Descriptor::__WELLKNOWNTYPE__DO_NOT_USE__ADD_DEFAULT_INSTEAD__)
			.export_values();

		cl.def("index", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::index, "C++: google::protobuf::Descriptor::index() const --> int");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::file, "C++: google::protobuf::Descriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("containing_type", (const class google::protobuf::Descriptor * (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::containing_type, "C++: google::protobuf::Descriptor::containing_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("options", (const class google::protobuf::MessageOptions & (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::options, "C++: google::protobuf::Descriptor::options() const --> const class google::protobuf::MessageOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::Descriptor::*)(class google::protobuf::DescriptorProto *) const) &google::protobuf::Descriptor::CopyTo, "C++: google::protobuf::Descriptor::CopyTo(class google::protobuf::DescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("is_placeholder", (bool (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::is_placeholder, "C++: google::protobuf::Descriptor::is_placeholder() const --> bool");
		cl.def("well_known_type", (enum google::protobuf::Descriptor::WellKnownType (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::well_known_type, "C++: google::protobuf::Descriptor::well_known_type() const --> enum google::protobuf::Descriptor::WellKnownType");
		cl.def("field_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::field_count, "C++: google::protobuf::Descriptor::field_count() const --> int");
		cl.def("field", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::field, "C++: google::protobuf::Descriptor::field(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindFieldByNumber", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::FindFieldByNumber, "C++: google::protobuf::Descriptor::FindFieldByNumber(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("FindFieldByName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindFieldByName, "C++: google::protobuf::Descriptor::FindFieldByName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindFieldByLowercaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindFieldByLowercaseName, "C++: google::protobuf::Descriptor::FindFieldByLowercaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("lowercase_name"));
		cl.def("FindFieldByCamelcaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindFieldByCamelcaseName, "C++: google::protobuf::Descriptor::FindFieldByCamelcaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("camelcase_name"));
		cl.def("oneof_decl_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::oneof_decl_count, "C++: google::protobuf::Descriptor::oneof_decl_count() const --> int");
		cl.def("real_oneof_decl_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::real_oneof_decl_count, "C++: google::protobuf::Descriptor::real_oneof_decl_count() const --> int");
		cl.def("oneof_decl", (const class google::protobuf::OneofDescriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::oneof_decl, "C++: google::protobuf::Descriptor::oneof_decl(int) const --> const class google::protobuf::OneofDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindOneofByName", (const class google::protobuf::OneofDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindOneofByName, "C++: google::protobuf::Descriptor::FindOneofByName(const std::string &) const --> const class google::protobuf::OneofDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("nested_type_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::nested_type_count, "C++: google::protobuf::Descriptor::nested_type_count() const --> int");
		cl.def("nested_type", (const class google::protobuf::Descriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::nested_type, "C++: google::protobuf::Descriptor::nested_type(int) const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindNestedTypeByName", (const class google::protobuf::Descriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindNestedTypeByName, "C++: google::protobuf::Descriptor::FindNestedTypeByName(const std::string &) const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("enum_type_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::enum_type_count, "C++: google::protobuf::Descriptor::enum_type_count() const --> int");
		cl.def("enum_type", (const class google::protobuf::EnumDescriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::enum_type, "C++: google::protobuf::Descriptor::enum_type(int) const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindEnumTypeByName", (const class google::protobuf::EnumDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindEnumTypeByName, "C++: google::protobuf::Descriptor::FindEnumTypeByName(const std::string &) const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindEnumValueByName", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindEnumValueByName, "C++: google::protobuf::Descriptor::FindEnumValueByName(const std::string &) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("extension_range_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::extension_range_count, "C++: google::protobuf::Descriptor::extension_range_count() const --> int");
		cl.def("extension_range", (const struct google::protobuf::Descriptor::ExtensionRange * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::extension_range, "C++: google::protobuf::Descriptor::extension_range(int) const --> const struct google::protobuf::Descriptor::ExtensionRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("IsExtensionNumber", (bool (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::IsExtensionNumber, "C++: google::protobuf::Descriptor::IsExtensionNumber(int) const --> bool", pybind11::arg("number"));
		cl.def("FindExtensionRangeContainingNumber", (const struct google::protobuf::Descriptor::ExtensionRange * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::FindExtensionRangeContainingNumber, "C++: google::protobuf::Descriptor::FindExtensionRangeContainingNumber(int) const --> const struct google::protobuf::Descriptor::ExtensionRange *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("extension_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::extension_count, "C++: google::protobuf::Descriptor::extension_count() const --> int");
		cl.def("extension", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::extension, "C++: google::protobuf::Descriptor::extension(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindExtensionByName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindExtensionByName, "C++: google::protobuf::Descriptor::FindExtensionByName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByLowercaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindExtensionByLowercaseName, "C++: google::protobuf::Descriptor::FindExtensionByLowercaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByCamelcaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::FindExtensionByCamelcaseName, "C++: google::protobuf::Descriptor::FindExtensionByCamelcaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("reserved_range_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::reserved_range_count, "C++: google::protobuf::Descriptor::reserved_range_count() const --> int");
		cl.def("reserved_range", (const struct google::protobuf::Descriptor::ReservedRange * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::reserved_range, "C++: google::protobuf::Descriptor::reserved_range(int) const --> const struct google::protobuf::Descriptor::ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("IsReservedNumber", (bool (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::IsReservedNumber, "C++: google::protobuf::Descriptor::IsReservedNumber(int) const --> bool", pybind11::arg("number"));
		cl.def("FindReservedRangeContainingNumber", (const struct google::protobuf::Descriptor::ReservedRange * (google::protobuf::Descriptor::*)(int) const) &google::protobuf::Descriptor::FindReservedRangeContainingNumber, "C++: google::protobuf::Descriptor::FindReservedRangeContainingNumber(int) const --> const struct google::protobuf::Descriptor::ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("reserved_name_count", (int (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::reserved_name_count, "C++: google::protobuf::Descriptor::reserved_name_count() const --> int");
		cl.def("IsReservedName", (bool (google::protobuf::Descriptor::*)(const std::string &) const) &google::protobuf::Descriptor::IsReservedName, "C++: google::protobuf::Descriptor::IsReservedName(const std::string &) const --> bool", pybind11::arg("name"));
		cl.def("GetSourceLocation", (bool (google::protobuf::Descriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::Descriptor::GetSourceLocation, "C++: google::protobuf::Descriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
		cl.def("map_key", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::map_key, "C++: google::protobuf::Descriptor::map_key() const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference);
		cl.def("map_value", (const class google::protobuf::FieldDescriptor * (google::protobuf::Descriptor::*)() const) &google::protobuf::Descriptor::map_value, "C++: google::protobuf::Descriptor::map_value() const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference);

		{ // google::protobuf::Descriptor::ExtensionRange file:google/protobuf/descriptor.h line:385
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Descriptor::ExtensionRange, std::shared_ptr<google::protobuf::Descriptor::ExtensionRange>> cl(enclosing_class, "ExtensionRange", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Descriptor::ExtensionRange(); } ) );
			cl.def_readwrite("start", &google::protobuf::Descriptor::ExtensionRange::start);
			cl.def_readwrite("end", &google::protobuf::Descriptor::ExtensionRange::end);
			cl.def("CopyTo", (void (google::protobuf::Descriptor::ExtensionRange::*)(class google::protobuf::DescriptorProto_ExtensionRange *) const) &google::protobuf::Descriptor::ExtensionRange::CopyTo, "C++: google::protobuf::Descriptor::ExtensionRange::CopyTo(class google::protobuf::DescriptorProto_ExtensionRange *) const --> void", pybind11::arg("proto"));
		}

		{ // google::protobuf::Descriptor::ReservedRange file:google/protobuf/descriptor.h line:458
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::Descriptor::ReservedRange, std::shared_ptr<google::protobuf::Descriptor::ReservedRange>> cl(enclosing_class, "ReservedRange", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::Descriptor::ReservedRange(); } ) );
			cl.def_readwrite("start", &google::protobuf::Descriptor::ReservedRange::start);
			cl.def_readwrite("end", &google::protobuf::Descriptor::ReservedRange::end);
		}

	}
}


// File: google/protobuf/descriptor_2.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_2(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B125_[google::protobuf::FieldDescriptor] ";
	{ // google::protobuf::FieldDescriptor file:google/protobuf/descriptor.h line:587
		pybind11::class_<google::protobuf::FieldDescriptor, std::shared_ptr<google::protobuf::FieldDescriptor>> cl(M("google::protobuf"), "FieldDescriptor", "");

		pybind11::enum_<google::protobuf::FieldDescriptor::Type>(cl, "Type", pybind11::arithmetic(), "")
			.value("TYPE_DOUBLE", google::protobuf::FieldDescriptor::TYPE_DOUBLE)
			.value("TYPE_FLOAT", google::protobuf::FieldDescriptor::TYPE_FLOAT)
			.value("TYPE_INT64", google::protobuf::FieldDescriptor::TYPE_INT64)
			.value("TYPE_UINT64", google::protobuf::FieldDescriptor::TYPE_UINT64)
			.value("TYPE_INT32", google::protobuf::FieldDescriptor::TYPE_INT32)
			.value("TYPE_FIXED64", google::protobuf::FieldDescriptor::TYPE_FIXED64)
			.value("TYPE_FIXED32", google::protobuf::FieldDescriptor::TYPE_FIXED32)
			.value("TYPE_BOOL", google::protobuf::FieldDescriptor::TYPE_BOOL)
			.value("TYPE_STRING", google::protobuf::FieldDescriptor::TYPE_STRING)
			.value("TYPE_GROUP", google::protobuf::FieldDescriptor::TYPE_GROUP)
			.value("TYPE_MESSAGE", google::protobuf::FieldDescriptor::TYPE_MESSAGE)
			.value("TYPE_BYTES", google::protobuf::FieldDescriptor::TYPE_BYTES)
			.value("TYPE_UINT32", google::protobuf::FieldDescriptor::TYPE_UINT32)
			.value("TYPE_ENUM", google::protobuf::FieldDescriptor::TYPE_ENUM)
			.value("TYPE_SFIXED32", google::protobuf::FieldDescriptor::TYPE_SFIXED32)
			.value("TYPE_SFIXED64", google::protobuf::FieldDescriptor::TYPE_SFIXED64)
			.value("TYPE_SINT32", google::protobuf::FieldDescriptor::TYPE_SINT32)
			.value("TYPE_SINT64", google::protobuf::FieldDescriptor::TYPE_SINT64)
			.value("MAX_TYPE", google::protobuf::FieldDescriptor::MAX_TYPE)
			.export_values();


		pybind11::enum_<google::protobuf::FieldDescriptor::CppType>(cl, "CppType", pybind11::arithmetic(), "")
			.value("CPPTYPE_INT32", google::protobuf::FieldDescriptor::CPPTYPE_INT32)
			.value("CPPTYPE_INT64", google::protobuf::FieldDescriptor::CPPTYPE_INT64)
			.value("CPPTYPE_UINT32", google::protobuf::FieldDescriptor::CPPTYPE_UINT32)
			.value("CPPTYPE_UINT64", google::protobuf::FieldDescriptor::CPPTYPE_UINT64)
			.value("CPPTYPE_DOUBLE", google::protobuf::FieldDescriptor::CPPTYPE_DOUBLE)
			.value("CPPTYPE_FLOAT", google::protobuf::FieldDescriptor::CPPTYPE_FLOAT)
			.value("CPPTYPE_BOOL", google::protobuf::FieldDescriptor::CPPTYPE_BOOL)
			.value("CPPTYPE_ENUM", google::protobuf::FieldDescriptor::CPPTYPE_ENUM)
			.value("CPPTYPE_STRING", google::protobuf::FieldDescriptor::CPPTYPE_STRING)
			.value("CPPTYPE_MESSAGE", google::protobuf::FieldDescriptor::CPPTYPE_MESSAGE)
			.value("MAX_CPPTYPE", google::protobuf::FieldDescriptor::MAX_CPPTYPE)
			.export_values();


		pybind11::enum_<google::protobuf::FieldDescriptor::Label>(cl, "Label", pybind11::arithmetic(), "")
			.value("LABEL_OPTIONAL", google::protobuf::FieldDescriptor::LABEL_OPTIONAL)
			.value("LABEL_REQUIRED", google::protobuf::FieldDescriptor::LABEL_REQUIRED)
			.value("LABEL_REPEATED", google::protobuf::FieldDescriptor::LABEL_REPEATED)
			.value("MAX_LABEL", google::protobuf::FieldDescriptor::MAX_LABEL)
			.export_values();

		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::file, "C++: google::protobuf::FieldDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("is_extension", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_extension, "C++: google::protobuf::FieldDescriptor::is_extension() const --> bool");
		cl.def("number", (int (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::number, "C++: google::protobuf::FieldDescriptor::number() const --> int");
		cl.def("type", (enum google::protobuf::FieldDescriptor::Type (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::type, "C++: google::protobuf::FieldDescriptor::type() const --> enum google::protobuf::FieldDescriptor::Type");
		cl.def("type_name", (const char * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::type_name, "C++: google::protobuf::FieldDescriptor::type_name() const --> const char *", pybind11::return_value_policy::reference);
		cl.def("cpp_type", (enum google::protobuf::FieldDescriptor::CppType (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::cpp_type, "C++: google::protobuf::FieldDescriptor::cpp_type() const --> enum google::protobuf::FieldDescriptor::CppType");
		cl.def("cpp_type_name", (const char * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::cpp_type_name, "C++: google::protobuf::FieldDescriptor::cpp_type_name() const --> const char *", pybind11::return_value_policy::reference);
		cl.def("label", (enum google::protobuf::FieldDescriptor::Label (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::label, "C++: google::protobuf::FieldDescriptor::label() const --> enum google::protobuf::FieldDescriptor::Label");
		cl.def("is_required", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_required, "C++: google::protobuf::FieldDescriptor::is_required() const --> bool");
		cl.def("is_optional", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_optional, "C++: google::protobuf::FieldDescriptor::is_optional() const --> bool");
		cl.def("is_repeated", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_repeated, "C++: google::protobuf::FieldDescriptor::is_repeated() const --> bool");
		cl.def("is_packable", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_packable, "C++: google::protobuf::FieldDescriptor::is_packable() const --> bool");
		cl.def("is_packed", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_packed, "C++: google::protobuf::FieldDescriptor::is_packed() const --> bool");
		cl.def("is_map", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::is_map, "C++: google::protobuf::FieldDescriptor::is_map() const --> bool");
		cl.def("has_optional_keyword", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::has_optional_keyword, "C++: google::protobuf::FieldDescriptor::has_optional_keyword() const --> bool");
		cl.def("has_presence", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::has_presence, "C++: google::protobuf::FieldDescriptor::has_presence() const --> bool");
		cl.def("index", (int (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::index, "C++: google::protobuf::FieldDescriptor::index() const --> int");
		cl.def("has_default_value", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::has_default_value, "C++: google::protobuf::FieldDescriptor::has_default_value() const --> bool");
		cl.def("has_json_name", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::has_json_name, "C++: google::protobuf::FieldDescriptor::has_json_name() const --> bool");
		cl.def("default_value_int32", (int (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_int32, "C++: google::protobuf::FieldDescriptor::default_value_int32() const --> int");
		cl.def("default_value_int64", (long (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_int64, "C++: google::protobuf::FieldDescriptor::default_value_int64() const --> long");
		cl.def("default_value_uint32", (unsigned int (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_uint32, "C++: google::protobuf::FieldDescriptor::default_value_uint32() const --> unsigned int");
		cl.def("default_value_uint64", (unsigned long (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_uint64, "C++: google::protobuf::FieldDescriptor::default_value_uint64() const --> unsigned long");
		cl.def("default_value_float", (float (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_float, "C++: google::protobuf::FieldDescriptor::default_value_float() const --> float");
		cl.def("default_value_double", (double (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_double, "C++: google::protobuf::FieldDescriptor::default_value_double() const --> double");
		cl.def("default_value_bool", (bool (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_bool, "C++: google::protobuf::FieldDescriptor::default_value_bool() const --> bool");
		cl.def("default_value_enum", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::default_value_enum, "C++: google::protobuf::FieldDescriptor::default_value_enum() const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference);
		cl.def("containing_type", (const class google::protobuf::Descriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::containing_type, "C++: google::protobuf::FieldDescriptor::containing_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("containing_oneof", (const class google::protobuf::OneofDescriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::containing_oneof, "C++: google::protobuf::FieldDescriptor::containing_oneof() const --> const class google::protobuf::OneofDescriptor *", pybind11::return_value_policy::reference);
		cl.def("real_containing_oneof", (const class google::protobuf::OneofDescriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::real_containing_oneof, "C++: google::protobuf::FieldDescriptor::real_containing_oneof() const --> const class google::protobuf::OneofDescriptor *", pybind11::return_value_policy::reference);
		cl.def("index_in_oneof", (int (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::index_in_oneof, "C++: google::protobuf::FieldDescriptor::index_in_oneof() const --> int");
		cl.def("extension_scope", (const class google::protobuf::Descriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::extension_scope, "C++: google::protobuf::FieldDescriptor::extension_scope() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("message_type", (const class google::protobuf::Descriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::message_type, "C++: google::protobuf::FieldDescriptor::message_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("enum_type", (const class google::protobuf::EnumDescriptor * (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::enum_type, "C++: google::protobuf::FieldDescriptor::enum_type() const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference);
		cl.def("options", (const class google::protobuf::FieldOptions & (google::protobuf::FieldDescriptor::*)() const) &google::protobuf::FieldDescriptor::options, "C++: google::protobuf::FieldDescriptor::options() const --> const class google::protobuf::FieldOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::FieldDescriptor::*)(class google::protobuf::FieldDescriptorProto *) const) &google::protobuf::FieldDescriptor::CopyTo, "C++: google::protobuf::FieldDescriptor::CopyTo(class google::protobuf::FieldDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def_static("TypeToCppType", (enum google::protobuf::FieldDescriptor::CppType (*)(enum google::protobuf::FieldDescriptor::Type)) &google::protobuf::FieldDescriptor::TypeToCppType, "C++: google::protobuf::FieldDescriptor::TypeToCppType(enum google::protobuf::FieldDescriptor::Type) --> enum google::protobuf::FieldDescriptor::CppType", pybind11::arg("type"));
		cl.def_static("TypeName", (const char * (*)(enum google::protobuf::FieldDescriptor::Type)) &google::protobuf::FieldDescriptor::TypeName, "C++: google::protobuf::FieldDescriptor::TypeName(enum google::protobuf::FieldDescriptor::Type) --> const char *", pybind11::return_value_policy::automatic, pybind11::arg("type"));
		cl.def_static("CppTypeName", (const char * (*)(enum google::protobuf::FieldDescriptor::CppType)) &google::protobuf::FieldDescriptor::CppTypeName, "C++: google::protobuf::FieldDescriptor::CppTypeName(enum google::protobuf::FieldDescriptor::CppType) --> const char *", pybind11::return_value_policy::automatic, pybind11::arg("cpp_type"));
		cl.def_static("IsTypePackable", (bool (*)(enum google::protobuf::FieldDescriptor::Type)) &google::protobuf::FieldDescriptor::IsTypePackable, "C++: google::protobuf::FieldDescriptor::IsTypePackable(enum google::protobuf::FieldDescriptor::Type) --> bool", pybind11::arg("field_type"));
		cl.def("GetSourceLocation", (bool (google::protobuf::FieldDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::FieldDescriptor::GetSourceLocation, "C++: google::protobuf::FieldDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
	std::cout << "B126_[google::protobuf::OneofDescriptor] ";
	{ // google::protobuf::OneofDescriptor file:google/protobuf/descriptor.h line:933
		pybind11::class_<google::protobuf::OneofDescriptor, std::shared_ptr<google::protobuf::OneofDescriptor>> cl(M("google::protobuf"), "OneofDescriptor", "");
		cl.def("index", (int (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::index, "C++: google::protobuf::OneofDescriptor::index() const --> int");
		cl.def("is_synthetic", (bool (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::is_synthetic, "C++: google::protobuf::OneofDescriptor::is_synthetic() const --> bool");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::file, "C++: google::protobuf::OneofDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("containing_type", (const class google::protobuf::Descriptor * (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::containing_type, "C++: google::protobuf::OneofDescriptor::containing_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("field_count", (int (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::field_count, "C++: google::protobuf::OneofDescriptor::field_count() const --> int");
		cl.def("field", (const class google::protobuf::FieldDescriptor * (google::protobuf::OneofDescriptor::*)(int) const) &google::protobuf::OneofDescriptor::field, "C++: google::protobuf::OneofDescriptor::field(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("options", (const class google::protobuf::OneofOptions & (google::protobuf::OneofDescriptor::*)() const) &google::protobuf::OneofDescriptor::options, "C++: google::protobuf::OneofDescriptor::options() const --> const class google::protobuf::OneofOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::OneofDescriptor::*)(class google::protobuf::OneofDescriptorProto *) const) &google::protobuf::OneofDescriptor::CopyTo, "C++: google::protobuf::OneofDescriptor::CopyTo(class google::protobuf::OneofDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("GetSourceLocation", (bool (google::protobuf::OneofDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::OneofDescriptor::GetSourceLocation, "C++: google::protobuf::OneofDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
}


// File: google/protobuf/descriptor_3.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor::ReservedRange
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::MethodDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_3(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B127_[google::protobuf::EnumDescriptor] ";
	{ // google::protobuf::EnumDescriptor file:google/protobuf/descriptor.h line:1012
		pybind11::class_<google::protobuf::EnumDescriptor, std::shared_ptr<google::protobuf::EnumDescriptor>> cl(M("google::protobuf"), "EnumDescriptor", "");
		cl.def("index", (int (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::index, "C++: google::protobuf::EnumDescriptor::index() const --> int");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::file, "C++: google::protobuf::EnumDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("value_count", (int (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::value_count, "C++: google::protobuf::EnumDescriptor::value_count() const --> int");
		cl.def("value", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::EnumDescriptor::*)(int) const) &google::protobuf::EnumDescriptor::value, "C++: google::protobuf::EnumDescriptor::value(int) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindValueByName", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::EnumDescriptor::*)(const std::string &) const) &google::protobuf::EnumDescriptor::FindValueByName, "C++: google::protobuf::EnumDescriptor::FindValueByName(const std::string &) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindValueByNumber", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::EnumDescriptor::*)(int) const) &google::protobuf::EnumDescriptor::FindValueByNumber, "C++: google::protobuf::EnumDescriptor::FindValueByNumber(int) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("containing_type", (const class google::protobuf::Descriptor * (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::containing_type, "C++: google::protobuf::EnumDescriptor::containing_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("options", (const class google::protobuf::EnumOptions & (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::options, "C++: google::protobuf::EnumDescriptor::options() const --> const class google::protobuf::EnumOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::EnumDescriptor::*)(class google::protobuf::EnumDescriptorProto *) const) &google::protobuf::EnumDescriptor::CopyTo, "C++: google::protobuf::EnumDescriptor::CopyTo(class google::protobuf::EnumDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("is_placeholder", (bool (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::is_placeholder, "C++: google::protobuf::EnumDescriptor::is_placeholder() const --> bool");
		cl.def("reserved_range_count", (int (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::reserved_range_count, "C++: google::protobuf::EnumDescriptor::reserved_range_count() const --> int");
		cl.def("reserved_range", (const struct google::protobuf::EnumDescriptor::ReservedRange * (google::protobuf::EnumDescriptor::*)(int) const) &google::protobuf::EnumDescriptor::reserved_range, "C++: google::protobuf::EnumDescriptor::reserved_range(int) const --> const struct google::protobuf::EnumDescriptor::ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("IsReservedNumber", (bool (google::protobuf::EnumDescriptor::*)(int) const) &google::protobuf::EnumDescriptor::IsReservedNumber, "C++: google::protobuf::EnumDescriptor::IsReservedNumber(int) const --> bool", pybind11::arg("number"));
		cl.def("FindReservedRangeContainingNumber", (const struct google::protobuf::EnumDescriptor::ReservedRange * (google::protobuf::EnumDescriptor::*)(int) const) &google::protobuf::EnumDescriptor::FindReservedRangeContainingNumber, "C++: google::protobuf::EnumDescriptor::FindReservedRangeContainingNumber(int) const --> const struct google::protobuf::EnumDescriptor::ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("reserved_name_count", (int (google::protobuf::EnumDescriptor::*)() const) &google::protobuf::EnumDescriptor::reserved_name_count, "C++: google::protobuf::EnumDescriptor::reserved_name_count() const --> int");
		cl.def("IsReservedName", (bool (google::protobuf::EnumDescriptor::*)(const std::string &) const) &google::protobuf::EnumDescriptor::IsReservedName, "C++: google::protobuf::EnumDescriptor::IsReservedName(const std::string &) const --> bool", pybind11::arg("name"));
		cl.def("GetSourceLocation", (bool (google::protobuf::EnumDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::EnumDescriptor::GetSourceLocation, "C++: google::protobuf::EnumDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));

		{ // google::protobuf::EnumDescriptor::ReservedRange file:google/protobuf/descriptor.h line:1068
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::EnumDescriptor::ReservedRange, std::shared_ptr<google::protobuf::EnumDescriptor::ReservedRange>> cl(enclosing_class, "ReservedRange", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::EnumDescriptor::ReservedRange(); } ) );
			cl.def_readwrite("start", &google::protobuf::EnumDescriptor::ReservedRange::start);
			cl.def_readwrite("end", &google::protobuf::EnumDescriptor::ReservedRange::end);
		}

	}
	std::cout << "B128_[google::protobuf::EnumValueDescriptor] ";
	{ // google::protobuf::EnumValueDescriptor file:google/protobuf/descriptor.h line:1169
		pybind11::class_<google::protobuf::EnumValueDescriptor, std::shared_ptr<google::protobuf::EnumValueDescriptor>> cl(M("google::protobuf"), "EnumValueDescriptor", "");
		cl.def("index", (int (google::protobuf::EnumValueDescriptor::*)() const) &google::protobuf::EnumValueDescriptor::index, "C++: google::protobuf::EnumValueDescriptor::index() const --> int");
		cl.def("number", (int (google::protobuf::EnumValueDescriptor::*)() const) &google::protobuf::EnumValueDescriptor::number, "C++: google::protobuf::EnumValueDescriptor::number() const --> int");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::EnumValueDescriptor::*)() const) &google::protobuf::EnumValueDescriptor::file, "C++: google::protobuf::EnumValueDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("type", (const class google::protobuf::EnumDescriptor * (google::protobuf::EnumValueDescriptor::*)() const) &google::protobuf::EnumValueDescriptor::type, "C++: google::protobuf::EnumValueDescriptor::type() const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference);
		cl.def("options", (const class google::protobuf::EnumValueOptions & (google::protobuf::EnumValueDescriptor::*)() const) &google::protobuf::EnumValueDescriptor::options, "C++: google::protobuf::EnumValueDescriptor::options() const --> const class google::protobuf::EnumValueOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::EnumValueDescriptor::*)(class google::protobuf::EnumValueDescriptorProto *) const) &google::protobuf::EnumValueDescriptor::CopyTo, "C++: google::protobuf::EnumValueDescriptor::CopyTo(class google::protobuf::EnumValueDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("GetSourceLocation", (bool (google::protobuf::EnumValueDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::EnumValueDescriptor::GetSourceLocation, "C++: google::protobuf::EnumValueDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
	std::cout << "B129_[google::protobuf::ServiceDescriptor] ";
	{ // google::protobuf::ServiceDescriptor file:google/protobuf/descriptor.h line:1247
		pybind11::class_<google::protobuf::ServiceDescriptor, std::shared_ptr<google::protobuf::ServiceDescriptor>> cl(M("google::protobuf"), "ServiceDescriptor", "");
		cl.def("index", (int (google::protobuf::ServiceDescriptor::*)() const) &google::protobuf::ServiceDescriptor::index, "C++: google::protobuf::ServiceDescriptor::index() const --> int");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::ServiceDescriptor::*)() const) &google::protobuf::ServiceDescriptor::file, "C++: google::protobuf::ServiceDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("options", (const class google::protobuf::ServiceOptions & (google::protobuf::ServiceDescriptor::*)() const) &google::protobuf::ServiceDescriptor::options, "C++: google::protobuf::ServiceDescriptor::options() const --> const class google::protobuf::ServiceOptions &", pybind11::return_value_policy::automatic);
		cl.def("method_count", (int (google::protobuf::ServiceDescriptor::*)() const) &google::protobuf::ServiceDescriptor::method_count, "C++: google::protobuf::ServiceDescriptor::method_count() const --> int");
		cl.def("method", (const class google::protobuf::MethodDescriptor * (google::protobuf::ServiceDescriptor::*)(int) const) &google::protobuf::ServiceDescriptor::method, "C++: google::protobuf::ServiceDescriptor::method(int) const --> const class google::protobuf::MethodDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("FindMethodByName", (const class google::protobuf::MethodDescriptor * (google::protobuf::ServiceDescriptor::*)(const std::string &) const) &google::protobuf::ServiceDescriptor::FindMethodByName, "C++: google::protobuf::ServiceDescriptor::FindMethodByName(const std::string &) const --> const class google::protobuf::MethodDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("CopyTo", (void (google::protobuf::ServiceDescriptor::*)(class google::protobuf::ServiceDescriptorProto *) const) &google::protobuf::ServiceDescriptor::CopyTo, "C++: google::protobuf::ServiceDescriptor::CopyTo(class google::protobuf::ServiceDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("GetSourceLocation", (bool (google::protobuf::ServiceDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::ServiceDescriptor::GetSourceLocation, "C++: google::protobuf::ServiceDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
	std::cout << "B130_[google::protobuf::MethodDescriptor] ";
	{ // google::protobuf::MethodDescriptor file:google/protobuf/descriptor.h line:1329
		pybind11::class_<google::protobuf::MethodDescriptor, std::shared_ptr<google::protobuf::MethodDescriptor>> cl(M("google::protobuf"), "MethodDescriptor", "");
		cl.def("index", (int (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::index, "C++: google::protobuf::MethodDescriptor::index() const --> int");
		cl.def("file", (const class google::protobuf::FileDescriptor * (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::file, "C++: google::protobuf::MethodDescriptor::file() const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference);
		cl.def("service", (const class google::protobuf::ServiceDescriptor * (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::service, "C++: google::protobuf::MethodDescriptor::service() const --> const class google::protobuf::ServiceDescriptor *", pybind11::return_value_policy::reference);
		cl.def("input_type", (const class google::protobuf::Descriptor * (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::input_type, "C++: google::protobuf::MethodDescriptor::input_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("output_type", (const class google::protobuf::Descriptor * (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::output_type, "C++: google::protobuf::MethodDescriptor::output_type() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("client_streaming", (bool (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::client_streaming, "C++: google::protobuf::MethodDescriptor::client_streaming() const --> bool");
		cl.def("server_streaming", (bool (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::server_streaming, "C++: google::protobuf::MethodDescriptor::server_streaming() const --> bool");
		cl.def("options", (const class google::protobuf::MethodOptions & (google::protobuf::MethodDescriptor::*)() const) &google::protobuf::MethodDescriptor::options, "C++: google::protobuf::MethodDescriptor::options() const --> const class google::protobuf::MethodOptions &", pybind11::return_value_policy::automatic);
		cl.def("CopyTo", (void (google::protobuf::MethodDescriptor::*)(class google::protobuf::MethodDescriptorProto *) const) &google::protobuf::MethodDescriptor::CopyTo, "C++: google::protobuf::MethodDescriptor::CopyTo(class google::protobuf::MethodDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("GetSourceLocation", (bool (google::protobuf::MethodDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::MethodDescriptor::GetSourceLocation, "C++: google::protobuf::MethodDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
	std::cout << "B131_[google::protobuf::FileDescriptor] ";
	{ // google::protobuf::FileDescriptor file:google/protobuf/descriptor.h line:1415
		pybind11::class_<google::protobuf::FileDescriptor, std::shared_ptr<google::protobuf::FileDescriptor>> cl(M("google::protobuf"), "FileDescriptor", "");

		pybind11::enum_<google::protobuf::FileDescriptor::Syntax>(cl, "Syntax", pybind11::arithmetic(), "")
			.value("SYNTAX_UNKNOWN", google::protobuf::FileDescriptor::SYNTAX_UNKNOWN)
			.value("SYNTAX_PROTO2", google::protobuf::FileDescriptor::SYNTAX_PROTO2)
			.value("SYNTAX_PROTO3", google::protobuf::FileDescriptor::SYNTAX_PROTO3)
			.export_values();

		cl.def("pool", (const class google::protobuf::DescriptorPool * (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::pool, "C++: google::protobuf::FileDescriptor::pool() const --> const class google::protobuf::DescriptorPool *", pybind11::return_value_policy::reference);
		cl.def("dependency_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::dependency_count, "C++: google::protobuf::FileDescriptor::dependency_count() const --> int");
		cl.def("dependency", (const class google::protobuf::FileDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::dependency, "C++: google::protobuf::FileDescriptor::dependency(int) const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("public_dependency_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::public_dependency_count, "C++: google::protobuf::FileDescriptor::public_dependency_count() const --> int");
		cl.def("public_dependency", (const class google::protobuf::FileDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::public_dependency, "C++: google::protobuf::FileDescriptor::public_dependency(int) const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("weak_dependency_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::weak_dependency_count, "C++: google::protobuf::FileDescriptor::weak_dependency_count() const --> int");
		cl.def("weak_dependency", (const class google::protobuf::FileDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::weak_dependency, "C++: google::protobuf::FileDescriptor::weak_dependency(int) const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("message_type_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::message_type_count, "C++: google::protobuf::FileDescriptor::message_type_count() const --> int");
		cl.def("message_type", (const class google::protobuf::Descriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::message_type, "C++: google::protobuf::FileDescriptor::message_type(int) const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("enum_type_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::enum_type_count, "C++: google::protobuf::FileDescriptor::enum_type_count() const --> int");
		cl.def("enum_type", (const class google::protobuf::EnumDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::enum_type, "C++: google::protobuf::FileDescriptor::enum_type(int) const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("service_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::service_count, "C++: google::protobuf::FileDescriptor::service_count() const --> int");
		cl.def("service", (const class google::protobuf::ServiceDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::service, "C++: google::protobuf::FileDescriptor::service(int) const --> const class google::protobuf::ServiceDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("extension_count", (int (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::extension_count, "C++: google::protobuf::FileDescriptor::extension_count() const --> int");
		cl.def("extension", (const class google::protobuf::FieldDescriptor * (google::protobuf::FileDescriptor::*)(int) const) &google::protobuf::FileDescriptor::extension, "C++: google::protobuf::FileDescriptor::extension(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("options", (const class google::protobuf::FileOptions & (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::options, "C++: google::protobuf::FileDescriptor::options() const --> const class google::protobuf::FileOptions &", pybind11::return_value_policy::automatic);
		cl.def("syntax", (enum google::protobuf::FileDescriptor::Syntax (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::syntax, "C++: google::protobuf::FileDescriptor::syntax() const --> enum google::protobuf::FileDescriptor::Syntax");
		cl.def_static("SyntaxName", (const char * (*)(enum google::protobuf::FileDescriptor::Syntax)) &google::protobuf::FileDescriptor::SyntaxName, "C++: google::protobuf::FileDescriptor::SyntaxName(enum google::protobuf::FileDescriptor::Syntax) --> const char *", pybind11::return_value_policy::automatic, pybind11::arg("syntax"));
		cl.def("FindMessageTypeByName", (const class google::protobuf::Descriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindMessageTypeByName, "C++: google::protobuf::FileDescriptor::FindMessageTypeByName(const std::string &) const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindEnumTypeByName", (const class google::protobuf::EnumDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindEnumTypeByName, "C++: google::protobuf::FileDescriptor::FindEnumTypeByName(const std::string &) const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindEnumValueByName", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindEnumValueByName, "C++: google::protobuf::FileDescriptor::FindEnumValueByName(const std::string &) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindServiceByName", (const class google::protobuf::ServiceDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindServiceByName, "C++: google::protobuf::FileDescriptor::FindServiceByName(const std::string &) const --> const class google::protobuf::ServiceDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByName", (const class google::protobuf::FieldDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindExtensionByName, "C++: google::protobuf::FileDescriptor::FindExtensionByName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByLowercaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindExtensionByLowercaseName, "C++: google::protobuf::FileDescriptor::FindExtensionByLowercaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByCamelcaseName", (const class google::protobuf::FieldDescriptor * (google::protobuf::FileDescriptor::*)(const std::string &) const) &google::protobuf::FileDescriptor::FindExtensionByCamelcaseName, "C++: google::protobuf::FileDescriptor::FindExtensionByCamelcaseName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("CopyTo", (void (google::protobuf::FileDescriptor::*)(class google::protobuf::FileDescriptorProto *) const) &google::protobuf::FileDescriptor::CopyTo, "C++: google::protobuf::FileDescriptor::CopyTo(class google::protobuf::FileDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("CopySourceCodeInfoTo", (void (google::protobuf::FileDescriptor::*)(class google::protobuf::FileDescriptorProto *) const) &google::protobuf::FileDescriptor::CopySourceCodeInfoTo, "C++: google::protobuf::FileDescriptor::CopySourceCodeInfoTo(class google::protobuf::FileDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("CopyJsonNameTo", (void (google::protobuf::FileDescriptor::*)(class google::protobuf::FileDescriptorProto *) const) &google::protobuf::FileDescriptor::CopyJsonNameTo, "C++: google::protobuf::FileDescriptor::CopyJsonNameTo(class google::protobuf::FileDescriptorProto *) const --> void", pybind11::arg("proto"));
		cl.def("is_placeholder", (bool (google::protobuf::FileDescriptor::*)() const) &google::protobuf::FileDescriptor::is_placeholder, "C++: google::protobuf::FileDescriptor::is_placeholder() const --> bool");
		cl.def("GetSourceLocation", (bool (google::protobuf::FileDescriptor::*)(struct google::protobuf::SourceLocation *) const) &google::protobuf::FileDescriptor::GetSourceLocation, "C++: google::protobuf::FileDescriptor::GetSourceLocation(struct google::protobuf::SourceLocation *) const --> bool", pybind11::arg("out_location"));
	}
}


// File: google/protobuf/descriptor_4.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool::ErrorCollector
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::MethodDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_4(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B132_[google::protobuf::DescriptorPool] ";
	{ // google::protobuf::DescriptorPool file:google/protobuf/descriptor.h line:1635
		pybind11::class_<google::protobuf::DescriptorPool, std::shared_ptr<google::protobuf::DescriptorPool>> cl(M("google::protobuf"), "DescriptorPool", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::DescriptorPool(); } ) );
		cl.def( pybind11::init<const class google::protobuf::DescriptorPool *>(), pybind11::arg("underlay") );

		cl.def_static("generated_pool", (const class google::protobuf::DescriptorPool * (*)()) &google::protobuf::DescriptorPool::generated_pool, "C++: google::protobuf::DescriptorPool::generated_pool() --> const class google::protobuf::DescriptorPool *", pybind11::return_value_policy::automatic);
		cl.def("FindFileByName", (const class google::protobuf::FileDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindFileByName, "C++: google::protobuf::DescriptorPool::FindFileByName(const std::string &) const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindFileContainingSymbol", (const class google::protobuf::FileDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindFileContainingSymbol, "C++: google::protobuf::DescriptorPool::FindFileContainingSymbol(const std::string &) const --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("symbol_name"));
		cl.def("FindMessageTypeByName", (const class google::protobuf::Descriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindMessageTypeByName, "C++: google::protobuf::DescriptorPool::FindMessageTypeByName(const std::string &) const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindFieldByName", (const class google::protobuf::FieldDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindFieldByName, "C++: google::protobuf::DescriptorPool::FindFieldByName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByName", (const class google::protobuf::FieldDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindExtensionByName, "C++: google::protobuf::DescriptorPool::FindExtensionByName(const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindOneofByName", (const class google::protobuf::OneofDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindOneofByName, "C++: google::protobuf::DescriptorPool::FindOneofByName(const std::string &) const --> const class google::protobuf::OneofDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindEnumTypeByName", (const class google::protobuf::EnumDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindEnumTypeByName, "C++: google::protobuf::DescriptorPool::FindEnumTypeByName(const std::string &) const --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindEnumValueByName", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindEnumValueByName, "C++: google::protobuf::DescriptorPool::FindEnumValueByName(const std::string &) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindServiceByName", (const class google::protobuf::ServiceDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindServiceByName, "C++: google::protobuf::DescriptorPool::FindServiceByName(const std::string &) const --> const class google::protobuf::ServiceDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindMethodByName", (const class google::protobuf::MethodDescriptor * (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::FindMethodByName, "C++: google::protobuf::DescriptorPool::FindMethodByName(const std::string &) const --> const class google::protobuf::MethodDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("name"));
		cl.def("FindExtensionByNumber", (const class google::protobuf::FieldDescriptor * (google::protobuf::DescriptorPool::*)(const class google::protobuf::Descriptor *, int) const) &google::protobuf::DescriptorPool::FindExtensionByNumber, "C++: google::protobuf::DescriptorPool::FindExtensionByNumber(const class google::protobuf::Descriptor *, int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("extendee"), pybind11::arg("number"));
		cl.def("FindExtensionByPrintableName", (const class google::protobuf::FieldDescriptor * (google::protobuf::DescriptorPool::*)(const class google::protobuf::Descriptor *, const std::string &) const) &google::protobuf::DescriptorPool::FindExtensionByPrintableName, "C++: google::protobuf::DescriptorPool::FindExtensionByPrintableName(const class google::protobuf::Descriptor *, const std::string &) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("extendee"), pybind11::arg("printable_name"));
		cl.def("BuildFile", (const class google::protobuf::FileDescriptor * (google::protobuf::DescriptorPool::*)(const class google::protobuf::FileDescriptorProto &)) &google::protobuf::DescriptorPool::BuildFile, "C++: google::protobuf::DescriptorPool::BuildFile(const class google::protobuf::FileDescriptorProto &) --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("proto"));
		cl.def("BuildFileCollectingErrors", (const class google::protobuf::FileDescriptor * (google::protobuf::DescriptorPool::*)(const class google::protobuf::FileDescriptorProto &, class google::protobuf::DescriptorPool::ErrorCollector *)) &google::protobuf::DescriptorPool::BuildFileCollectingErrors, "C++: google::protobuf::DescriptorPool::BuildFileCollectingErrors(const class google::protobuf::FileDescriptorProto &, class google::protobuf::DescriptorPool::ErrorCollector *) --> const class google::protobuf::FileDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("proto"), pybind11::arg("error_collector"));
		cl.def("AllowUnknownDependencies", (void (google::protobuf::DescriptorPool::*)()) &google::protobuf::DescriptorPool::AllowUnknownDependencies, "C++: google::protobuf::DescriptorPool::AllowUnknownDependencies() --> void");
		cl.def("EnforceWeakDependencies", (void (google::protobuf::DescriptorPool::*)(bool)) &google::protobuf::DescriptorPool::EnforceWeakDependencies, "C++: google::protobuf::DescriptorPool::EnforceWeakDependencies(bool) --> void", pybind11::arg("enforce"));
		cl.def_static("InternalAddGeneratedFile", (void (*)(const void *, int)) &google::protobuf::DescriptorPool::InternalAddGeneratedFile, "C++: google::protobuf::DescriptorPool::InternalAddGeneratedFile(const void *, int) --> void", pybind11::arg("encoded_file_descriptor"), pybind11::arg("size"));
		cl.def("DisallowEnforceUtf8", (void (google::protobuf::DescriptorPool::*)()) &google::protobuf::DescriptorPool::DisallowEnforceUtf8, "C++: google::protobuf::DescriptorPool::DisallowEnforceUtf8() --> void");
		cl.def_static("internal_generated_pool", (class google::protobuf::DescriptorPool * (*)()) &google::protobuf::DescriptorPool::internal_generated_pool, "C++: google::protobuf::DescriptorPool::internal_generated_pool() --> class google::protobuf::DescriptorPool *", pybind11::return_value_policy::automatic);
		cl.def("InternalDontEnforceDependencies", (void (google::protobuf::DescriptorPool::*)()) &google::protobuf::DescriptorPool::InternalDontEnforceDependencies, "C++: google::protobuf::DescriptorPool::InternalDontEnforceDependencies() --> void");
		cl.def("InternalSetLazilyBuildDependencies", (void (google::protobuf::DescriptorPool::*)()) &google::protobuf::DescriptorPool::InternalSetLazilyBuildDependencies, "C++: google::protobuf::DescriptorPool::InternalSetLazilyBuildDependencies() --> void");
		cl.def("internal_set_underlay", (void (google::protobuf::DescriptorPool::*)(const class google::protobuf::DescriptorPool *)) &google::protobuf::DescriptorPool::internal_set_underlay, "C++: google::protobuf::DescriptorPool::internal_set_underlay(const class google::protobuf::DescriptorPool *) --> void", pybind11::arg("underlay"));
		cl.def("InternalIsFileLoaded", (bool (google::protobuf::DescriptorPool::*)(const std::string &) const) &google::protobuf::DescriptorPool::InternalIsFileLoaded, "C++: google::protobuf::DescriptorPool::InternalIsFileLoaded(const std::string &) const --> bool", pybind11::arg("filename"));
		cl.def("AddUnusedImportTrackFile", [](google::protobuf::DescriptorPool &o, const class std::__cxx11::basic_string<char> & a0) -> void { return o.AddUnusedImportTrackFile(a0); }, "", pybind11::arg("file_name"));
		cl.def("AddUnusedImportTrackFile", (void (google::protobuf::DescriptorPool::*)(const std::string &, bool)) &google::protobuf::DescriptorPool::AddUnusedImportTrackFile, "C++: google::protobuf::DescriptorPool::AddUnusedImportTrackFile(const std::string &, bool) --> void", pybind11::arg("file_name"), pybind11::arg("is_error"));
		cl.def("ClearUnusedImportTrackFiles", (void (google::protobuf::DescriptorPool::*)()) &google::protobuf::DescriptorPool::ClearUnusedImportTrackFiles, "C++: google::protobuf::DescriptorPool::ClearUnusedImportTrackFiles() --> void");

		{ // google::protobuf::DescriptorPool::ErrorCollector file:google/protobuf/descriptor.h line:1726
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::DescriptorPool::ErrorCollector, std::shared_ptr<google::protobuf::DescriptorPool::ErrorCollector>> cl(enclosing_class, "ErrorCollector", "");

			pybind11::enum_<google::protobuf::DescriptorPool::ErrorCollector::ErrorLocation>(cl, "ErrorLocation", pybind11::arithmetic(), "")
				.value("NAME", google::protobuf::DescriptorPool::ErrorCollector::NAME)
				.value("NUMBER", google::protobuf::DescriptorPool::ErrorCollector::NUMBER)
				.value("TYPE", google::protobuf::DescriptorPool::ErrorCollector::TYPE)
				.value("EXTENDEE", google::protobuf::DescriptorPool::ErrorCollector::EXTENDEE)
				.value("DEFAULT_VALUE", google::protobuf::DescriptorPool::ErrorCollector::DEFAULT_VALUE)
				.value("INPUT_TYPE", google::protobuf::DescriptorPool::ErrorCollector::INPUT_TYPE)
				.value("OUTPUT_TYPE", google::protobuf::DescriptorPool::ErrorCollector::OUTPUT_TYPE)
				.value("OPTION_NAME", google::protobuf::DescriptorPool::ErrorCollector::OPTION_NAME)
				.value("OPTION_VALUE", google::protobuf::DescriptorPool::ErrorCollector::OPTION_VALUE)
				.value("IMPORT", google::protobuf::DescriptorPool::ErrorCollector::IMPORT)
				.value("OTHER", google::protobuf::DescriptorPool::ErrorCollector::OTHER)
				.export_values();

		}

	}
}


// File: google/protobuf/unknown_field_set.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/unknown_field_set.h> // 
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <utility> // std::pair

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_unknown_field_set(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B133_[google::protobuf::UnknownFieldSet] ";
	{ // google::protobuf::UnknownFieldSet file:google/protobuf/unknown_field_set.h line:84
		pybind11::class_<google::protobuf::UnknownFieldSet, std::shared_ptr<google::protobuf::UnknownFieldSet>> cl(M("google::protobuf"), "UnknownFieldSet", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::UnknownFieldSet(); } ) );
		cl.def("Clear", (void (google::protobuf::UnknownFieldSet::*)()) &google::protobuf::UnknownFieldSet::Clear, "C++: google::protobuf::UnknownFieldSet::Clear() --> void");
		cl.def("ClearAndFreeMemory", (void (google::protobuf::UnknownFieldSet::*)()) &google::protobuf::UnknownFieldSet::ClearAndFreeMemory, "C++: google::protobuf::UnknownFieldSet::ClearAndFreeMemory() --> void");
		cl.def("empty", (bool (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::empty, "C++: google::protobuf::UnknownFieldSet::empty() const --> bool");
		cl.def("MergeFrom", (void (google::protobuf::UnknownFieldSet::*)(const class google::protobuf::UnknownFieldSet &)) &google::protobuf::UnknownFieldSet::MergeFrom, "C++: google::protobuf::UnknownFieldSet::MergeFrom(const class google::protobuf::UnknownFieldSet &) --> void", pybind11::arg("other"));
		cl.def("MergeFromAndDestroy", (void (google::protobuf::UnknownFieldSet::*)(class google::protobuf::UnknownFieldSet *)) &google::protobuf::UnknownFieldSet::MergeFromAndDestroy, "C++: google::protobuf::UnknownFieldSet::MergeFromAndDestroy(class google::protobuf::UnknownFieldSet *) --> void", pybind11::arg("other"));
		cl.def_static("MergeToInternalMetadata", (void (*)(const class google::protobuf::UnknownFieldSet &, class google::protobuf::internal::InternalMetadata *)) &google::protobuf::UnknownFieldSet::MergeToInternalMetadata, "C++: google::protobuf::UnknownFieldSet::MergeToInternalMetadata(const class google::protobuf::UnknownFieldSet &, class google::protobuf::internal::InternalMetadata *) --> void", pybind11::arg("other"), pybind11::arg("metadata"));
		cl.def("Swap", (void (google::protobuf::UnknownFieldSet::*)(class google::protobuf::UnknownFieldSet *)) &google::protobuf::UnknownFieldSet::Swap, "C++: google::protobuf::UnknownFieldSet::Swap(class google::protobuf::UnknownFieldSet *) --> void", pybind11::arg("x"));
		cl.def("SpaceUsedExcludingSelfLong", (unsigned long (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong, "C++: google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong() const --> unsigned long");
		cl.def("SpaceUsedExcludingSelf", (int (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf, "C++: google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf() const --> int");
		cl.def("SpaceUsedLong", (unsigned long (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::SpaceUsedLong, "C++: google::protobuf::UnknownFieldSet::SpaceUsedLong() const --> unsigned long");
		cl.def("SpaceUsed", (int (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::SpaceUsed, "C++: google::protobuf::UnknownFieldSet::SpaceUsed() const --> int");
		cl.def("field_count", (int (google::protobuf::UnknownFieldSet::*)() const) &google::protobuf::UnknownFieldSet::field_count, "C++: google::protobuf::UnknownFieldSet::field_count() const --> int");
		cl.def("field", (const class google::protobuf::UnknownField & (google::protobuf::UnknownFieldSet::*)(int) const) &google::protobuf::UnknownFieldSet::field, "C++: google::protobuf::UnknownFieldSet::field(int) const --> const class google::protobuf::UnknownField &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("mutable_field", (class google::protobuf::UnknownField * (google::protobuf::UnknownFieldSet::*)(int)) &google::protobuf::UnknownFieldSet::mutable_field, "C++: google::protobuf::UnknownFieldSet::mutable_field(int) --> class google::protobuf::UnknownField *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("AddVarint", (void (google::protobuf::UnknownFieldSet::*)(int, unsigned long)) &google::protobuf::UnknownFieldSet::AddVarint, "C++: google::protobuf::UnknownFieldSet::AddVarint(int, unsigned long) --> void", pybind11::arg("number"), pybind11::arg("value"));
		cl.def("AddFixed32", (void (google::protobuf::UnknownFieldSet::*)(int, unsigned int)) &google::protobuf::UnknownFieldSet::AddFixed32, "C++: google::protobuf::UnknownFieldSet::AddFixed32(int, unsigned int) --> void", pybind11::arg("number"), pybind11::arg("value"));
		cl.def("AddFixed64", (void (google::protobuf::UnknownFieldSet::*)(int, unsigned long)) &google::protobuf::UnknownFieldSet::AddFixed64, "C++: google::protobuf::UnknownFieldSet::AddFixed64(int, unsigned long) --> void", pybind11::arg("number"), pybind11::arg("value"));
		cl.def("AddGroup", (class google::protobuf::UnknownFieldSet * (google::protobuf::UnknownFieldSet::*)(int)) &google::protobuf::UnknownFieldSet::AddGroup, "C++: google::protobuf::UnknownFieldSet::AddGroup(int) --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("AddField", (void (google::protobuf::UnknownFieldSet::*)(const class google::protobuf::UnknownField &)) &google::protobuf::UnknownFieldSet::AddField, "C++: google::protobuf::UnknownFieldSet::AddField(const class google::protobuf::UnknownField &) --> void", pybind11::arg("field"));
		cl.def("DeleteSubrange", (void (google::protobuf::UnknownFieldSet::*)(int, int)) &google::protobuf::UnknownFieldSet::DeleteSubrange, "C++: google::protobuf::UnknownFieldSet::DeleteSubrange(int, int) --> void", pybind11::arg("start"), pybind11::arg("num"));
		cl.def("DeleteByNumber", (void (google::protobuf::UnknownFieldSet::*)(int)) &google::protobuf::UnknownFieldSet::DeleteByNumber, "C++: google::protobuf::UnknownFieldSet::DeleteByNumber(int) --> void", pybind11::arg("number"));
		cl.def("MergeFromCodedStream", (bool (google::protobuf::UnknownFieldSet::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::UnknownFieldSet::MergeFromCodedStream, "C++: google::protobuf::UnknownFieldSet::MergeFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParseFromCodedStream", (bool (google::protobuf::UnknownFieldSet::*)(class google::protobuf::io::CodedInputStream *)) &google::protobuf::UnknownFieldSet::ParseFromCodedStream, "C++: google::protobuf::UnknownFieldSet::ParseFromCodedStream(class google::protobuf::io::CodedInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParseFromZeroCopyStream", (bool (google::protobuf::UnknownFieldSet::*)(class google::protobuf::io::ZeroCopyInputStream *)) &google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream, "C++: google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(class google::protobuf::io::ZeroCopyInputStream *) --> bool", pybind11::arg("input"));
		cl.def("ParseFromArray", (bool (google::protobuf::UnknownFieldSet::*)(const void *, int)) &google::protobuf::UnknownFieldSet::ParseFromArray, "C++: google::protobuf::UnknownFieldSet::ParseFromArray(const void *, int) --> bool", pybind11::arg("data"), pybind11::arg("size"));
		cl.def_static("default_instance", (const class google::protobuf::UnknownFieldSet & (*)()) &google::protobuf::UnknownFieldSet::default_instance, "C++: google::protobuf::UnknownFieldSet::default_instance() --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
	}
}


// File: google/protobuf/unknown_field_set_1.cpp
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/unknown_field_set.h> // 
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField::LengthDelimited
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_unknown_field_set_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B134_[google::protobuf::UnknownField] ";
	{ // google::protobuf::UnknownField file:google/protobuf/unknown_field_set.h line:230
		pybind11::class_<google::protobuf::UnknownField, std::shared_ptr<google::protobuf::UnknownField>> cl(M("google::protobuf"), "UnknownField", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::UnknownField(); } ) );
		cl.def( pybind11::init( [](google::protobuf::UnknownField const &o){ return new google::protobuf::UnknownField(o); } ) );

		pybind11::enum_<google::protobuf::UnknownField::Type>(cl, "Type", pybind11::arithmetic(), "")
			.value("TYPE_VARINT", google::protobuf::UnknownField::TYPE_VARINT)
			.value("TYPE_FIXED32", google::protobuf::UnknownField::TYPE_FIXED32)
			.value("TYPE_FIXED64", google::protobuf::UnknownField::TYPE_FIXED64)
			.value("TYPE_LENGTH_DELIMITED", google::protobuf::UnknownField::TYPE_LENGTH_DELIMITED)
			.value("TYPE_GROUP", google::protobuf::UnknownField::TYPE_GROUP)
			.export_values();

		cl.def_readwrite("number_", &google::protobuf::UnknownField::number_);
		cl.def_readwrite("type_", &google::protobuf::UnknownField::type_);
		cl.def("number", (int (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::number, "C++: google::protobuf::UnknownField::number() const --> int");
		cl.def("type", (enum google::protobuf::UnknownField::Type (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::type, "C++: google::protobuf::UnknownField::type() const --> enum google::protobuf::UnknownField::Type");
		cl.def("varint", (unsigned long (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::varint, "C++: google::protobuf::UnknownField::varint() const --> unsigned long");
		cl.def("fixed32", (unsigned int (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::fixed32, "C++: google::protobuf::UnknownField::fixed32() const --> unsigned int");
		cl.def("fixed64", (unsigned long (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::fixed64, "C++: google::protobuf::UnknownField::fixed64() const --> unsigned long");
		cl.def("group", (const class google::protobuf::UnknownFieldSet & (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::group, "C++: google::protobuf::UnknownField::group() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("set_varint", (void (google::protobuf::UnknownField::*)(unsigned long)) &google::protobuf::UnknownField::set_varint, "C++: google::protobuf::UnknownField::set_varint(unsigned long) --> void", pybind11::arg("value"));
		cl.def("set_fixed32", (void (google::protobuf::UnknownField::*)(unsigned int)) &google::protobuf::UnknownField::set_fixed32, "C++: google::protobuf::UnknownField::set_fixed32(unsigned int) --> void", pybind11::arg("value"));
		cl.def("set_fixed64", (void (google::protobuf::UnknownField::*)(unsigned long)) &google::protobuf::UnknownField::set_fixed64, "C++: google::protobuf::UnknownField::set_fixed64(unsigned long) --> void", pybind11::arg("value"));
		cl.def("mutable_group", (class google::protobuf::UnknownFieldSet * (google::protobuf::UnknownField::*)()) &google::protobuf::UnknownField::mutable_group, "C++: google::protobuf::UnknownField::mutable_group() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def("SerializeLengthDelimitedNoTag", (void (google::protobuf::UnknownField::*)(class google::protobuf::io::CodedOutputStream *) const) &google::protobuf::UnknownField::SerializeLengthDelimitedNoTag, "C++: google::protobuf::UnknownField::SerializeLengthDelimitedNoTag(class google::protobuf::io::CodedOutputStream *) const --> void", pybind11::arg("output"));
		cl.def("GetLengthDelimitedSize", (unsigned long (google::protobuf::UnknownField::*)() const) &google::protobuf::UnknownField::GetLengthDelimitedSize, "C++: google::protobuf::UnknownField::GetLengthDelimitedSize() const --> unsigned long");
		cl.def("InternalSerializeLengthDelimitedNoTag", (unsigned char * (google::protobuf::UnknownField::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag, "C++: google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("Delete", (void (google::protobuf::UnknownField::*)()) &google::protobuf::UnknownField::Delete, "C++: google::protobuf::UnknownField::Delete() --> void");
		cl.def("DeepCopy", (void (google::protobuf::UnknownField::*)(const class google::protobuf::UnknownField &)) &google::protobuf::UnknownField::DeepCopy, "C++: google::protobuf::UnknownField::DeepCopy(const class google::protobuf::UnknownField &) --> void", pybind11::arg("other"));
		cl.def("SetType", (void (google::protobuf::UnknownField::*)(enum google::protobuf::UnknownField::Type)) &google::protobuf::UnknownField::SetType, "C++: google::protobuf::UnknownField::SetType(enum google::protobuf::UnknownField::Type) --> void", pybind11::arg("type"));
		cl.def("assign", (class google::protobuf::UnknownField & (google::protobuf::UnknownField::*)(const class google::protobuf::UnknownField &)) &google::protobuf::UnknownField::operator=, "C++: google::protobuf::UnknownField::operator=(const class google::protobuf::UnknownField &) --> class google::protobuf::UnknownField &", pybind11::return_value_policy::automatic, pybind11::arg(""));

		{ // google::protobuf::UnknownField::LengthDelimited file:google/protobuf/unknown_field_set.h line:286
			auto & enclosing_class = cl;
			pybind11::class_<google::protobuf::UnknownField::LengthDelimited, std::shared_ptr<google::protobuf::UnknownField::LengthDelimited>> cl(enclosing_class, "LengthDelimited", "");
			cl.def( pybind11::init( [](){ return new google::protobuf::UnknownField::LengthDelimited(); } ) );
			cl.def( pybind11::init( [](google::protobuf::UnknownField::LengthDelimited const &o){ return new google::protobuf::UnknownField::LengthDelimited(o); } ) );
			cl.def("assign", (union google::protobuf::UnknownField::LengthDelimited & (google::protobuf::UnknownField::LengthDelimited::*)(const union google::protobuf::UnknownField::LengthDelimited &)) &google::protobuf::UnknownField::LengthDelimited::operator=, "C++: google::protobuf::UnknownField::LengthDelimited::operator=(const union google::protobuf::UnknownField::LengthDelimited &) --> union google::protobuf::UnknownField::LengthDelimited &", pybind11::return_value_policy::automatic, pybind11::arg(""));
		}

	}
}


// File: google/protobuf/generated_message_reflection.cpp
#include <google/protobuf/generated_message_reflection.h> // google::protobuf::internal::DescriptorTable
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_generated_message_reflection(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B135_[google::protobuf::internal::DescriptorTable] ";
	{ // google::protobuf::internal::DescriptorTable file:google/protobuf/generated_message_reflection.h line:259
		pybind11::class_<google::protobuf::internal::DescriptorTable, std::shared_ptr<google::protobuf::internal::DescriptorTable>> cl(M("google::protobuf::internal"), "DescriptorTable", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::internal::DescriptorTable(); } ) );
		cl.def( pybind11::init( [](google::protobuf::internal::DescriptorTable const &o){ return new google::protobuf::internal::DescriptorTable(o); } ) );
		cl.def_readwrite("is_initialized", &google::protobuf::internal::DescriptorTable::is_initialized);
		cl.def_readwrite("is_eager", &google::protobuf::internal::DescriptorTable::is_eager);
		cl.def_readwrite("size", &google::protobuf::internal::DescriptorTable::size);
		cl.def_readwrite("num_deps", &google::protobuf::internal::DescriptorTable::num_deps);
		cl.def_readwrite("num_messages", &google::protobuf::internal::DescriptorTable::num_messages);
		cl.def("assign", (struct google::protobuf::internal::DescriptorTable & (google::protobuf::internal::DescriptorTable::*)(const struct google::protobuf::internal::DescriptorTable &)) &google::protobuf::internal::DescriptorTable::operator=, "C++: google::protobuf::internal::DescriptorTable::operator=(const struct google::protobuf::internal::DescriptorTable &) --> struct google::protobuf::internal::DescriptorTable &", pybind11::return_value_policy::automatic, pybind11::arg(""));
	}
}


// File: google/protobuf/message.cpp
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <iostream> // --trace
#include <sstream> // __str__

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_message(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B136_[google::protobuf::Metadata] ";
	{ // google::protobuf::Metadata file:google/protobuf/message.h line:194
		pybind11::class_<google::protobuf::Metadata, std::shared_ptr<google::protobuf::Metadata>> cl(M("google::protobuf"), "Metadata", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::Metadata(); } ) );
		cl.def( pybind11::init( [](google::protobuf::Metadata const &o){ return new google::protobuf::Metadata(o); } ) );
	}
}


// File: google/protobuf/message_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/generated_message_reflection.h> // google::protobuf::internal::DescriptorTable
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <istream> // std::basic_istream
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <ostream> // std::basic_ostream
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_message_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B137_[google::protobuf::Message] ";
	{ // google::protobuf::Message file:google/protobuf/message.h line:232
		pybind11::class_<google::protobuf::Message, std::shared_ptr<google::protobuf::Message>, google::protobuf::MessageLite> cl(M("google::protobuf"), "Message", "");
		cl.def("New", (class google::protobuf::Message * (google::protobuf::Message::*)() const) &google::protobuf::Message::New, "C++: google::protobuf::Message::New() const --> class google::protobuf::Message *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::Message * (google::protobuf::Message::*)(class google::protobuf::Arena *) const) &google::protobuf::Message::New, "C++: google::protobuf::Message::New(class google::protobuf::Arena *) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::Message::*)(const class google::protobuf::Message &)) &google::protobuf::Message::CopyFrom, "C++: google::protobuf::Message::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::Message::*)(const class google::protobuf::Message &)) &google::protobuf::Message::MergeFrom, "C++: google::protobuf::Message::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CheckInitialized", (void (google::protobuf::Message::*)() const) &google::protobuf::Message::CheckInitialized, "C++: google::protobuf::Message::CheckInitialized() const --> void");
		cl.def("DiscardUnknownFields", (void (google::protobuf::Message::*)()) &google::protobuf::Message::DiscardUnknownFields, "C++: google::protobuf::Message::DiscardUnknownFields() --> void");
		cl.def("SpaceUsedLong", (unsigned long (google::protobuf::Message::*)() const) &google::protobuf::Message::SpaceUsedLong, "C++: google::protobuf::Message::SpaceUsedLong() const --> unsigned long");
		cl.def("SpaceUsed", (int (google::protobuf::Message::*)() const) &google::protobuf::Message::SpaceUsed, "C++: google::protobuf::Message::SpaceUsed() const --> int");
		cl.def("PrintDebugString", (void (google::protobuf::Message::*)() const) &google::protobuf::Message::PrintDebugString, "C++: google::protobuf::Message::PrintDebugString() const --> void");
		cl.def("Clear", (void (google::protobuf::Message::*)()) &google::protobuf::Message::Clear, "C++: google::protobuf::Message::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::Message::*)() const) &google::protobuf::Message::IsInitialized, "C++: google::protobuf::Message::IsInitialized() const --> bool");
		cl.def("CheckTypeAndMergeFrom", (void (google::protobuf::Message::*)(const class google::protobuf::MessageLite &)) &google::protobuf::Message::CheckTypeAndMergeFrom, "C++: google::protobuf::Message::CheckTypeAndMergeFrom(const class google::protobuf::MessageLite &) --> void", pybind11::arg("other"));
		cl.def("_InternalParse", (const char * (google::protobuf::Message::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::Message::_InternalParse, "C++: google::protobuf::Message::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::Message::*)() const) &google::protobuf::Message::ByteSizeLong, "C++: google::protobuf::Message::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::Message::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::Message::_InternalSerialize, "C++: google::protobuf::Message::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetDescriptor", (const class google::protobuf::Descriptor * (google::protobuf::Message::*)() const) &google::protobuf::Message::GetDescriptor, "C++: google::protobuf::Message::GetDescriptor() const --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::reference);
		cl.def("GetReflection", (const class google::protobuf::Reflection * (google::protobuf::Message::*)() const) &google::protobuf::Message::GetReflection, "C++: google::protobuf::Message::GetReflection() const --> const class google::protobuf::Reflection *", pybind11::return_value_policy::reference);
	}
	std::cout << "B138_[google::protobuf::Reflection] ";
	{ // google::protobuf::Reflection file:google/protobuf/message.h line:428
		pybind11::class_<google::protobuf::Reflection, std::shared_ptr<google::protobuf::Reflection>> cl(M("google::protobuf"), "Reflection", "");
		cl.def("GetUnknownFields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::Reflection::*)(const class google::protobuf::Message &) const) &google::protobuf::Reflection::GetUnknownFields, "C++: google::protobuf::Reflection::GetUnknownFields(const class google::protobuf::Message &) const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic, pybind11::arg("message"));
		cl.def("MutableUnknownFields", (class google::protobuf::UnknownFieldSet * (google::protobuf::Reflection::*)(class google::protobuf::Message *) const) &google::protobuf::Reflection::MutableUnknownFields, "C++: google::protobuf::Reflection::MutableUnknownFields(class google::protobuf::Message *) const --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference, pybind11::arg("message"));
		cl.def("SpaceUsedLong", (unsigned long (google::protobuf::Reflection::*)(const class google::protobuf::Message &) const) &google::protobuf::Reflection::SpaceUsedLong, "C++: google::protobuf::Reflection::SpaceUsedLong(const class google::protobuf::Message &) const --> unsigned long", pybind11::arg("message"));
		cl.def("SpaceUsed", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &) const) &google::protobuf::Reflection::SpaceUsed, "C++: google::protobuf::Reflection::SpaceUsed(const class google::protobuf::Message &) const --> int", pybind11::arg("message"));
		cl.def("HasField", (bool (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::HasField, "C++: google::protobuf::Reflection::HasField(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> bool", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("FieldSize", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::FieldSize, "C++: google::protobuf::Reflection::FieldSize(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> int", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("ClearField", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::ClearField, "C++: google::protobuf::Reflection::ClearField(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("HasOneof", (bool (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::OneofDescriptor *) const) &google::protobuf::Reflection::HasOneof, "C++: google::protobuf::Reflection::HasOneof(const class google::protobuf::Message &, const class google::protobuf::OneofDescriptor *) const --> bool", pybind11::arg("message"), pybind11::arg("oneof_descriptor"));
		cl.def("ClearOneof", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::OneofDescriptor *) const) &google::protobuf::Reflection::ClearOneof, "C++: google::protobuf::Reflection::ClearOneof(class google::protobuf::Message *, const class google::protobuf::OneofDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("oneof_descriptor"));
		cl.def("GetOneofFieldDescriptor", (const class google::protobuf::FieldDescriptor * (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::OneofDescriptor *) const) &google::protobuf::Reflection::GetOneofFieldDescriptor, "C++: google::protobuf::Reflection::GetOneofFieldDescriptor(const class google::protobuf::Message &, const class google::protobuf::OneofDescriptor *) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("oneof_descriptor"));
		cl.def("RemoveLast", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::RemoveLast, "C++: google::protobuf::Reflection::RemoveLast(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("ReleaseLast", (class google::protobuf::Message * (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::ReleaseLast, "C++: google::protobuf::Reflection::ReleaseLast(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("Swap", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, class google::protobuf::Message *) const) &google::protobuf::Reflection::Swap, "C++: google::protobuf::Reflection::Swap(class google::protobuf::Message *, class google::protobuf::Message *) const --> void", pybind11::arg("message1"), pybind11::arg("message2"));
		cl.def("SwapElements", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const) &google::protobuf::Reflection::SwapElements, "C++: google::protobuf::Reflection::SwapElements(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index1"), pybind11::arg("index2"));
		cl.def("GetInt32", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetInt32, "C++: google::protobuf::Reflection::GetInt32(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> int", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetInt64", (long (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetInt64, "C++: google::protobuf::Reflection::GetInt64(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> long", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetUInt32", (unsigned int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetUInt32, "C++: google::protobuf::Reflection::GetUInt32(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> unsigned int", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetUInt64", (unsigned long (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetUInt64, "C++: google::protobuf::Reflection::GetUInt64(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> unsigned long", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetFloat", (float (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetFloat, "C++: google::protobuf::Reflection::GetFloat(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> float", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetDouble", (double (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetDouble, "C++: google::protobuf::Reflection::GetDouble(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> double", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetBool", (bool (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetBool, "C++: google::protobuf::Reflection::GetBool(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> bool", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetEnum", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetEnum, "C++: google::protobuf::Reflection::GetEnum(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetEnumValue", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::GetEnumValue, "C++: google::protobuf::Reflection::GetEnumValue(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *) const --> int", pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetMessage", [](google::protobuf::Reflection const &o, const class google::protobuf::Message & a0, const class google::protobuf::FieldDescriptor * a1) -> const google::protobuf::Message & { return o.GetMessage(a0, a1); }, "", pybind11::return_value_policy::automatic, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("GetMessage", (const class google::protobuf::Message & (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const) &google::protobuf::Reflection::GetMessage, "C++: google::protobuf::Reflection::GetMessage(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const --> const class google::protobuf::Message &", pybind11::return_value_policy::automatic, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("factory"));
		cl.def("SetInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::SetInt32, "C++: google::protobuf::Reflection::SetInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, long) const) &google::protobuf::Reflection::SetInt64, "C++: google::protobuf::Reflection::SetInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetUInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned int) const) &google::protobuf::Reflection::SetUInt32, "C++: google::protobuf::Reflection::SetUInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetUInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned long) const) &google::protobuf::Reflection::SetUInt64, "C++: google::protobuf::Reflection::SetUInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetFloat", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, float) const) &google::protobuf::Reflection::SetFloat, "C++: google::protobuf::Reflection::SetFloat(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, float) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetDouble", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, double) const) &google::protobuf::Reflection::SetDouble, "C++: google::protobuf::Reflection::SetDouble(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, double) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetBool", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, bool) const) &google::protobuf::Reflection::SetBool, "C++: google::protobuf::Reflection::SetBool(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, bool) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetEnum", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, const class google::protobuf::EnumValueDescriptor *) const) &google::protobuf::Reflection::SetEnum, "C++: google::protobuf::Reflection::SetEnum(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, const class google::protobuf::EnumValueDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("SetEnumValue", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::SetEnumValue, "C++: google::protobuf::Reflection::SetEnumValue(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("MutableMessage", [](google::protobuf::Reflection const &o, class google::protobuf::Message * a0, const class google::protobuf::FieldDescriptor * a1) -> google::protobuf::Message * { return o.MutableMessage(a0, a1); }, "", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("MutableMessage", (class google::protobuf::Message * (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const) &google::protobuf::Reflection::MutableMessage, "C++: google::protobuf::Reflection::MutableMessage(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("factory"));
		cl.def("SetAllocatedMessage", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const) &google::protobuf::Reflection::SetAllocatedMessage, "C++: google::protobuf::Reflection::SetAllocatedMessage(class google::protobuf::Message *, class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("sub_message"), pybind11::arg("field"));
		cl.def("ReleaseMessage", [](google::protobuf::Reflection const &o, class google::protobuf::Message * a0, const class google::protobuf::FieldDescriptor * a1) -> google::protobuf::Message * { return o.ReleaseMessage(a0, a1); }, "", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("ReleaseMessage", (class google::protobuf::Message * (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const) &google::protobuf::Reflection::ReleaseMessage, "C++: google::protobuf::Reflection::ReleaseMessage(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("factory"));
		cl.def("GetRepeatedInt32", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedInt32, "C++: google::protobuf::Reflection::GetRepeatedInt32(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> int", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedInt64", (long (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedInt64, "C++: google::protobuf::Reflection::GetRepeatedInt64(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> long", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedUInt32", (unsigned int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedUInt32, "C++: google::protobuf::Reflection::GetRepeatedUInt32(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> unsigned int", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedUInt64", (unsigned long (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedUInt64, "C++: google::protobuf::Reflection::GetRepeatedUInt64(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> unsigned long", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedFloat", (float (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedFloat, "C++: google::protobuf::Reflection::GetRepeatedFloat(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> float", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedDouble", (double (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedDouble, "C++: google::protobuf::Reflection::GetRepeatedDouble(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> double", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedBool", (bool (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedBool, "C++: google::protobuf::Reflection::GetRepeatedBool(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> bool", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedEnum", (const class google::protobuf::EnumValueDescriptor * (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedEnum, "C++: google::protobuf::Reflection::GetRepeatedEnum(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> const class google::protobuf::EnumValueDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedEnumValue", (int (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedEnumValue, "C++: google::protobuf::Reflection::GetRepeatedEnumValue(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> int", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("GetRepeatedMessage", (const class google::protobuf::Message & (google::protobuf::Reflection::*)(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::GetRepeatedMessage, "C++: google::protobuf::Reflection::GetRepeatedMessage(const class google::protobuf::Message &, const class google::protobuf::FieldDescriptor *, int) const --> const class google::protobuf::Message &", pybind11::return_value_policy::automatic, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("SetRepeatedInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const) &google::protobuf::Reflection::SetRepeatedInt32, "C++: google::protobuf::Reflection::SetRepeatedInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, long) const) &google::protobuf::Reflection::SetRepeatedInt64, "C++: google::protobuf::Reflection::SetRepeatedInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedUInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, unsigned int) const) &google::protobuf::Reflection::SetRepeatedUInt32, "C++: google::protobuf::Reflection::SetRepeatedUInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, unsigned int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedUInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, unsigned long) const) &google::protobuf::Reflection::SetRepeatedUInt64, "C++: google::protobuf::Reflection::SetRepeatedUInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, unsigned long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedFloat", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, float) const) &google::protobuf::Reflection::SetRepeatedFloat, "C++: google::protobuf::Reflection::SetRepeatedFloat(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, float) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedDouble", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, double) const) &google::protobuf::Reflection::SetRepeatedDouble, "C++: google::protobuf::Reflection::SetRepeatedDouble(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, double) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedBool", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, bool) const) &google::protobuf::Reflection::SetRepeatedBool, "C++: google::protobuf::Reflection::SetRepeatedBool(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, bool) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedEnum", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, const class google::protobuf::EnumValueDescriptor *) const) &google::protobuf::Reflection::SetRepeatedEnum, "C++: google::protobuf::Reflection::SetRepeatedEnum(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, const class google::protobuf::EnumValueDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("SetRepeatedEnumValue", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const) &google::protobuf::Reflection::SetRepeatedEnumValue, "C++: google::protobuf::Reflection::SetRepeatedEnumValue(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"), pybind11::arg("value"));
		cl.def("MutableRepeatedMessage", (class google::protobuf::Message * (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::MutableRepeatedMessage, "C++: google::protobuf::Reflection::MutableRepeatedMessage(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("index"));
		cl.def("AddInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::AddInt32, "C++: google::protobuf::Reflection::AddInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, long) const) &google::protobuf::Reflection::AddInt64, "C++: google::protobuf::Reflection::AddInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddUInt32", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned int) const) &google::protobuf::Reflection::AddUInt32, "C++: google::protobuf::Reflection::AddUInt32(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddUInt64", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned long) const) &google::protobuf::Reflection::AddUInt64, "C++: google::protobuf::Reflection::AddUInt64(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, unsigned long) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddFloat", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, float) const) &google::protobuf::Reflection::AddFloat, "C++: google::protobuf::Reflection::AddFloat(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, float) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddDouble", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, double) const) &google::protobuf::Reflection::AddDouble, "C++: google::protobuf::Reflection::AddDouble(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, double) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddBool", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, bool) const) &google::protobuf::Reflection::AddBool, "C++: google::protobuf::Reflection::AddBool(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, bool) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddEnum", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, const class google::protobuf::EnumValueDescriptor *) const) &google::protobuf::Reflection::AddEnum, "C++: google::protobuf::Reflection::AddEnum(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, const class google::protobuf::EnumValueDescriptor *) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddEnumValue", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const) &google::protobuf::Reflection::AddEnumValue, "C++: google::protobuf::Reflection::AddEnumValue(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, int) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("value"));
		cl.def("AddMessage", [](google::protobuf::Reflection const &o, class google::protobuf::Message * a0, const class google::protobuf::FieldDescriptor * a1) -> google::protobuf::Message * { return o.AddMessage(a0, a1); }, "", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"));
		cl.def("AddMessage", (class google::protobuf::Message * (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const) &google::protobuf::Reflection::AddMessage, "C++: google::protobuf::Reflection::AddMessage(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::MessageFactory *) const --> class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("factory"));
		cl.def("AddAllocatedMessage", (void (google::protobuf::Reflection::*)(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::Message *) const) &google::protobuf::Reflection::AddAllocatedMessage, "C++: google::protobuf::Reflection::AddAllocatedMessage(class google::protobuf::Message *, const class google::protobuf::FieldDescriptor *, class google::protobuf::Message *) const --> void", pybind11::arg("message"), pybind11::arg("field"), pybind11::arg("new_entry"));
		cl.def("FindKnownExtensionByNumber", (const class google::protobuf::FieldDescriptor * (google::protobuf::Reflection::*)(int) const) &google::protobuf::Reflection::FindKnownExtensionByNumber, "C++: google::protobuf::Reflection::FindKnownExtensionByNumber(int) const --> const class google::protobuf::FieldDescriptor *", pybind11::return_value_policy::reference, pybind11::arg("number"));
		cl.def("SupportsUnknownEnumValues", (bool (google::protobuf::Reflection::*)() const) &google::protobuf::Reflection::SupportsUnknownEnumValues, "C++: google::protobuf::Reflection::SupportsUnknownEnumValues() const --> bool");
		cl.def("GetMessageFactory", (class google::protobuf::MessageFactory * (google::protobuf::Reflection::*)() const) &google::protobuf::Reflection::GetMessageFactory, "C++: google::protobuf::Reflection::GetMessageFactory() const --> class google::protobuf::MessageFactory *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/message_2.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/generated_message_reflection.h> // google::protobuf::internal::DescriptorTable
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedOutputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <istream> // std::basic_istream
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <ostream> // std::basic_ostream
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

// google::protobuf::MessageFactory file:google/protobuf/message.h line:1150
struct PyCallBack_google_protobuf_MessageFactory : public google::protobuf::MessageFactory {
	using google::protobuf::MessageFactory::MessageFactory;

	const class google::protobuf::Message * GetPrototype(const class google::protobuf::Descriptor * a0) override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const google::protobuf::MessageFactory *>(this), "GetPrototype");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>(a0);
			if (pybind11::detail::cast_is_temporary_value_reference<const class google::protobuf::Message *>::value) {
				static pybind11::detail::override_caster_t<const class google::protobuf::Message *> caster;
				return pybind11::detail::cast_ref<const class google::protobuf::Message *>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<const class google::protobuf::Message *>(std::move(o));
		}
		pybind11::pybind11_fail("Tried to call pure virtual function \"MessageFactory::GetPrototype\"");
	}
};

void bind_google_protobuf_message_2(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B139_[google::protobuf::MessageFactory] ";
	{ // google::protobuf::MessageFactory file:google/protobuf/message.h line:1150
		pybind11::class_<google::protobuf::MessageFactory, std::shared_ptr<google::protobuf::MessageFactory>, PyCallBack_google_protobuf_MessageFactory> cl(M("google::protobuf"), "MessageFactory", "");
		cl.def( pybind11::init( [](){ return new PyCallBack_google_protobuf_MessageFactory(); } ) );
		cl.def("GetPrototype", (const class google::protobuf::Message * (google::protobuf::MessageFactory::*)(const class google::protobuf::Descriptor *)) &google::protobuf::MessageFactory::GetPrototype, "C++: google::protobuf::MessageFactory::GetPrototype(const class google::protobuf::Descriptor *) --> const class google::protobuf::Message *", pybind11::return_value_policy::reference, pybind11::arg("type"));
		cl.def_static("generated_factory", (class google::protobuf::MessageFactory * (*)()) &google::protobuf::MessageFactory::generated_factory, "C++: google::protobuf::MessageFactory::generated_factory() --> class google::protobuf::MessageFactory *", pybind11::return_value_policy::automatic);
		cl.def_static("InternalRegisterGeneratedFile", (void (*)(const struct google::protobuf::internal::DescriptorTable *)) &google::protobuf::MessageFactory::InternalRegisterGeneratedFile, "C++: google::protobuf::MessageFactory::InternalRegisterGeneratedFile(const struct google::protobuf::internal::DescriptorTable *) --> void", pybind11::arg("table"));
		cl.def_static("InternalRegisterGeneratedMessage", (void (*)(const class google::protobuf::Descriptor *, const class google::protobuf::Message *)) &google::protobuf::MessageFactory::InternalRegisterGeneratedMessage, "C++: google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(const class google::protobuf::Descriptor *, const class google::protobuf::Message *) --> void", pybind11::arg("descriptor"), pybind11::arg("prototype"));
	}
}


// File: google/protobuf/descriptor_pb.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorSet
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel_IsValid
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel_Parse
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel_descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B140_[google::protobuf::FieldDescriptorProto_Type] ";
	// google::protobuf::FieldDescriptorProto_Type file:google/protobuf/descriptor.pb.h line:172
	pybind11::enum_<google::protobuf::FieldDescriptorProto_Type>(M("google::protobuf"), "FieldDescriptorProto_Type", pybind11::arithmetic(), "")
		.value("FieldDescriptorProto_Type_TYPE_DOUBLE", google::protobuf::FieldDescriptorProto_Type_TYPE_DOUBLE)
		.value("FieldDescriptorProto_Type_TYPE_FLOAT", google::protobuf::FieldDescriptorProto_Type_TYPE_FLOAT)
		.value("FieldDescriptorProto_Type_TYPE_INT64", google::protobuf::FieldDescriptorProto_Type_TYPE_INT64)
		.value("FieldDescriptorProto_Type_TYPE_UINT64", google::protobuf::FieldDescriptorProto_Type_TYPE_UINT64)
		.value("FieldDescriptorProto_Type_TYPE_INT32", google::protobuf::FieldDescriptorProto_Type_TYPE_INT32)
		.value("FieldDescriptorProto_Type_TYPE_FIXED64", google::protobuf::FieldDescriptorProto_Type_TYPE_FIXED64)
		.value("FieldDescriptorProto_Type_TYPE_FIXED32", google::protobuf::FieldDescriptorProto_Type_TYPE_FIXED32)
		.value("FieldDescriptorProto_Type_TYPE_BOOL", google::protobuf::FieldDescriptorProto_Type_TYPE_BOOL)
		.value("FieldDescriptorProto_Type_TYPE_STRING", google::protobuf::FieldDescriptorProto_Type_TYPE_STRING)
		.value("FieldDescriptorProto_Type_TYPE_GROUP", google::protobuf::FieldDescriptorProto_Type_TYPE_GROUP)
		.value("FieldDescriptorProto_Type_TYPE_MESSAGE", google::protobuf::FieldDescriptorProto_Type_TYPE_MESSAGE)
		.value("FieldDescriptorProto_Type_TYPE_BYTES", google::protobuf::FieldDescriptorProto_Type_TYPE_BYTES)
		.value("FieldDescriptorProto_Type_TYPE_UINT32", google::protobuf::FieldDescriptorProto_Type_TYPE_UINT32)
		.value("FieldDescriptorProto_Type_TYPE_ENUM", google::protobuf::FieldDescriptorProto_Type_TYPE_ENUM)
		.value("FieldDescriptorProto_Type_TYPE_SFIXED32", google::protobuf::FieldDescriptorProto_Type_TYPE_SFIXED32)
		.value("FieldDescriptorProto_Type_TYPE_SFIXED64", google::protobuf::FieldDescriptorProto_Type_TYPE_SFIXED64)
		.value("FieldDescriptorProto_Type_TYPE_SINT32", google::protobuf::FieldDescriptorProto_Type_TYPE_SINT32)
		.value("FieldDescriptorProto_Type_TYPE_SINT64", google::protobuf::FieldDescriptorProto_Type_TYPE_SINT64)
		.export_values();

;

	std::cout << "B141_[bool google::protobuf::FieldDescriptorProto_Type_IsValid(int)] ";
	std::cout << "B142_[const class google::protobuf::EnumDescriptor * google::protobuf::FieldDescriptorProto_Type_descriptor()] ";
	std::cout << "B143_[bool google::protobuf::FieldDescriptorProto_Type_Parse(const std::string &, enum google::protobuf::FieldDescriptorProto_Type *)] ";
	std::cout << "B144_[google::protobuf::FieldDescriptorProto_Label] ";
	// google::protobuf::FieldDescriptorProto_Label file:google/protobuf/descriptor.pb.h line:211
	pybind11::enum_<google::protobuf::FieldDescriptorProto_Label>(M("google::protobuf"), "FieldDescriptorProto_Label", pybind11::arithmetic(), "")
		.value("FieldDescriptorProto_Label_LABEL_OPTIONAL", google::protobuf::FieldDescriptorProto_Label_LABEL_OPTIONAL)
		.value("FieldDescriptorProto_Label_LABEL_REQUIRED", google::protobuf::FieldDescriptorProto_Label_LABEL_REQUIRED)
		.value("FieldDescriptorProto_Label_LABEL_REPEATED", google::protobuf::FieldDescriptorProto_Label_LABEL_REPEATED)
		.export_values();

;

	std::cout << "B145_[bool google::protobuf::FieldDescriptorProto_Label_IsValid(int)] ";
	std::cout << "B146_[const class google::protobuf::EnumDescriptor * google::protobuf::FieldDescriptorProto_Label_descriptor()] ";
	std::cout << "B147_[bool google::protobuf::FieldDescriptorProto_Label_Parse(const std::string &, enum google::protobuf::FieldDescriptorProto_Label *)] ";
	std::cout << "B148_[google::protobuf::FileOptions_OptimizeMode] ";
	// google::protobuf::FileOptions_OptimizeMode file:google/protobuf/descriptor.pb.h line:235
	pybind11::enum_<google::protobuf::FileOptions_OptimizeMode>(M("google::protobuf"), "FileOptions_OptimizeMode", pybind11::arithmetic(), "")
		.value("FileOptions_OptimizeMode_SPEED", google::protobuf::FileOptions_OptimizeMode_SPEED)
		.value("FileOptions_OptimizeMode_CODE_SIZE", google::protobuf::FileOptions_OptimizeMode_CODE_SIZE)
		.value("FileOptions_OptimizeMode_LITE_RUNTIME", google::protobuf::FileOptions_OptimizeMode_LITE_RUNTIME)
		.export_values();

;

	std::cout << "B149_[bool google::protobuf::FileOptions_OptimizeMode_IsValid(int)] ";
	std::cout << "B150_[const class google::protobuf::EnumDescriptor * google::protobuf::FileOptions_OptimizeMode_descriptor()] ";
	std::cout << "B151_[bool google::protobuf::FileOptions_OptimizeMode_Parse(const std::string &, enum google::protobuf::FileOptions_OptimizeMode *)] ";
	std::cout << "B152_[google::protobuf::FieldOptions_CType] ";
	// google::protobuf::FieldOptions_CType file:google/protobuf/descriptor.pb.h line:259
	pybind11::enum_<google::protobuf::FieldOptions_CType>(M("google::protobuf"), "FieldOptions_CType", pybind11::arithmetic(), "")
		.value("FieldOptions_CType_STRING", google::protobuf::FieldOptions_CType_STRING)
		.value("FieldOptions_CType_CORD", google::protobuf::FieldOptions_CType_CORD)
		.value("FieldOptions_CType_STRING_PIECE", google::protobuf::FieldOptions_CType_STRING_PIECE)
		.export_values();

;

	std::cout << "B153_[bool google::protobuf::FieldOptions_CType_IsValid(int)] ";
	std::cout << "B154_[const class google::protobuf::EnumDescriptor * google::protobuf::FieldOptions_CType_descriptor()] ";
	std::cout << "B155_[bool google::protobuf::FieldOptions_CType_Parse(const std::string &, enum google::protobuf::FieldOptions_CType *)] ";
	std::cout << "B156_[google::protobuf::FieldOptions_JSType] ";
	// google::protobuf::FieldOptions_JSType file:google/protobuf/descriptor.pb.h line:283
	pybind11::enum_<google::protobuf::FieldOptions_JSType>(M("google::protobuf"), "FieldOptions_JSType", pybind11::arithmetic(), "")
		.value("FieldOptions_JSType_JS_NORMAL", google::protobuf::FieldOptions_JSType_JS_NORMAL)
		.value("FieldOptions_JSType_JS_STRING", google::protobuf::FieldOptions_JSType_JS_STRING)
		.value("FieldOptions_JSType_JS_NUMBER", google::protobuf::FieldOptions_JSType_JS_NUMBER)
		.export_values();

;

	std::cout << "B157_[bool google::protobuf::FieldOptions_JSType_IsValid(int)] ";
	std::cout << "B158_[const class google::protobuf::EnumDescriptor * google::protobuf::FieldOptions_JSType_descriptor()] ";
	std::cout << "B159_[bool google::protobuf::FieldOptions_JSType_Parse(const std::string &, enum google::protobuf::FieldOptions_JSType *)] ";
	std::cout << "B160_[google::protobuf::MethodOptions_IdempotencyLevel] ";
	// google::protobuf::MethodOptions_IdempotencyLevel file:google/protobuf/descriptor.pb.h line:307
	pybind11::enum_<google::protobuf::MethodOptions_IdempotencyLevel>(M("google::protobuf"), "MethodOptions_IdempotencyLevel", pybind11::arithmetic(), "")
		.value("MethodOptions_IdempotencyLevel_IDEMPOTENCY_UNKNOWN", google::protobuf::MethodOptions_IdempotencyLevel_IDEMPOTENCY_UNKNOWN)
		.value("MethodOptions_IdempotencyLevel_NO_SIDE_EFFECTS", google::protobuf::MethodOptions_IdempotencyLevel_NO_SIDE_EFFECTS)
		.value("MethodOptions_IdempotencyLevel_IDEMPOTENT", google::protobuf::MethodOptions_IdempotencyLevel_IDEMPOTENT)
		.export_values();

;

	std::cout << "B161_[bool google::protobuf::MethodOptions_IdempotencyLevel_IsValid(int)] ";
	std::cout << "B162_[const class google::protobuf::EnumDescriptor * google::protobuf::MethodOptions_IdempotencyLevel_descriptor()] ";
	std::cout << "B163_[bool google::protobuf::MethodOptions_IdempotencyLevel_Parse(const std::string &, enum google::protobuf::MethodOptions_IdempotencyLevel *)] ";
	std::cout << "B164_[google::protobuf::FileDescriptorSet] ";
	std::cout << "B165_[void google::protobuf::swap(class google::protobuf::FileDescriptorSet &, class google::protobuf::FileDescriptorSet &)] ";
	std::cout << "B166_[google::protobuf::FileDescriptorProto] ";
	{ // google::protobuf::FileDescriptorProto file:google/protobuf/descriptor.pb.h line:486
		pybind11::class_<google::protobuf::FileDescriptorProto, std::shared_ptr<google::protobuf::FileDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "FileDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::FileDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::FileDescriptorProto const &o){ return new google::protobuf::FileDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::FileDescriptorProto & (google::protobuf::FileDescriptorProto::*)(const class google::protobuf::FileDescriptorProto &)) &google::protobuf::FileDescriptorProto::operator=, "C++: google::protobuf::FileDescriptorProto::operator=(const class google::protobuf::FileDescriptorProto &) --> class google::protobuf::FileDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::unknown_fields, "C++: google::protobuf::FileDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::FileDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FileDescriptorProto::descriptor, "C++: google::protobuf::FileDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FileDescriptorProto::GetDescriptor, "C++: google::protobuf::FileDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::FileDescriptorProto::GetReflection, "C++: google::protobuf::FileDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::FileDescriptorProto & (*)()) &google::protobuf::FileDescriptorProto::default_instance, "C++: google::protobuf::FileDescriptorProto::default_instance() --> const class google::protobuf::FileDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::FileDescriptorProto * (*)()) &google::protobuf::FileDescriptorProto::internal_default_instance, "C++: google::protobuf::FileDescriptorProto::internal_default_instance() --> const class google::protobuf::FileDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::FileDescriptorProto *)) &google::protobuf::FileDescriptorProto::Swap, "C++: google::protobuf::FileDescriptorProto::Swap(class google::protobuf::FileDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::FileDescriptorProto *)) &google::protobuf::FileDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::FileDescriptorProto::UnsafeArenaSwap(class google::protobuf::FileDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::FileDescriptorProto * (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::New, "C++: google::protobuf::FileDescriptorProto::New() const --> class google::protobuf::FileDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::FileDescriptorProto * (google::protobuf::FileDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::FileDescriptorProto::New, "C++: google::protobuf::FileDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::FileDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::FileDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::FileDescriptorProto::CopyFrom, "C++: google::protobuf::FileDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FileDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::FileDescriptorProto::MergeFrom, "C++: google::protobuf::FileDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::FileDescriptorProto::*)(const class google::protobuf::FileDescriptorProto &)) &google::protobuf::FileDescriptorProto::CopyFrom, "C++: google::protobuf::FileDescriptorProto::CopyFrom(const class google::protobuf::FileDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FileDescriptorProto::*)(const class google::protobuf::FileDescriptorProto &)) &google::protobuf::FileDescriptorProto::MergeFrom, "C++: google::protobuf::FileDescriptorProto::MergeFrom(const class google::protobuf::FileDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::Clear, "C++: google::protobuf::FileDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::IsInitialized, "C++: google::protobuf::FileDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::ByteSizeLong, "C++: google::protobuf::FileDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::FileDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::FileDescriptorProto::_InternalParse, "C++: google::protobuf::FileDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::FileDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::FileDescriptorProto::_InternalSerialize, "C++: google::protobuf::FileDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::GetCachedSize, "C++: google::protobuf::FileDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::GetMetadata, "C++: google::protobuf::FileDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("dependency_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::dependency_size, "C++: google::protobuf::FileDescriptorProto::dependency_size() const --> int");
		cl.def("clear_dependency", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_dependency, "C++: google::protobuf::FileDescriptorProto::clear_dependency() --> void");
		cl.def("set_dependency", (void (google::protobuf::FileDescriptorProto::*)(int, const char *)) &google::protobuf::FileDescriptorProto::set_dependency, "C++: google::protobuf::FileDescriptorProto::set_dependency(int, const char *) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("set_dependency", (void (google::protobuf::FileDescriptorProto::*)(int, const char *, unsigned long)) &google::protobuf::FileDescriptorProto::set_dependency, "C++: google::protobuf::FileDescriptorProto::set_dependency(int, const char *, unsigned long) --> void", pybind11::arg("index"), pybind11::arg("value"), pybind11::arg("size"));
		cl.def("add_dependency", (void (google::protobuf::FileDescriptorProto::*)(const char *)) &google::protobuf::FileDescriptorProto::add_dependency, "C++: google::protobuf::FileDescriptorProto::add_dependency(const char *) --> void", pybind11::arg("value"));
		cl.def("add_dependency", (void (google::protobuf::FileDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FileDescriptorProto::add_dependency, "C++: google::protobuf::FileDescriptorProto::add_dependency(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("message_type_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::message_type_size, "C++: google::protobuf::FileDescriptorProto::message_type_size() const --> int");
		cl.def("clear_message_type", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_message_type, "C++: google::protobuf::FileDescriptorProto::clear_message_type() --> void");
		cl.def("mutable_message_type", (class google::protobuf::DescriptorProto * (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::mutable_message_type, "C++: google::protobuf::FileDescriptorProto::mutable_message_type(int) --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_message_type", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_message_type, "C++: google::protobuf::FileDescriptorProto::mutable_message_type() --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("message_type", (const class google::protobuf::DescriptorProto & (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::message_type, "C++: google::protobuf::FileDescriptorProto::message_type(int) const --> const class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_message_type", (class google::protobuf::DescriptorProto * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::add_message_type, "C++: google::protobuf::FileDescriptorProto::add_message_type() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("message_type", (const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::message_type, "C++: google::protobuf::FileDescriptorProto::message_type() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("enum_type_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::enum_type_size, "C++: google::protobuf::FileDescriptorProto::enum_type_size() const --> int");
		cl.def("clear_enum_type", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_enum_type, "C++: google::protobuf::FileDescriptorProto::clear_enum_type() --> void");
		cl.def("mutable_enum_type", (class google::protobuf::EnumDescriptorProto * (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::mutable_enum_type, "C++: google::protobuf::FileDescriptorProto::mutable_enum_type(int) --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_enum_type", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_enum_type, "C++: google::protobuf::FileDescriptorProto::mutable_enum_type() --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("enum_type", (const class google::protobuf::EnumDescriptorProto & (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::enum_type, "C++: google::protobuf::FileDescriptorProto::enum_type(int) const --> const class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_enum_type", (class google::protobuf::EnumDescriptorProto * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::add_enum_type, "C++: google::protobuf::FileDescriptorProto::add_enum_type() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("enum_type", (const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::enum_type, "C++: google::protobuf::FileDescriptorProto::enum_type() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("service_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::service_size, "C++: google::protobuf::FileDescriptorProto::service_size() const --> int");
		cl.def("clear_service", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_service, "C++: google::protobuf::FileDescriptorProto::clear_service() --> void");
		cl.def("mutable_service", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::mutable_service, "C++: google::protobuf::FileDescriptorProto::mutable_service(int) --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_service", (class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_service, "C++: google::protobuf::FileDescriptorProto::mutable_service() --> class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("service", (const class google::protobuf::ServiceDescriptorProto & (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::service, "C++: google::protobuf::FileDescriptorProto::service(int) const --> const class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_service", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::add_service, "C++: google::protobuf::FileDescriptorProto::add_service() --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("service", (const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::service, "C++: google::protobuf::FileDescriptorProto::service() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::ServiceDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("extension_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::extension_size, "C++: google::protobuf::FileDescriptorProto::extension_size() const --> int");
		cl.def("clear_extension", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_extension, "C++: google::protobuf::FileDescriptorProto::clear_extension() --> void");
		cl.def("mutable_extension", (class google::protobuf::FieldDescriptorProto * (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::mutable_extension, "C++: google::protobuf::FileDescriptorProto::mutable_extension(int) --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_extension", (class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_extension, "C++: google::protobuf::FileDescriptorProto::mutable_extension() --> class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("extension", (const class google::protobuf::FieldDescriptorProto & (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::extension, "C++: google::protobuf::FileDescriptorProto::extension(int) const --> const class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_extension", (class google::protobuf::FieldDescriptorProto * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::add_extension, "C++: google::protobuf::FileDescriptorProto::add_extension() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("extension", (const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::extension, "C++: google::protobuf::FileDescriptorProto::extension() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("public_dependency_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::public_dependency_size, "C++: google::protobuf::FileDescriptorProto::public_dependency_size() const --> int");
		cl.def("clear_public_dependency", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_public_dependency, "C++: google::protobuf::FileDescriptorProto::clear_public_dependency() --> void");
		cl.def("public_dependency", (int (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::public_dependency, "C++: google::protobuf::FileDescriptorProto::public_dependency(int) const --> int", pybind11::arg("index"));
		cl.def("set_public_dependency", (void (google::protobuf::FileDescriptorProto::*)(int, int)) &google::protobuf::FileDescriptorProto::set_public_dependency, "C++: google::protobuf::FileDescriptorProto::set_public_dependency(int, int) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_public_dependency", (void (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::add_public_dependency, "C++: google::protobuf::FileDescriptorProto::add_public_dependency(int) --> void", pybind11::arg("value"));
		cl.def("public_dependency", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::public_dependency, "C++: google::protobuf::FileDescriptorProto::public_dependency() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_public_dependency", (class google::protobuf::RepeatedField<google::protobuf::int32> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_public_dependency, "C++: google::protobuf::FileDescriptorProto::mutable_public_dependency() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("weak_dependency_size", (int (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::weak_dependency_size, "C++: google::protobuf::FileDescriptorProto::weak_dependency_size() const --> int");
		cl.def("clear_weak_dependency", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_weak_dependency, "C++: google::protobuf::FileDescriptorProto::clear_weak_dependency() --> void");
		cl.def("weak_dependency", (int (google::protobuf::FileDescriptorProto::*)(int) const) &google::protobuf::FileDescriptorProto::weak_dependency, "C++: google::protobuf::FileDescriptorProto::weak_dependency(int) const --> int", pybind11::arg("index"));
		cl.def("set_weak_dependency", (void (google::protobuf::FileDescriptorProto::*)(int, int)) &google::protobuf::FileDescriptorProto::set_weak_dependency, "C++: google::protobuf::FileDescriptorProto::set_weak_dependency(int, int) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_weak_dependency", (void (google::protobuf::FileDescriptorProto::*)(int)) &google::protobuf::FileDescriptorProto::add_weak_dependency, "C++: google::protobuf::FileDescriptorProto::add_weak_dependency(int) --> void", pybind11::arg("value"));
		cl.def("weak_dependency", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::weak_dependency, "C++: google::protobuf::FileDescriptorProto::weak_dependency() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_weak_dependency", (class google::protobuf::RepeatedField<google::protobuf::int32> * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_weak_dependency, "C++: google::protobuf::FileDescriptorProto::mutable_weak_dependency() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("has_name", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::has_name, "C++: google::protobuf::FileDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_name, "C++: google::protobuf::FileDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::FileDescriptorProto::*)(const char *)) &google::protobuf::FileDescriptorProto::set_name, "C++: google::protobuf::FileDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::FileDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FileDescriptorProto::set_name, "C++: google::protobuf::FileDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_package", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::has_package, "C++: google::protobuf::FileDescriptorProto::has_package() const --> bool");
		cl.def("clear_package", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_package, "C++: google::protobuf::FileDescriptorProto::clear_package() --> void");
		cl.def("set_package", (void (google::protobuf::FileDescriptorProto::*)(const char *)) &google::protobuf::FileDescriptorProto::set_package, "C++: google::protobuf::FileDescriptorProto::set_package(const char *) --> void", pybind11::arg("value"));
		cl.def("set_package", (void (google::protobuf::FileDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FileDescriptorProto::set_package, "C++: google::protobuf::FileDescriptorProto::set_package(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_syntax", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::has_syntax, "C++: google::protobuf::FileDescriptorProto::has_syntax() const --> bool");
		cl.def("clear_syntax", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_syntax, "C++: google::protobuf::FileDescriptorProto::clear_syntax() --> void");
		cl.def("set_syntax", (void (google::protobuf::FileDescriptorProto::*)(const char *)) &google::protobuf::FileDescriptorProto::set_syntax, "C++: google::protobuf::FileDescriptorProto::set_syntax(const char *) --> void", pybind11::arg("value"));
		cl.def("set_syntax", (void (google::protobuf::FileDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FileDescriptorProto::set_syntax, "C++: google::protobuf::FileDescriptorProto::set_syntax(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::has_options, "C++: google::protobuf::FileDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_options, "C++: google::protobuf::FileDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::FileOptions & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::options, "C++: google::protobuf::FileDescriptorProto::options() const --> const class google::protobuf::FileOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::FileOptions * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::release_options, "C++: google::protobuf::FileDescriptorProto::release_options() --> class google::protobuf::FileOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::FileOptions * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_options, "C++: google::protobuf::FileDescriptorProto::mutable_options() --> class google::protobuf::FileOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::FileOptions *)) &google::protobuf::FileDescriptorProto::set_allocated_options, "C++: google::protobuf::FileDescriptorProto::set_allocated_options(class google::protobuf::FileOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::FileOptions *)) &google::protobuf::FileDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::FileDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::FileOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::FileOptions * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::FileDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::FileOptions *", pybind11::return_value_policy::reference);
		cl.def("has_source_code_info", (bool (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::has_source_code_info, "C++: google::protobuf::FileDescriptorProto::has_source_code_info() const --> bool");
		cl.def("clear_source_code_info", (void (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::clear_source_code_info, "C++: google::protobuf::FileDescriptorProto::clear_source_code_info() --> void");
		cl.def("source_code_info", (const class google::protobuf::SourceCodeInfo & (google::protobuf::FileDescriptorProto::*)() const) &google::protobuf::FileDescriptorProto::source_code_info, "C++: google::protobuf::FileDescriptorProto::source_code_info() const --> const class google::protobuf::SourceCodeInfo &", pybind11::return_value_policy::automatic);
		cl.def("release_source_code_info", (class google::protobuf::SourceCodeInfo * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::release_source_code_info, "C++: google::protobuf::FileDescriptorProto::release_source_code_info() --> class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::reference);
		cl.def("mutable_source_code_info", (class google::protobuf::SourceCodeInfo * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::mutable_source_code_info, "C++: google::protobuf::FileDescriptorProto::mutable_source_code_info() --> class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_source_code_info", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::SourceCodeInfo *)) &google::protobuf::FileDescriptorProto::set_allocated_source_code_info, "C++: google::protobuf::FileDescriptorProto::set_allocated_source_code_info(class google::protobuf::SourceCodeInfo *) --> void", pybind11::arg("source_code_info"));
		cl.def("unsafe_arena_set_allocated_source_code_info", (void (google::protobuf::FileDescriptorProto::*)(class google::protobuf::SourceCodeInfo *)) &google::protobuf::FileDescriptorProto::unsafe_arena_set_allocated_source_code_info, "C++: google::protobuf::FileDescriptorProto::unsafe_arena_set_allocated_source_code_info(class google::protobuf::SourceCodeInfo *) --> void", pybind11::arg("source_code_info"));
		cl.def("unsafe_arena_release_source_code_info", (class google::protobuf::SourceCodeInfo * (google::protobuf::FileDescriptorProto::*)()) &google::protobuf::FileDescriptorProto::unsafe_arena_release_source_code_info, "C++: google::protobuf::FileDescriptorProto::unsafe_arena_release_source_code_info() --> class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/descriptor_pb_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B167_[google::protobuf::DescriptorProto_ExtensionRange] ";
	{ // google::protobuf::DescriptorProto_ExtensionRange file:google/protobuf/descriptor.pb.h line:880
		pybind11::class_<google::protobuf::DescriptorProto_ExtensionRange, std::shared_ptr<google::protobuf::DescriptorProto_ExtensionRange>, google::protobuf::Message> cl(M("google::protobuf"), "DescriptorProto_ExtensionRange", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::DescriptorProto_ExtensionRange(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::DescriptorProto_ExtensionRange const &o){ return new google::protobuf::DescriptorProto_ExtensionRange(o); } ) );
		cl.def("assign", (class google::protobuf::DescriptorProto_ExtensionRange & (google::protobuf::DescriptorProto_ExtensionRange::*)(const class google::protobuf::DescriptorProto_ExtensionRange &)) &google::protobuf::DescriptorProto_ExtensionRange::operator=, "C++: google::protobuf::DescriptorProto_ExtensionRange::operator=(const class google::protobuf::DescriptorProto_ExtensionRange &) --> class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::unknown_fields, "C++: google::protobuf::DescriptorProto_ExtensionRange::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::mutable_unknown_fields, "C++: google::protobuf::DescriptorProto_ExtensionRange::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto_ExtensionRange::descriptor, "C++: google::protobuf::DescriptorProto_ExtensionRange::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto_ExtensionRange::GetDescriptor, "C++: google::protobuf::DescriptorProto_ExtensionRange::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::DescriptorProto_ExtensionRange::GetReflection, "C++: google::protobuf::DescriptorProto_ExtensionRange::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::DescriptorProto_ExtensionRange & (*)()) &google::protobuf::DescriptorProto_ExtensionRange::default_instance, "C++: google::protobuf::DescriptorProto_ExtensionRange::default_instance() --> const class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::DescriptorProto_ExtensionRange * (*)()) &google::protobuf::DescriptorProto_ExtensionRange::internal_default_instance, "C++: google::protobuf::DescriptorProto_ExtensionRange::internal_default_instance() --> const class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(class google::protobuf::DescriptorProto_ExtensionRange *)) &google::protobuf::DescriptorProto_ExtensionRange::Swap, "C++: google::protobuf::DescriptorProto_ExtensionRange::Swap(class google::protobuf::DescriptorProto_ExtensionRange *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(class google::protobuf::DescriptorProto_ExtensionRange *)) &google::protobuf::DescriptorProto_ExtensionRange::UnsafeArenaSwap, "C++: google::protobuf::DescriptorProto_ExtensionRange::UnsafeArenaSwap(class google::protobuf::DescriptorProto_ExtensionRange *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::New, "C++: google::protobuf::DescriptorProto_ExtensionRange::New() const --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::DescriptorProto_ExtensionRange::*)(class google::protobuf::Arena *) const) &google::protobuf::DescriptorProto_ExtensionRange::New, "C++: google::protobuf::DescriptorProto_ExtensionRange::New(class google::protobuf::Arena *) const --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto_ExtensionRange::CopyFrom, "C++: google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto_ExtensionRange::MergeFrom, "C++: google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(const class google::protobuf::DescriptorProto_ExtensionRange &)) &google::protobuf::DescriptorProto_ExtensionRange::CopyFrom, "C++: google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(const class google::protobuf::DescriptorProto_ExtensionRange &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(const class google::protobuf::DescriptorProto_ExtensionRange &)) &google::protobuf::DescriptorProto_ExtensionRange::MergeFrom, "C++: google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(const class google::protobuf::DescriptorProto_ExtensionRange &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::Clear, "C++: google::protobuf::DescriptorProto_ExtensionRange::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::IsInitialized, "C++: google::protobuf::DescriptorProto_ExtensionRange::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong, "C++: google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::DescriptorProto_ExtensionRange::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::DescriptorProto_ExtensionRange::_InternalParse, "C++: google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::DescriptorProto_ExtensionRange::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize, "C++: google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize, "C++: google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::GetMetadata, "C++: google::protobuf::DescriptorProto_ExtensionRange::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_options", (bool (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::has_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::clear_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::clear_options() --> void");
		cl.def("options", (const class google::protobuf::ExtensionRangeOptions & (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::options, "C++: google::protobuf::DescriptorProto_ExtensionRange::options() const --> const class google::protobuf::ExtensionRangeOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::ExtensionRangeOptions * (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::release_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::release_options() --> class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::ExtensionRangeOptions * (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::mutable_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::mutable_options() --> class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(class google::protobuf::ExtensionRangeOptions *)) &google::protobuf::DescriptorProto_ExtensionRange::set_allocated_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::set_allocated_options(class google::protobuf::ExtensionRangeOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(class google::protobuf::ExtensionRangeOptions *)) &google::protobuf::DescriptorProto_ExtensionRange::unsafe_arena_set_allocated_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::unsafe_arena_set_allocated_options(class google::protobuf::ExtensionRangeOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::ExtensionRangeOptions * (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::unsafe_arena_release_options, "C++: google::protobuf::DescriptorProto_ExtensionRange::unsafe_arena_release_options() --> class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::reference);
		cl.def("has_start", (bool (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::has_start, "C++: google::protobuf::DescriptorProto_ExtensionRange::has_start() const --> bool");
		cl.def("clear_start", (void (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::clear_start, "C++: google::protobuf::DescriptorProto_ExtensionRange::clear_start() --> void");
		cl.def("start", (int (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::start, "C++: google::protobuf::DescriptorProto_ExtensionRange::start() const --> int");
		cl.def("set_start", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(int)) &google::protobuf::DescriptorProto_ExtensionRange::set_start, "C++: google::protobuf::DescriptorProto_ExtensionRange::set_start(int) --> void", pybind11::arg("value"));
		cl.def("has_end", (bool (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::has_end, "C++: google::protobuf::DescriptorProto_ExtensionRange::has_end() const --> bool");
		cl.def("clear_end", (void (google::protobuf::DescriptorProto_ExtensionRange::*)()) &google::protobuf::DescriptorProto_ExtensionRange::clear_end, "C++: google::protobuf::DescriptorProto_ExtensionRange::clear_end() --> void");
		cl.def("end", (int (google::protobuf::DescriptorProto_ExtensionRange::*)() const) &google::protobuf::DescriptorProto_ExtensionRange::end, "C++: google::protobuf::DescriptorProto_ExtensionRange::end() const --> int");
		cl.def("set_end", (void (google::protobuf::DescriptorProto_ExtensionRange::*)(int)) &google::protobuf::DescriptorProto_ExtensionRange::set_end, "C++: google::protobuf::DescriptorProto_ExtensionRange::set_end(int) --> void", pybind11::arg("value"));
	}
	std::cout << "B168_[void google::protobuf::swap(class google::protobuf::DescriptorProto_ExtensionRange &, class google::protobuf::DescriptorProto_ExtensionRange &)] ";
	std::cout << "B169_[google::protobuf::DescriptorProto_ReservedRange] ";
	{ // google::protobuf::DescriptorProto_ReservedRange file:google/protobuf/descriptor.pb.h line:1064
		pybind11::class_<google::protobuf::DescriptorProto_ReservedRange, std::shared_ptr<google::protobuf::DescriptorProto_ReservedRange>, google::protobuf::Message> cl(M("google::protobuf"), "DescriptorProto_ReservedRange", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::DescriptorProto_ReservedRange(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::DescriptorProto_ReservedRange const &o){ return new google::protobuf::DescriptorProto_ReservedRange(o); } ) );
		cl.def("assign", (class google::protobuf::DescriptorProto_ReservedRange & (google::protobuf::DescriptorProto_ReservedRange::*)(const class google::protobuf::DescriptorProto_ReservedRange &)) &google::protobuf::DescriptorProto_ReservedRange::operator=, "C++: google::protobuf::DescriptorProto_ReservedRange::operator=(const class google::protobuf::DescriptorProto_ReservedRange &) --> class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::unknown_fields, "C++: google::protobuf::DescriptorProto_ReservedRange::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::DescriptorProto_ReservedRange::*)()) &google::protobuf::DescriptorProto_ReservedRange::mutable_unknown_fields, "C++: google::protobuf::DescriptorProto_ReservedRange::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto_ReservedRange::descriptor, "C++: google::protobuf::DescriptorProto_ReservedRange::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto_ReservedRange::GetDescriptor, "C++: google::protobuf::DescriptorProto_ReservedRange::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::DescriptorProto_ReservedRange::GetReflection, "C++: google::protobuf::DescriptorProto_ReservedRange::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::DescriptorProto_ReservedRange & (*)()) &google::protobuf::DescriptorProto_ReservedRange::default_instance, "C++: google::protobuf::DescriptorProto_ReservedRange::default_instance() --> const class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::DescriptorProto_ReservedRange * (*)()) &google::protobuf::DescriptorProto_ReservedRange::internal_default_instance, "C++: google::protobuf::DescriptorProto_ReservedRange::internal_default_instance() --> const class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::DescriptorProto_ReservedRange::*)(class google::protobuf::DescriptorProto_ReservedRange *)) &google::protobuf::DescriptorProto_ReservedRange::Swap, "C++: google::protobuf::DescriptorProto_ReservedRange::Swap(class google::protobuf::DescriptorProto_ReservedRange *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::DescriptorProto_ReservedRange::*)(class google::protobuf::DescriptorProto_ReservedRange *)) &google::protobuf::DescriptorProto_ReservedRange::UnsafeArenaSwap, "C++: google::protobuf::DescriptorProto_ReservedRange::UnsafeArenaSwap(class google::protobuf::DescriptorProto_ReservedRange *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::New, "C++: google::protobuf::DescriptorProto_ReservedRange::New() const --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::DescriptorProto_ReservedRange::*)(class google::protobuf::Arena *) const) &google::protobuf::DescriptorProto_ReservedRange::New, "C++: google::protobuf::DescriptorProto_ReservedRange::New(class google::protobuf::Arena *) const --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto_ReservedRange::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto_ReservedRange::CopyFrom, "C++: google::protobuf::DescriptorProto_ReservedRange::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto_ReservedRange::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto_ReservedRange::MergeFrom, "C++: google::protobuf::DescriptorProto_ReservedRange::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto_ReservedRange::*)(const class google::protobuf::DescriptorProto_ReservedRange &)) &google::protobuf::DescriptorProto_ReservedRange::CopyFrom, "C++: google::protobuf::DescriptorProto_ReservedRange::CopyFrom(const class google::protobuf::DescriptorProto_ReservedRange &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto_ReservedRange::*)(const class google::protobuf::DescriptorProto_ReservedRange &)) &google::protobuf::DescriptorProto_ReservedRange::MergeFrom, "C++: google::protobuf::DescriptorProto_ReservedRange::MergeFrom(const class google::protobuf::DescriptorProto_ReservedRange &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::DescriptorProto_ReservedRange::*)()) &google::protobuf::DescriptorProto_ReservedRange::Clear, "C++: google::protobuf::DescriptorProto_ReservedRange::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::IsInitialized, "C++: google::protobuf::DescriptorProto_ReservedRange::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong, "C++: google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::DescriptorProto_ReservedRange::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::DescriptorProto_ReservedRange::_InternalParse, "C++: google::protobuf::DescriptorProto_ReservedRange::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::DescriptorProto_ReservedRange::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize, "C++: google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::GetCachedSize, "C++: google::protobuf::DescriptorProto_ReservedRange::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::GetMetadata, "C++: google::protobuf::DescriptorProto_ReservedRange::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_start", (bool (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::has_start, "C++: google::protobuf::DescriptorProto_ReservedRange::has_start() const --> bool");
		cl.def("clear_start", (void (google::protobuf::DescriptorProto_ReservedRange::*)()) &google::protobuf::DescriptorProto_ReservedRange::clear_start, "C++: google::protobuf::DescriptorProto_ReservedRange::clear_start() --> void");
		cl.def("start", (int (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::start, "C++: google::protobuf::DescriptorProto_ReservedRange::start() const --> int");
		cl.def("set_start", (void (google::protobuf::DescriptorProto_ReservedRange::*)(int)) &google::protobuf::DescriptorProto_ReservedRange::set_start, "C++: google::protobuf::DescriptorProto_ReservedRange::set_start(int) --> void", pybind11::arg("value"));
		cl.def("has_end", (bool (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::has_end, "C++: google::protobuf::DescriptorProto_ReservedRange::has_end() const --> bool");
		cl.def("clear_end", (void (google::protobuf::DescriptorProto_ReservedRange::*)()) &google::protobuf::DescriptorProto_ReservedRange::clear_end, "C++: google::protobuf::DescriptorProto_ReservedRange::clear_end() --> void");
		cl.def("end", (int (google::protobuf::DescriptorProto_ReservedRange::*)() const) &google::protobuf::DescriptorProto_ReservedRange::end, "C++: google::protobuf::DescriptorProto_ReservedRange::end() const --> int");
		cl.def("set_end", (void (google::protobuf::DescriptorProto_ReservedRange::*)(int)) &google::protobuf::DescriptorProto_ReservedRange::set_end, "C++: google::protobuf::DescriptorProto_ReservedRange::set_end(int) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_2.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ExtensionRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto_ReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_2(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B170_[google::protobuf::DescriptorProto] ";
	{ // google::protobuf::DescriptorProto file:google/protobuf/descriptor.pb.h line:1228
		pybind11::class_<google::protobuf::DescriptorProto, std::shared_ptr<google::protobuf::DescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "DescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::DescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::DescriptorProto const &o){ return new google::protobuf::DescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::DescriptorProto & (google::protobuf::DescriptorProto::*)(const class google::protobuf::DescriptorProto &)) &google::protobuf::DescriptorProto::operator=, "C++: google::protobuf::DescriptorProto::operator=(const class google::protobuf::DescriptorProto &) --> class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::unknown_fields, "C++: google::protobuf::DescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_unknown_fields, "C++: google::protobuf::DescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto::descriptor, "C++: google::protobuf::DescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::DescriptorProto::GetDescriptor, "C++: google::protobuf::DescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::DescriptorProto::GetReflection, "C++: google::protobuf::DescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::DescriptorProto & (*)()) &google::protobuf::DescriptorProto::default_instance, "C++: google::protobuf::DescriptorProto::default_instance() --> const class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::DescriptorProto * (*)()) &google::protobuf::DescriptorProto::internal_default_instance, "C++: google::protobuf::DescriptorProto::internal_default_instance() --> const class google::protobuf::DescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::DescriptorProto::*)(class google::protobuf::DescriptorProto *)) &google::protobuf::DescriptorProto::Swap, "C++: google::protobuf::DescriptorProto::Swap(class google::protobuf::DescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::DescriptorProto::*)(class google::protobuf::DescriptorProto *)) &google::protobuf::DescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::DescriptorProto::UnsafeArenaSwap(class google::protobuf::DescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::DescriptorProto * (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::New, "C++: google::protobuf::DescriptorProto::New() const --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::DescriptorProto * (google::protobuf::DescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::DescriptorProto::New, "C++: google::protobuf::DescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto::CopyFrom, "C++: google::protobuf::DescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::DescriptorProto::MergeFrom, "C++: google::protobuf::DescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::DescriptorProto::*)(const class google::protobuf::DescriptorProto &)) &google::protobuf::DescriptorProto::CopyFrom, "C++: google::protobuf::DescriptorProto::CopyFrom(const class google::protobuf::DescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::DescriptorProto::*)(const class google::protobuf::DescriptorProto &)) &google::protobuf::DescriptorProto::MergeFrom, "C++: google::protobuf::DescriptorProto::MergeFrom(const class google::protobuf::DescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::Clear, "C++: google::protobuf::DescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::IsInitialized, "C++: google::protobuf::DescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::ByteSizeLong, "C++: google::protobuf::DescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::DescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::DescriptorProto::_InternalParse, "C++: google::protobuf::DescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::DescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::DescriptorProto::_InternalSerialize, "C++: google::protobuf::DescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::GetCachedSize, "C++: google::protobuf::DescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::GetMetadata, "C++: google::protobuf::DescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("field_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::field_size, "C++: google::protobuf::DescriptorProto::field_size() const --> int");
		cl.def("clear_field", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_field, "C++: google::protobuf::DescriptorProto::clear_field() --> void");
		cl.def("mutable_field", (class google::protobuf::FieldDescriptorProto * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_field, "C++: google::protobuf::DescriptorProto::mutable_field(int) --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_field", (class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_field, "C++: google::protobuf::DescriptorProto::mutable_field() --> class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("field", (const class google::protobuf::FieldDescriptorProto & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::field, "C++: google::protobuf::DescriptorProto::field(int) const --> const class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_field", (class google::protobuf::FieldDescriptorProto * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_field, "C++: google::protobuf::DescriptorProto::add_field() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("field", (const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::field, "C++: google::protobuf::DescriptorProto::field() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("nested_type_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::nested_type_size, "C++: google::protobuf::DescriptorProto::nested_type_size() const --> int");
		cl.def("clear_nested_type", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_nested_type, "C++: google::protobuf::DescriptorProto::clear_nested_type() --> void");
		cl.def("mutable_nested_type", (class google::protobuf::DescriptorProto * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_nested_type, "C++: google::protobuf::DescriptorProto::mutable_nested_type(int) --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_nested_type", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_nested_type, "C++: google::protobuf::DescriptorProto::mutable_nested_type() --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("nested_type", (const class google::protobuf::DescriptorProto & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::nested_type, "C++: google::protobuf::DescriptorProto::nested_type(int) const --> const class google::protobuf::DescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_nested_type", (class google::protobuf::DescriptorProto * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_nested_type, "C++: google::protobuf::DescriptorProto::add_nested_type() --> class google::protobuf::DescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("nested_type", (const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::nested_type, "C++: google::protobuf::DescriptorProto::nested_type() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("enum_type_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::enum_type_size, "C++: google::protobuf::DescriptorProto::enum_type_size() const --> int");
		cl.def("clear_enum_type", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_enum_type, "C++: google::protobuf::DescriptorProto::clear_enum_type() --> void");
		cl.def("mutable_enum_type", (class google::protobuf::EnumDescriptorProto * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_enum_type, "C++: google::protobuf::DescriptorProto::mutable_enum_type(int) --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_enum_type", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_enum_type, "C++: google::protobuf::DescriptorProto::mutable_enum_type() --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("enum_type", (const class google::protobuf::EnumDescriptorProto & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::enum_type, "C++: google::protobuf::DescriptorProto::enum_type(int) const --> const class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_enum_type", (class google::protobuf::EnumDescriptorProto * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_enum_type, "C++: google::protobuf::DescriptorProto::add_enum_type() --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("enum_type", (const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::enum_type, "C++: google::protobuf::DescriptorProto::enum_type() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("extension_range_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::extension_range_size, "C++: google::protobuf::DescriptorProto::extension_range_size() const --> int");
		cl.def("clear_extension_range", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_extension_range, "C++: google::protobuf::DescriptorProto::clear_extension_range() --> void");
		cl.def("mutable_extension_range", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_extension_range, "C++: google::protobuf::DescriptorProto::mutable_extension_range(int) --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_extension_range", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_extension_range, "C++: google::protobuf::DescriptorProto::mutable_extension_range() --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> *", pybind11::return_value_policy::reference);
		cl.def("extension_range", (const class google::protobuf::DescriptorProto_ExtensionRange & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::extension_range, "C++: google::protobuf::DescriptorProto::extension_range(int) const --> const class google::protobuf::DescriptorProto_ExtensionRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_extension_range", (class google::protobuf::DescriptorProto_ExtensionRange * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_extension_range, "C++: google::protobuf::DescriptorProto::add_extension_range() --> class google::protobuf::DescriptorProto_ExtensionRange *", pybind11::return_value_policy::reference);
		cl.def("extension_range", (const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::extension_range, "C++: google::protobuf::DescriptorProto::extension_range() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ExtensionRange> &", pybind11::return_value_policy::automatic);
		cl.def("extension_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::extension_size, "C++: google::protobuf::DescriptorProto::extension_size() const --> int");
		cl.def("clear_extension", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_extension, "C++: google::protobuf::DescriptorProto::clear_extension() --> void");
		cl.def("mutable_extension", (class google::protobuf::FieldDescriptorProto * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_extension, "C++: google::protobuf::DescriptorProto::mutable_extension(int) --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_extension", (class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_extension, "C++: google::protobuf::DescriptorProto::mutable_extension() --> class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("extension", (const class google::protobuf::FieldDescriptorProto & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::extension, "C++: google::protobuf::DescriptorProto::extension(int) const --> const class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_extension", (class google::protobuf::FieldDescriptorProto * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_extension, "C++: google::protobuf::DescriptorProto::add_extension() --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("extension", (const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::extension, "C++: google::protobuf::DescriptorProto::extension() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::FieldDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("oneof_decl_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::oneof_decl_size, "C++: google::protobuf::DescriptorProto::oneof_decl_size() const --> int");
		cl.def("clear_oneof_decl", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_oneof_decl, "C++: google::protobuf::DescriptorProto::clear_oneof_decl() --> void");
		cl.def("mutable_oneof_decl", (class google::protobuf::OneofDescriptorProto * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_oneof_decl, "C++: google::protobuf::DescriptorProto::mutable_oneof_decl(int) --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_oneof_decl", (class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_oneof_decl, "C++: google::protobuf::DescriptorProto::mutable_oneof_decl() --> class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("oneof_decl", (const class google::protobuf::OneofDescriptorProto & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::oneof_decl, "C++: google::protobuf::DescriptorProto::oneof_decl(int) const --> const class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_oneof_decl", (class google::protobuf::OneofDescriptorProto * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_oneof_decl, "C++: google::protobuf::DescriptorProto::add_oneof_decl() --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("oneof_decl", (const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::oneof_decl, "C++: google::protobuf::DescriptorProto::oneof_decl() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::OneofDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("reserved_range_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::reserved_range_size, "C++: google::protobuf::DescriptorProto::reserved_range_size() const --> int");
		cl.def("clear_reserved_range", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_reserved_range, "C++: google::protobuf::DescriptorProto::clear_reserved_range() --> void");
		cl.def("mutable_reserved_range", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::DescriptorProto::*)(int)) &google::protobuf::DescriptorProto::mutable_reserved_range, "C++: google::protobuf::DescriptorProto::mutable_reserved_range(int) --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_reserved_range", (class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_reserved_range, "C++: google::protobuf::DescriptorProto::mutable_reserved_range() --> class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> *", pybind11::return_value_policy::reference);
		cl.def("reserved_range", (const class google::protobuf::DescriptorProto_ReservedRange & (google::protobuf::DescriptorProto::*)(int) const) &google::protobuf::DescriptorProto::reserved_range, "C++: google::protobuf::DescriptorProto::reserved_range(int) const --> const class google::protobuf::DescriptorProto_ReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_reserved_range", (class google::protobuf::DescriptorProto_ReservedRange * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::add_reserved_range, "C++: google::protobuf::DescriptorProto::add_reserved_range() --> class google::protobuf::DescriptorProto_ReservedRange *", pybind11::return_value_policy::reference);
		cl.def("reserved_range", (const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::reserved_range, "C++: google::protobuf::DescriptorProto::reserved_range() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::DescriptorProto_ReservedRange> &", pybind11::return_value_policy::automatic);
		cl.def("reserved_name_size", (int (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::reserved_name_size, "C++: google::protobuf::DescriptorProto::reserved_name_size() const --> int");
		cl.def("clear_reserved_name", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_reserved_name, "C++: google::protobuf::DescriptorProto::clear_reserved_name() --> void");
		cl.def("set_reserved_name", (void (google::protobuf::DescriptorProto::*)(int, const char *)) &google::protobuf::DescriptorProto::set_reserved_name, "C++: google::protobuf::DescriptorProto::set_reserved_name(int, const char *) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("set_reserved_name", (void (google::protobuf::DescriptorProto::*)(int, const char *, unsigned long)) &google::protobuf::DescriptorProto::set_reserved_name, "C++: google::protobuf::DescriptorProto::set_reserved_name(int, const char *, unsigned long) --> void", pybind11::arg("index"), pybind11::arg("value"), pybind11::arg("size"));
		cl.def("add_reserved_name", (void (google::protobuf::DescriptorProto::*)(const char *)) &google::protobuf::DescriptorProto::add_reserved_name, "C++: google::protobuf::DescriptorProto::add_reserved_name(const char *) --> void", pybind11::arg("value"));
		cl.def("add_reserved_name", (void (google::protobuf::DescriptorProto::*)(const char *, unsigned long)) &google::protobuf::DescriptorProto::add_reserved_name, "C++: google::protobuf::DescriptorProto::add_reserved_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_name", (bool (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::has_name, "C++: google::protobuf::DescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_name, "C++: google::protobuf::DescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::DescriptorProto::*)(const char *)) &google::protobuf::DescriptorProto::set_name, "C++: google::protobuf::DescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::DescriptorProto::*)(const char *, unsigned long)) &google::protobuf::DescriptorProto::set_name, "C++: google::protobuf::DescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::has_options, "C++: google::protobuf::DescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::clear_options, "C++: google::protobuf::DescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::MessageOptions & (google::protobuf::DescriptorProto::*)() const) &google::protobuf::DescriptorProto::options, "C++: google::protobuf::DescriptorProto::options() const --> const class google::protobuf::MessageOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::MessageOptions * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::release_options, "C++: google::protobuf::DescriptorProto::release_options() --> class google::protobuf::MessageOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::MessageOptions * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::mutable_options, "C++: google::protobuf::DescriptorProto::mutable_options() --> class google::protobuf::MessageOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::DescriptorProto::*)(class google::protobuf::MessageOptions *)) &google::protobuf::DescriptorProto::set_allocated_options, "C++: google::protobuf::DescriptorProto::set_allocated_options(class google::protobuf::MessageOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::DescriptorProto::*)(class google::protobuf::MessageOptions *)) &google::protobuf::DescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::DescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::MessageOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::MessageOptions * (google::protobuf::DescriptorProto::*)()) &google::protobuf::DescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::DescriptorProto::unsafe_arena_release_options() --> class google::protobuf::MessageOptions *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/descriptor_pb_3.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_3(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B171_[google::protobuf::ExtensionRangeOptions] ";
	{ // google::protobuf::ExtensionRangeOptions file:google/protobuf/descriptor.pb.h line:1573
		pybind11::class_<google::protobuf::ExtensionRangeOptions, std::shared_ptr<google::protobuf::ExtensionRangeOptions>, google::protobuf::Message> cl(M("google::protobuf"), "ExtensionRangeOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::ExtensionRangeOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::ExtensionRangeOptions const &o){ return new google::protobuf::ExtensionRangeOptions(o); } ) );
		cl.def("assign", (class google::protobuf::ExtensionRangeOptions & (google::protobuf::ExtensionRangeOptions::*)(const class google::protobuf::ExtensionRangeOptions &)) &google::protobuf::ExtensionRangeOptions::operator=, "C++: google::protobuf::ExtensionRangeOptions::operator=(const class google::protobuf::ExtensionRangeOptions &) --> class google::protobuf::ExtensionRangeOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::unknown_fields, "C++: google::protobuf::ExtensionRangeOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::ExtensionRangeOptions::*)()) &google::protobuf::ExtensionRangeOptions::mutable_unknown_fields, "C++: google::protobuf::ExtensionRangeOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ExtensionRangeOptions::descriptor, "C++: google::protobuf::ExtensionRangeOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ExtensionRangeOptions::GetDescriptor, "C++: google::protobuf::ExtensionRangeOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::ExtensionRangeOptions::GetReflection, "C++: google::protobuf::ExtensionRangeOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::ExtensionRangeOptions & (*)()) &google::protobuf::ExtensionRangeOptions::default_instance, "C++: google::protobuf::ExtensionRangeOptions::default_instance() --> const class google::protobuf::ExtensionRangeOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::ExtensionRangeOptions * (*)()) &google::protobuf::ExtensionRangeOptions::internal_default_instance, "C++: google::protobuf::ExtensionRangeOptions::internal_default_instance() --> const class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::ExtensionRangeOptions::*)(class google::protobuf::ExtensionRangeOptions *)) &google::protobuf::ExtensionRangeOptions::Swap, "C++: google::protobuf::ExtensionRangeOptions::Swap(class google::protobuf::ExtensionRangeOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::ExtensionRangeOptions::*)(class google::protobuf::ExtensionRangeOptions *)) &google::protobuf::ExtensionRangeOptions::UnsafeArenaSwap, "C++: google::protobuf::ExtensionRangeOptions::UnsafeArenaSwap(class google::protobuf::ExtensionRangeOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::ExtensionRangeOptions * (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::New, "C++: google::protobuf::ExtensionRangeOptions::New() const --> class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::ExtensionRangeOptions * (google::protobuf::ExtensionRangeOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::ExtensionRangeOptions::New, "C++: google::protobuf::ExtensionRangeOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::ExtensionRangeOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::ExtensionRangeOptions::*)(const class google::protobuf::Message &)) &google::protobuf::ExtensionRangeOptions::CopyFrom, "C++: google::protobuf::ExtensionRangeOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ExtensionRangeOptions::*)(const class google::protobuf::Message &)) &google::protobuf::ExtensionRangeOptions::MergeFrom, "C++: google::protobuf::ExtensionRangeOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::ExtensionRangeOptions::*)(const class google::protobuf::ExtensionRangeOptions &)) &google::protobuf::ExtensionRangeOptions::CopyFrom, "C++: google::protobuf::ExtensionRangeOptions::CopyFrom(const class google::protobuf::ExtensionRangeOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ExtensionRangeOptions::*)(const class google::protobuf::ExtensionRangeOptions &)) &google::protobuf::ExtensionRangeOptions::MergeFrom, "C++: google::protobuf::ExtensionRangeOptions::MergeFrom(const class google::protobuf::ExtensionRangeOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::ExtensionRangeOptions::*)()) &google::protobuf::ExtensionRangeOptions::Clear, "C++: google::protobuf::ExtensionRangeOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::IsInitialized, "C++: google::protobuf::ExtensionRangeOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::ByteSizeLong, "C++: google::protobuf::ExtensionRangeOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::ExtensionRangeOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::ExtensionRangeOptions::_InternalParse, "C++: google::protobuf::ExtensionRangeOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::ExtensionRangeOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::ExtensionRangeOptions::_InternalSerialize, "C++: google::protobuf::ExtensionRangeOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::GetCachedSize, "C++: google::protobuf::ExtensionRangeOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::GetMetadata, "C++: google::protobuf::ExtensionRangeOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::uninterpreted_option_size, "C++: google::protobuf::ExtensionRangeOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::ExtensionRangeOptions::*)()) &google::protobuf::ExtensionRangeOptions::clear_uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::ExtensionRangeOptions::*)(int)) &google::protobuf::ExtensionRangeOptions::mutable_uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::ExtensionRangeOptions::*)()) &google::protobuf::ExtensionRangeOptions::mutable_uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::ExtensionRangeOptions::*)(int) const) &google::protobuf::ExtensionRangeOptions::uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::ExtensionRangeOptions::*)()) &google::protobuf::ExtensionRangeOptions::add_uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::ExtensionRangeOptions::*)() const) &google::protobuf::ExtensionRangeOptions::uninterpreted_option, "C++: google::protobuf::ExtensionRangeOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
	}
	std::cout << "B172_[void google::protobuf::swap(class google::protobuf::ExtensionRangeOptions &, class google::protobuf::ExtensionRangeOptions &)] ";
	std::cout << "B173_[google::protobuf::FieldDescriptorProto] ";
	{ // google::protobuf::FieldDescriptorProto file:google/protobuf/descriptor.pb.h line:1729
		pybind11::class_<google::protobuf::FieldDescriptorProto, std::shared_ptr<google::protobuf::FieldDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "FieldDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::FieldDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::FieldDescriptorProto const &o){ return new google::protobuf::FieldDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::FieldDescriptorProto & (google::protobuf::FieldDescriptorProto::*)(const class google::protobuf::FieldDescriptorProto &)) &google::protobuf::FieldDescriptorProto::operator=, "C++: google::protobuf::FieldDescriptorProto::operator=(const class google::protobuf::FieldDescriptorProto &) --> class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::unknown_fields, "C++: google::protobuf::FieldDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::FieldDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FieldDescriptorProto::descriptor, "C++: google::protobuf::FieldDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FieldDescriptorProto::GetDescriptor, "C++: google::protobuf::FieldDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::FieldDescriptorProto::GetReflection, "C++: google::protobuf::FieldDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::FieldDescriptorProto & (*)()) &google::protobuf::FieldDescriptorProto::default_instance, "C++: google::protobuf::FieldDescriptorProto::default_instance() --> const class google::protobuf::FieldDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::FieldDescriptorProto * (*)()) &google::protobuf::FieldDescriptorProto::internal_default_instance, "C++: google::protobuf::FieldDescriptorProto::internal_default_instance() --> const class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::FieldDescriptorProto::*)(class google::protobuf::FieldDescriptorProto *)) &google::protobuf::FieldDescriptorProto::Swap, "C++: google::protobuf::FieldDescriptorProto::Swap(class google::protobuf::FieldDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::FieldDescriptorProto::*)(class google::protobuf::FieldDescriptorProto *)) &google::protobuf::FieldDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::FieldDescriptorProto::UnsafeArenaSwap(class google::protobuf::FieldDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::FieldDescriptorProto * (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::New, "C++: google::protobuf::FieldDescriptorProto::New() const --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::FieldDescriptorProto * (google::protobuf::FieldDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::FieldDescriptorProto::New, "C++: google::protobuf::FieldDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::FieldDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::FieldDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::FieldDescriptorProto::CopyFrom, "C++: google::protobuf::FieldDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FieldDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::FieldDescriptorProto::MergeFrom, "C++: google::protobuf::FieldDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::FieldDescriptorProto::*)(const class google::protobuf::FieldDescriptorProto &)) &google::protobuf::FieldDescriptorProto::CopyFrom, "C++: google::protobuf::FieldDescriptorProto::CopyFrom(const class google::protobuf::FieldDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FieldDescriptorProto::*)(const class google::protobuf::FieldDescriptorProto &)) &google::protobuf::FieldDescriptorProto::MergeFrom, "C++: google::protobuf::FieldDescriptorProto::MergeFrom(const class google::protobuf::FieldDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::Clear, "C++: google::protobuf::FieldDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::IsInitialized, "C++: google::protobuf::FieldDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::ByteSizeLong, "C++: google::protobuf::FieldDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::FieldDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::FieldDescriptorProto::_InternalParse, "C++: google::protobuf::FieldDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::FieldDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::FieldDescriptorProto::_InternalSerialize, "C++: google::protobuf::FieldDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::GetCachedSize, "C++: google::protobuf::FieldDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::GetMetadata, "C++: google::protobuf::FieldDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &google::protobuf::FieldDescriptorProto::Type_IsValid, "C++: google::protobuf::FieldDescriptorProto::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::FieldDescriptorProto::Type_descriptor, "C++: google::protobuf::FieldDescriptorProto::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum google::protobuf::FieldDescriptorProto_Type *)) &google::protobuf::FieldDescriptorProto::Type_Parse, "C++: google::protobuf::FieldDescriptorProto::Type_Parse(const std::string &, enum google::protobuf::FieldDescriptorProto_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Label_IsValid", (bool (*)(int)) &google::protobuf::FieldDescriptorProto::Label_IsValid, "C++: google::protobuf::FieldDescriptorProto::Label_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Label_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::FieldDescriptorProto::Label_descriptor, "C++: google::protobuf::FieldDescriptorProto::Label_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Label_Parse", (bool (*)(const std::string &, enum google::protobuf::FieldDescriptorProto_Label *)) &google::protobuf::FieldDescriptorProto::Label_Parse, "C++: google::protobuf::FieldDescriptorProto::Label_Parse(const std::string &, enum google::protobuf::FieldDescriptorProto_Label *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("has_name", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_name, "C++: google::protobuf::FieldDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_name, "C++: google::protobuf::FieldDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *)) &google::protobuf::FieldDescriptorProto::set_name, "C++: google::protobuf::FieldDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FieldDescriptorProto::set_name, "C++: google::protobuf::FieldDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_extendee", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_extendee, "C++: google::protobuf::FieldDescriptorProto::has_extendee() const --> bool");
		cl.def("clear_extendee", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_extendee, "C++: google::protobuf::FieldDescriptorProto::clear_extendee() --> void");
		cl.def("set_extendee", (void (google::protobuf::FieldDescriptorProto::*)(const char *)) &google::protobuf::FieldDescriptorProto::set_extendee, "C++: google::protobuf::FieldDescriptorProto::set_extendee(const char *) --> void", pybind11::arg("value"));
		cl.def("set_extendee", (void (google::protobuf::FieldDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FieldDescriptorProto::set_extendee, "C++: google::protobuf::FieldDescriptorProto::set_extendee(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_type_name", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_type_name, "C++: google::protobuf::FieldDescriptorProto::has_type_name() const --> bool");
		cl.def("clear_type_name", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_type_name, "C++: google::protobuf::FieldDescriptorProto::clear_type_name() --> void");
		cl.def("set_type_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *)) &google::protobuf::FieldDescriptorProto::set_type_name, "C++: google::protobuf::FieldDescriptorProto::set_type_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_type_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FieldDescriptorProto::set_type_name, "C++: google::protobuf::FieldDescriptorProto::set_type_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_default_value", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_default_value, "C++: google::protobuf::FieldDescriptorProto::has_default_value() const --> bool");
		cl.def("clear_default_value", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_default_value, "C++: google::protobuf::FieldDescriptorProto::clear_default_value() --> void");
		cl.def("set_default_value", (void (google::protobuf::FieldDescriptorProto::*)(const char *)) &google::protobuf::FieldDescriptorProto::set_default_value, "C++: google::protobuf::FieldDescriptorProto::set_default_value(const char *) --> void", pybind11::arg("value"));
		cl.def("set_default_value", (void (google::protobuf::FieldDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FieldDescriptorProto::set_default_value, "C++: google::protobuf::FieldDescriptorProto::set_default_value(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_json_name", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_json_name, "C++: google::protobuf::FieldDescriptorProto::has_json_name() const --> bool");
		cl.def("clear_json_name", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_json_name, "C++: google::protobuf::FieldDescriptorProto::clear_json_name() --> void");
		cl.def("set_json_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *)) &google::protobuf::FieldDescriptorProto::set_json_name, "C++: google::protobuf::FieldDescriptorProto::set_json_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_json_name", (void (google::protobuf::FieldDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::FieldDescriptorProto::set_json_name, "C++: google::protobuf::FieldDescriptorProto::set_json_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_options, "C++: google::protobuf::FieldDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_options, "C++: google::protobuf::FieldDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::FieldOptions & (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::options, "C++: google::protobuf::FieldDescriptorProto::options() const --> const class google::protobuf::FieldOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::FieldOptions * (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::release_options, "C++: google::protobuf::FieldDescriptorProto::release_options() --> class google::protobuf::FieldOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::FieldOptions * (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::mutable_options, "C++: google::protobuf::FieldDescriptorProto::mutable_options() --> class google::protobuf::FieldOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::FieldDescriptorProto::*)(class google::protobuf::FieldOptions *)) &google::protobuf::FieldDescriptorProto::set_allocated_options, "C++: google::protobuf::FieldDescriptorProto::set_allocated_options(class google::protobuf::FieldOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::FieldDescriptorProto::*)(class google::protobuf::FieldOptions *)) &google::protobuf::FieldDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::FieldDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::FieldOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::FieldOptions * (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::FieldDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::FieldOptions *", pybind11::return_value_policy::reference);
		cl.def("has_number", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_number, "C++: google::protobuf::FieldDescriptorProto::has_number() const --> bool");
		cl.def("clear_number", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_number, "C++: google::protobuf::FieldDescriptorProto::clear_number() --> void");
		cl.def("number", (int (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::number, "C++: google::protobuf::FieldDescriptorProto::number() const --> int");
		cl.def("set_number", (void (google::protobuf::FieldDescriptorProto::*)(int)) &google::protobuf::FieldDescriptorProto::set_number, "C++: google::protobuf::FieldDescriptorProto::set_number(int) --> void", pybind11::arg("value"));
		cl.def("has_oneof_index", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_oneof_index, "C++: google::protobuf::FieldDescriptorProto::has_oneof_index() const --> bool");
		cl.def("clear_oneof_index", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_oneof_index, "C++: google::protobuf::FieldDescriptorProto::clear_oneof_index() --> void");
		cl.def("oneof_index", (int (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::oneof_index, "C++: google::protobuf::FieldDescriptorProto::oneof_index() const --> int");
		cl.def("set_oneof_index", (void (google::protobuf::FieldDescriptorProto::*)(int)) &google::protobuf::FieldDescriptorProto::set_oneof_index, "C++: google::protobuf::FieldDescriptorProto::set_oneof_index(int) --> void", pybind11::arg("value"));
		cl.def("has_proto3_optional", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_proto3_optional, "C++: google::protobuf::FieldDescriptorProto::has_proto3_optional() const --> bool");
		cl.def("clear_proto3_optional", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_proto3_optional, "C++: google::protobuf::FieldDescriptorProto::clear_proto3_optional() --> void");
		cl.def("proto3_optional", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::proto3_optional, "C++: google::protobuf::FieldDescriptorProto::proto3_optional() const --> bool");
		cl.def("set_proto3_optional", (void (google::protobuf::FieldDescriptorProto::*)(bool)) &google::protobuf::FieldDescriptorProto::set_proto3_optional, "C++: google::protobuf::FieldDescriptorProto::set_proto3_optional(bool) --> void", pybind11::arg("value"));
		cl.def("has_label", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_label, "C++: google::protobuf::FieldDescriptorProto::has_label() const --> bool");
		cl.def("clear_label", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_label, "C++: google::protobuf::FieldDescriptorProto::clear_label() --> void");
		cl.def("label", (enum google::protobuf::FieldDescriptorProto_Label (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::label, "C++: google::protobuf::FieldDescriptorProto::label() const --> enum google::protobuf::FieldDescriptorProto_Label");
		cl.def("set_label", (void (google::protobuf::FieldDescriptorProto::*)(enum google::protobuf::FieldDescriptorProto_Label)) &google::protobuf::FieldDescriptorProto::set_label, "C++: google::protobuf::FieldDescriptorProto::set_label(enum google::protobuf::FieldDescriptorProto_Label) --> void", pybind11::arg("value"));
		cl.def("has_type", (bool (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::has_type, "C++: google::protobuf::FieldDescriptorProto::has_type() const --> bool");
		cl.def("clear_type", (void (google::protobuf::FieldDescriptorProto::*)()) &google::protobuf::FieldDescriptorProto::clear_type, "C++: google::protobuf::FieldDescriptorProto::clear_type() --> void");
		cl.def("type", (enum google::protobuf::FieldDescriptorProto_Type (google::protobuf::FieldDescriptorProto::*)() const) &google::protobuf::FieldDescriptorProto::type, "C++: google::protobuf::FieldDescriptorProto::type() const --> enum google::protobuf::FieldDescriptorProto_Type");
		cl.def("set_type", (void (google::protobuf::FieldDescriptorProto::*)(enum google::protobuf::FieldDescriptorProto_Type)) &google::protobuf::FieldDescriptorProto::set_type, "C++: google::protobuf::FieldDescriptorProto::set_type(enum google::protobuf::FieldDescriptorProto_Type) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_4.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_4(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B174_[google::protobuf::OneofDescriptorProto] ";
	{ // google::protobuf::OneofDescriptorProto file:google/protobuf/descriptor.pb.h line:2162
		pybind11::class_<google::protobuf::OneofDescriptorProto, std::shared_ptr<google::protobuf::OneofDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "OneofDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::OneofDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::OneofDescriptorProto const &o){ return new google::protobuf::OneofDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::OneofDescriptorProto & (google::protobuf::OneofDescriptorProto::*)(const class google::protobuf::OneofDescriptorProto &)) &google::protobuf::OneofDescriptorProto::operator=, "C++: google::protobuf::OneofDescriptorProto::operator=(const class google::protobuf::OneofDescriptorProto &) --> class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::unknown_fields, "C++: google::protobuf::OneofDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::OneofDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::OneofDescriptorProto::descriptor, "C++: google::protobuf::OneofDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::OneofDescriptorProto::GetDescriptor, "C++: google::protobuf::OneofDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::OneofDescriptorProto::GetReflection, "C++: google::protobuf::OneofDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::OneofDescriptorProto & (*)()) &google::protobuf::OneofDescriptorProto::default_instance, "C++: google::protobuf::OneofDescriptorProto::default_instance() --> const class google::protobuf::OneofDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::OneofDescriptorProto * (*)()) &google::protobuf::OneofDescriptorProto::internal_default_instance, "C++: google::protobuf::OneofDescriptorProto::internal_default_instance() --> const class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::OneofDescriptorProto::*)(class google::protobuf::OneofDescriptorProto *)) &google::protobuf::OneofDescriptorProto::Swap, "C++: google::protobuf::OneofDescriptorProto::Swap(class google::protobuf::OneofDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::OneofDescriptorProto::*)(class google::protobuf::OneofDescriptorProto *)) &google::protobuf::OneofDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::OneofDescriptorProto::UnsafeArenaSwap(class google::protobuf::OneofDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::OneofDescriptorProto * (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::New, "C++: google::protobuf::OneofDescriptorProto::New() const --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::OneofDescriptorProto * (google::protobuf::OneofDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::OneofDescriptorProto::New, "C++: google::protobuf::OneofDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::OneofDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::OneofDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::OneofDescriptorProto::CopyFrom, "C++: google::protobuf::OneofDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::OneofDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::OneofDescriptorProto::MergeFrom, "C++: google::protobuf::OneofDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::OneofDescriptorProto::*)(const class google::protobuf::OneofDescriptorProto &)) &google::protobuf::OneofDescriptorProto::CopyFrom, "C++: google::protobuf::OneofDescriptorProto::CopyFrom(const class google::protobuf::OneofDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::OneofDescriptorProto::*)(const class google::protobuf::OneofDescriptorProto &)) &google::protobuf::OneofDescriptorProto::MergeFrom, "C++: google::protobuf::OneofDescriptorProto::MergeFrom(const class google::protobuf::OneofDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::Clear, "C++: google::protobuf::OneofDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::IsInitialized, "C++: google::protobuf::OneofDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::ByteSizeLong, "C++: google::protobuf::OneofDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::OneofDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::OneofDescriptorProto::_InternalParse, "C++: google::protobuf::OneofDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::OneofDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::OneofDescriptorProto::_InternalSerialize, "C++: google::protobuf::OneofDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::GetCachedSize, "C++: google::protobuf::OneofDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::GetMetadata, "C++: google::protobuf::OneofDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_name", (bool (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::has_name, "C++: google::protobuf::OneofDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::clear_name, "C++: google::protobuf::OneofDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::OneofDescriptorProto::*)(const char *)) &google::protobuf::OneofDescriptorProto::set_name, "C++: google::protobuf::OneofDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::OneofDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::OneofDescriptorProto::set_name, "C++: google::protobuf::OneofDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::has_options, "C++: google::protobuf::OneofDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::clear_options, "C++: google::protobuf::OneofDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::OneofOptions & (google::protobuf::OneofDescriptorProto::*)() const) &google::protobuf::OneofDescriptorProto::options, "C++: google::protobuf::OneofDescriptorProto::options() const --> const class google::protobuf::OneofOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::OneofOptions * (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::release_options, "C++: google::protobuf::OneofDescriptorProto::release_options() --> class google::protobuf::OneofOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::OneofOptions * (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::mutable_options, "C++: google::protobuf::OneofDescriptorProto::mutable_options() --> class google::protobuf::OneofOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::OneofDescriptorProto::*)(class google::protobuf::OneofOptions *)) &google::protobuf::OneofDescriptorProto::set_allocated_options, "C++: google::protobuf::OneofDescriptorProto::set_allocated_options(class google::protobuf::OneofOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::OneofDescriptorProto::*)(class google::protobuf::OneofOptions *)) &google::protobuf::OneofDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::OneofDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::OneofOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::OneofOptions * (google::protobuf::OneofDescriptorProto::*)()) &google::protobuf::OneofDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::OneofDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::OneofOptions *", pybind11::return_value_policy::reference);
	}
	std::cout << "B175_[void google::protobuf::swap(class google::protobuf::OneofDescriptorProto &, class google::protobuf::OneofDescriptorProto &)] ";
	std::cout << "B176_[google::protobuf::EnumDescriptorProto_EnumReservedRange] ";
	{ // google::protobuf::EnumDescriptorProto_EnumReservedRange file:google/protobuf/descriptor.pb.h line:2338
		pybind11::class_<google::protobuf::EnumDescriptorProto_EnumReservedRange, std::shared_ptr<google::protobuf::EnumDescriptorProto_EnumReservedRange>, google::protobuf::Message> cl(M("google::protobuf"), "EnumDescriptorProto_EnumReservedRange", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::EnumDescriptorProto_EnumReservedRange(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::EnumDescriptorProto_EnumReservedRange const &o){ return new google::protobuf::EnumDescriptorProto_EnumReservedRange(o); } ) );
		cl.def("assign", (class google::protobuf::EnumDescriptorProto_EnumReservedRange & (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::operator=, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::operator=(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &) --> class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::unknown_fields, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::mutable_unknown_fields, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::descriptor, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::GetDescriptor, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::GetReflection, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::EnumDescriptorProto_EnumReservedRange & (*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::default_instance, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::default_instance() --> const class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::EnumDescriptorProto_EnumReservedRange * (*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::internal_default_instance, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::internal_default_instance() --> const class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(class google::protobuf::EnumDescriptorProto_EnumReservedRange *)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::Swap, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::Swap(class google::protobuf::EnumDescriptorProto_EnumReservedRange *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(class google::protobuf::EnumDescriptorProto_EnumReservedRange *)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::UnsafeArenaSwap, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::UnsafeArenaSwap(class google::protobuf::EnumDescriptorProto_EnumReservedRange *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::New, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::New() const --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(class google::protobuf::Arena *) const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::New, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::New(class google::protobuf::Arena *) const --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const class google::protobuf::Message &)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const class google::protobuf::Message &)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(const class google::protobuf::EnumDescriptorProto_EnumReservedRange &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::GetCachedSize, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_start", (bool (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::has_start, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::has_start() const --> bool");
		cl.def("clear_start", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::clear_start, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::clear_start() --> void");
		cl.def("start", (int (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::start, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::start() const --> int");
		cl.def("set_start", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(int)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::set_start, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::set_start(int) --> void", pybind11::arg("value"));
		cl.def("has_end", (bool (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::has_end, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::has_end() const --> bool");
		cl.def("clear_end", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)()) &google::protobuf::EnumDescriptorProto_EnumReservedRange::clear_end, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::clear_end() --> void");
		cl.def("end", (int (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)() const) &google::protobuf::EnumDescriptorProto_EnumReservedRange::end, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::end() const --> int");
		cl.def("set_end", (void (google::protobuf::EnumDescriptorProto_EnumReservedRange::*)(int)) &google::protobuf::EnumDescriptorProto_EnumReservedRange::set_end, "C++: google::protobuf::EnumDescriptorProto_EnumReservedRange::set_end(int) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_5.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_5(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B177_[google::protobuf::EnumDescriptorProto] ";
	{ // google::protobuf::EnumDescriptorProto file:google/protobuf/descriptor.pb.h line:2502
		pybind11::class_<google::protobuf::EnumDescriptorProto, std::shared_ptr<google::protobuf::EnumDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "EnumDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::EnumDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::EnumDescriptorProto const &o){ return new google::protobuf::EnumDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::EnumDescriptorProto & (google::protobuf::EnumDescriptorProto::*)(const class google::protobuf::EnumDescriptorProto &)) &google::protobuf::EnumDescriptorProto::operator=, "C++: google::protobuf::EnumDescriptorProto::operator=(const class google::protobuf::EnumDescriptorProto &) --> class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::unknown_fields, "C++: google::protobuf::EnumDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::EnumDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumDescriptorProto::descriptor, "C++: google::protobuf::EnumDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumDescriptorProto::GetDescriptor, "C++: google::protobuf::EnumDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::EnumDescriptorProto::GetReflection, "C++: google::protobuf::EnumDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::EnumDescriptorProto & (*)()) &google::protobuf::EnumDescriptorProto::default_instance, "C++: google::protobuf::EnumDescriptorProto::default_instance() --> const class google::protobuf::EnumDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::EnumDescriptorProto * (*)()) &google::protobuf::EnumDescriptorProto::internal_default_instance, "C++: google::protobuf::EnumDescriptorProto::internal_default_instance() --> const class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::EnumDescriptorProto::*)(class google::protobuf::EnumDescriptorProto *)) &google::protobuf::EnumDescriptorProto::Swap, "C++: google::protobuf::EnumDescriptorProto::Swap(class google::protobuf::EnumDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::EnumDescriptorProto::*)(class google::protobuf::EnumDescriptorProto *)) &google::protobuf::EnumDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::EnumDescriptorProto::UnsafeArenaSwap(class google::protobuf::EnumDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::EnumDescriptorProto * (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::New, "C++: google::protobuf::EnumDescriptorProto::New() const --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::EnumDescriptorProto * (google::protobuf::EnumDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::EnumDescriptorProto::New, "C++: google::protobuf::EnumDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::EnumDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::EnumDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::EnumDescriptorProto::CopyFrom, "C++: google::protobuf::EnumDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::EnumDescriptorProto::MergeFrom, "C++: google::protobuf::EnumDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::EnumDescriptorProto::*)(const class google::protobuf::EnumDescriptorProto &)) &google::protobuf::EnumDescriptorProto::CopyFrom, "C++: google::protobuf::EnumDescriptorProto::CopyFrom(const class google::protobuf::EnumDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumDescriptorProto::*)(const class google::protobuf::EnumDescriptorProto &)) &google::protobuf::EnumDescriptorProto::MergeFrom, "C++: google::protobuf::EnumDescriptorProto::MergeFrom(const class google::protobuf::EnumDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::Clear, "C++: google::protobuf::EnumDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::IsInitialized, "C++: google::protobuf::EnumDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::ByteSizeLong, "C++: google::protobuf::EnumDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::EnumDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::EnumDescriptorProto::_InternalParse, "C++: google::protobuf::EnumDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::EnumDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::EnumDescriptorProto::_InternalSerialize, "C++: google::protobuf::EnumDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::GetCachedSize, "C++: google::protobuf::EnumDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::GetMetadata, "C++: google::protobuf::EnumDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("value_size", (int (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::value_size, "C++: google::protobuf::EnumDescriptorProto::value_size() const --> int");
		cl.def("clear_value", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::clear_value, "C++: google::protobuf::EnumDescriptorProto::clear_value() --> void");
		cl.def("mutable_value", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::EnumDescriptorProto::*)(int)) &google::protobuf::EnumDescriptorProto::mutable_value, "C++: google::protobuf::EnumDescriptorProto::mutable_value(int) --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_value", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::mutable_value, "C++: google::protobuf::EnumDescriptorProto::mutable_value() --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("value", (const class google::protobuf::EnumValueDescriptorProto & (google::protobuf::EnumDescriptorProto::*)(int) const) &google::protobuf::EnumDescriptorProto::value, "C++: google::protobuf::EnumDescriptorProto::value(int) const --> const class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_value", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::add_value, "C++: google::protobuf::EnumDescriptorProto::add_value() --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("value", (const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> & (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::value, "C++: google::protobuf::EnumDescriptorProto::value() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumValueDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("reserved_range_size", (int (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::reserved_range_size, "C++: google::protobuf::EnumDescriptorProto::reserved_range_size() const --> int");
		cl.def("clear_reserved_range", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::clear_reserved_range, "C++: google::protobuf::EnumDescriptorProto::clear_reserved_range() --> void");
		cl.def("mutable_reserved_range", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::EnumDescriptorProto::*)(int)) &google::protobuf::EnumDescriptorProto::mutable_reserved_range, "C++: google::protobuf::EnumDescriptorProto::mutable_reserved_range(int) --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_reserved_range", (class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::mutable_reserved_range, "C++: google::protobuf::EnumDescriptorProto::mutable_reserved_range() --> class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> *", pybind11::return_value_policy::reference);
		cl.def("reserved_range", (const class google::protobuf::EnumDescriptorProto_EnumReservedRange & (google::protobuf::EnumDescriptorProto::*)(int) const) &google::protobuf::EnumDescriptorProto::reserved_range, "C++: google::protobuf::EnumDescriptorProto::reserved_range(int) const --> const class google::protobuf::EnumDescriptorProto_EnumReservedRange &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_reserved_range", (class google::protobuf::EnumDescriptorProto_EnumReservedRange * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::add_reserved_range, "C++: google::protobuf::EnumDescriptorProto::add_reserved_range() --> class google::protobuf::EnumDescriptorProto_EnumReservedRange *", pybind11::return_value_policy::reference);
		cl.def("reserved_range", (const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> & (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::reserved_range, "C++: google::protobuf::EnumDescriptorProto::reserved_range() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::EnumDescriptorProto_EnumReservedRange> &", pybind11::return_value_policy::automatic);
		cl.def("reserved_name_size", (int (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::reserved_name_size, "C++: google::protobuf::EnumDescriptorProto::reserved_name_size() const --> int");
		cl.def("clear_reserved_name", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::clear_reserved_name, "C++: google::protobuf::EnumDescriptorProto::clear_reserved_name() --> void");
		cl.def("set_reserved_name", (void (google::protobuf::EnumDescriptorProto::*)(int, const char *)) &google::protobuf::EnumDescriptorProto::set_reserved_name, "C++: google::protobuf::EnumDescriptorProto::set_reserved_name(int, const char *) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("set_reserved_name", (void (google::protobuf::EnumDescriptorProto::*)(int, const char *, unsigned long)) &google::protobuf::EnumDescriptorProto::set_reserved_name, "C++: google::protobuf::EnumDescriptorProto::set_reserved_name(int, const char *, unsigned long) --> void", pybind11::arg("index"), pybind11::arg("value"), pybind11::arg("size"));
		cl.def("add_reserved_name", (void (google::protobuf::EnumDescriptorProto::*)(const char *)) &google::protobuf::EnumDescriptorProto::add_reserved_name, "C++: google::protobuf::EnumDescriptorProto::add_reserved_name(const char *) --> void", pybind11::arg("value"));
		cl.def("add_reserved_name", (void (google::protobuf::EnumDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::EnumDescriptorProto::add_reserved_name, "C++: google::protobuf::EnumDescriptorProto::add_reserved_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_name", (bool (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::has_name, "C++: google::protobuf::EnumDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::clear_name, "C++: google::protobuf::EnumDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::EnumDescriptorProto::*)(const char *)) &google::protobuf::EnumDescriptorProto::set_name, "C++: google::protobuf::EnumDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::EnumDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::EnumDescriptorProto::set_name, "C++: google::protobuf::EnumDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::has_options, "C++: google::protobuf::EnumDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::clear_options, "C++: google::protobuf::EnumDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::EnumOptions & (google::protobuf::EnumDescriptorProto::*)() const) &google::protobuf::EnumDescriptorProto::options, "C++: google::protobuf::EnumDescriptorProto::options() const --> const class google::protobuf::EnumOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::EnumOptions * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::release_options, "C++: google::protobuf::EnumDescriptorProto::release_options() --> class google::protobuf::EnumOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::EnumOptions * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::mutable_options, "C++: google::protobuf::EnumDescriptorProto::mutable_options() --> class google::protobuf::EnumOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::EnumDescriptorProto::*)(class google::protobuf::EnumOptions *)) &google::protobuf::EnumDescriptorProto::set_allocated_options, "C++: google::protobuf::EnumDescriptorProto::set_allocated_options(class google::protobuf::EnumOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::EnumDescriptorProto::*)(class google::protobuf::EnumOptions *)) &google::protobuf::EnumDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::EnumDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::EnumOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::EnumOptions * (google::protobuf::EnumDescriptorProto::*)()) &google::protobuf::EnumDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::EnumDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::EnumOptions *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/descriptor_pb_6.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_6(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B178_[google::protobuf::EnumValueDescriptorProto] ";
	{ // google::protobuf::EnumValueDescriptorProto file:google/protobuf/descriptor.pb.h line:2746
		pybind11::class_<google::protobuf::EnumValueDescriptorProto, std::shared_ptr<google::protobuf::EnumValueDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "EnumValueDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::EnumValueDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::EnumValueDescriptorProto const &o){ return new google::protobuf::EnumValueDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::EnumValueDescriptorProto & (google::protobuf::EnumValueDescriptorProto::*)(const class google::protobuf::EnumValueDescriptorProto &)) &google::protobuf::EnumValueDescriptorProto::operator=, "C++: google::protobuf::EnumValueDescriptorProto::operator=(const class google::protobuf::EnumValueDescriptorProto &) --> class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::unknown_fields, "C++: google::protobuf::EnumValueDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::EnumValueDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumValueDescriptorProto::descriptor, "C++: google::protobuf::EnumValueDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumValueDescriptorProto::GetDescriptor, "C++: google::protobuf::EnumValueDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::EnumValueDescriptorProto::GetReflection, "C++: google::protobuf::EnumValueDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::EnumValueDescriptorProto & (*)()) &google::protobuf::EnumValueDescriptorProto::default_instance, "C++: google::protobuf::EnumValueDescriptorProto::default_instance() --> const class google::protobuf::EnumValueDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::EnumValueDescriptorProto * (*)()) &google::protobuf::EnumValueDescriptorProto::internal_default_instance, "C++: google::protobuf::EnumValueDescriptorProto::internal_default_instance() --> const class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::EnumValueDescriptorProto::*)(class google::protobuf::EnumValueDescriptorProto *)) &google::protobuf::EnumValueDescriptorProto::Swap, "C++: google::protobuf::EnumValueDescriptorProto::Swap(class google::protobuf::EnumValueDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::EnumValueDescriptorProto::*)(class google::protobuf::EnumValueDescriptorProto *)) &google::protobuf::EnumValueDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::EnumValueDescriptorProto::UnsafeArenaSwap(class google::protobuf::EnumValueDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::New, "C++: google::protobuf::EnumValueDescriptorProto::New() const --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::EnumValueDescriptorProto * (google::protobuf::EnumValueDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::EnumValueDescriptorProto::New, "C++: google::protobuf::EnumValueDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::EnumValueDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::EnumValueDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::EnumValueDescriptorProto::CopyFrom, "C++: google::protobuf::EnumValueDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumValueDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::EnumValueDescriptorProto::MergeFrom, "C++: google::protobuf::EnumValueDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::EnumValueDescriptorProto::*)(const class google::protobuf::EnumValueDescriptorProto &)) &google::protobuf::EnumValueDescriptorProto::CopyFrom, "C++: google::protobuf::EnumValueDescriptorProto::CopyFrom(const class google::protobuf::EnumValueDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumValueDescriptorProto::*)(const class google::protobuf::EnumValueDescriptorProto &)) &google::protobuf::EnumValueDescriptorProto::MergeFrom, "C++: google::protobuf::EnumValueDescriptorProto::MergeFrom(const class google::protobuf::EnumValueDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::Clear, "C++: google::protobuf::EnumValueDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::IsInitialized, "C++: google::protobuf::EnumValueDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::ByteSizeLong, "C++: google::protobuf::EnumValueDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::EnumValueDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::EnumValueDescriptorProto::_InternalParse, "C++: google::protobuf::EnumValueDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::EnumValueDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::EnumValueDescriptorProto::_InternalSerialize, "C++: google::protobuf::EnumValueDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::GetCachedSize, "C++: google::protobuf::EnumValueDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::GetMetadata, "C++: google::protobuf::EnumValueDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_name", (bool (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::has_name, "C++: google::protobuf::EnumValueDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::clear_name, "C++: google::protobuf::EnumValueDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::EnumValueDescriptorProto::*)(const char *)) &google::protobuf::EnumValueDescriptorProto::set_name, "C++: google::protobuf::EnumValueDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::EnumValueDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::EnumValueDescriptorProto::set_name, "C++: google::protobuf::EnumValueDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::has_options, "C++: google::protobuf::EnumValueDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::clear_options, "C++: google::protobuf::EnumValueDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::EnumValueOptions & (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::options, "C++: google::protobuf::EnumValueDescriptorProto::options() const --> const class google::protobuf::EnumValueOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::EnumValueOptions * (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::release_options, "C++: google::protobuf::EnumValueDescriptorProto::release_options() --> class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::EnumValueOptions * (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::mutable_options, "C++: google::protobuf::EnumValueDescriptorProto::mutable_options() --> class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::EnumValueDescriptorProto::*)(class google::protobuf::EnumValueOptions *)) &google::protobuf::EnumValueDescriptorProto::set_allocated_options, "C++: google::protobuf::EnumValueDescriptorProto::set_allocated_options(class google::protobuf::EnumValueOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::EnumValueDescriptorProto::*)(class google::protobuf::EnumValueOptions *)) &google::protobuf::EnumValueDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::EnumValueDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::EnumValueOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::EnumValueOptions * (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::EnumValueDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::reference);
		cl.def("has_number", (bool (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::has_number, "C++: google::protobuf::EnumValueDescriptorProto::has_number() const --> bool");
		cl.def("clear_number", (void (google::protobuf::EnumValueDescriptorProto::*)()) &google::protobuf::EnumValueDescriptorProto::clear_number, "C++: google::protobuf::EnumValueDescriptorProto::clear_number() --> void");
		cl.def("number", (int (google::protobuf::EnumValueDescriptorProto::*)() const) &google::protobuf::EnumValueDescriptorProto::number, "C++: google::protobuf::EnumValueDescriptorProto::number() const --> int");
		cl.def("set_number", (void (google::protobuf::EnumValueDescriptorProto::*)(int)) &google::protobuf::EnumValueDescriptorProto::set_number, "C++: google::protobuf::EnumValueDescriptorProto::set_number(int) --> void", pybind11::arg("value"));
	}
	std::cout << "B179_[void google::protobuf::swap(class google::protobuf::EnumValueDescriptorProto &, class google::protobuf::EnumValueDescriptorProto &)] ";
	std::cout << "B180_[google::protobuf::ServiceDescriptorProto] ";
	{ // google::protobuf::ServiceDescriptorProto file:google/protobuf/descriptor.pb.h line:2937
		pybind11::class_<google::protobuf::ServiceDescriptorProto, std::shared_ptr<google::protobuf::ServiceDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "ServiceDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::ServiceDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::ServiceDescriptorProto const &o){ return new google::protobuf::ServiceDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::ServiceDescriptorProto & (google::protobuf::ServiceDescriptorProto::*)(const class google::protobuf::ServiceDescriptorProto &)) &google::protobuf::ServiceDescriptorProto::operator=, "C++: google::protobuf::ServiceDescriptorProto::operator=(const class google::protobuf::ServiceDescriptorProto &) --> class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::unknown_fields, "C++: google::protobuf::ServiceDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::ServiceDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ServiceDescriptorProto::descriptor, "C++: google::protobuf::ServiceDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ServiceDescriptorProto::GetDescriptor, "C++: google::protobuf::ServiceDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::ServiceDescriptorProto::GetReflection, "C++: google::protobuf::ServiceDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::ServiceDescriptorProto & (*)()) &google::protobuf::ServiceDescriptorProto::default_instance, "C++: google::protobuf::ServiceDescriptorProto::default_instance() --> const class google::protobuf::ServiceDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::ServiceDescriptorProto * (*)()) &google::protobuf::ServiceDescriptorProto::internal_default_instance, "C++: google::protobuf::ServiceDescriptorProto::internal_default_instance() --> const class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::ServiceDescriptorProto::*)(class google::protobuf::ServiceDescriptorProto *)) &google::protobuf::ServiceDescriptorProto::Swap, "C++: google::protobuf::ServiceDescriptorProto::Swap(class google::protobuf::ServiceDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::ServiceDescriptorProto::*)(class google::protobuf::ServiceDescriptorProto *)) &google::protobuf::ServiceDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::ServiceDescriptorProto::UnsafeArenaSwap(class google::protobuf::ServiceDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::New, "C++: google::protobuf::ServiceDescriptorProto::New() const --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::ServiceDescriptorProto * (google::protobuf::ServiceDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::ServiceDescriptorProto::New, "C++: google::protobuf::ServiceDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::ServiceDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::ServiceDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::ServiceDescriptorProto::CopyFrom, "C++: google::protobuf::ServiceDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ServiceDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::ServiceDescriptorProto::MergeFrom, "C++: google::protobuf::ServiceDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::ServiceDescriptorProto::*)(const class google::protobuf::ServiceDescriptorProto &)) &google::protobuf::ServiceDescriptorProto::CopyFrom, "C++: google::protobuf::ServiceDescriptorProto::CopyFrom(const class google::protobuf::ServiceDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ServiceDescriptorProto::*)(const class google::protobuf::ServiceDescriptorProto &)) &google::protobuf::ServiceDescriptorProto::MergeFrom, "C++: google::protobuf::ServiceDescriptorProto::MergeFrom(const class google::protobuf::ServiceDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::Clear, "C++: google::protobuf::ServiceDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::IsInitialized, "C++: google::protobuf::ServiceDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::ByteSizeLong, "C++: google::protobuf::ServiceDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::ServiceDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::ServiceDescriptorProto::_InternalParse, "C++: google::protobuf::ServiceDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::ServiceDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::ServiceDescriptorProto::_InternalSerialize, "C++: google::protobuf::ServiceDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::GetCachedSize, "C++: google::protobuf::ServiceDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::GetMetadata, "C++: google::protobuf::ServiceDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("method_size", (int (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::method_size, "C++: google::protobuf::ServiceDescriptorProto::method_size() const --> int");
		cl.def("clear_method", (void (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::clear_method, "C++: google::protobuf::ServiceDescriptorProto::clear_method() --> void");
		cl.def("mutable_method", (class google::protobuf::MethodDescriptorProto * (google::protobuf::ServiceDescriptorProto::*)(int)) &google::protobuf::ServiceDescriptorProto::mutable_method, "C++: google::protobuf::ServiceDescriptorProto::mutable_method(int) --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_method", (class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::mutable_method, "C++: google::protobuf::ServiceDescriptorProto::mutable_method() --> class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> *", pybind11::return_value_policy::reference);
		cl.def("method", (const class google::protobuf::MethodDescriptorProto & (google::protobuf::ServiceDescriptorProto::*)(int) const) &google::protobuf::ServiceDescriptorProto::method, "C++: google::protobuf::ServiceDescriptorProto::method(int) const --> const class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_method", (class google::protobuf::MethodDescriptorProto * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::add_method, "C++: google::protobuf::ServiceDescriptorProto::add_method() --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("method", (const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> & (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::method, "C++: google::protobuf::ServiceDescriptorProto::method() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::MethodDescriptorProto> &", pybind11::return_value_policy::automatic);
		cl.def("has_name", (bool (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::has_name, "C++: google::protobuf::ServiceDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::clear_name, "C++: google::protobuf::ServiceDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::ServiceDescriptorProto::*)(const char *)) &google::protobuf::ServiceDescriptorProto::set_name, "C++: google::protobuf::ServiceDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::ServiceDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::ServiceDescriptorProto::set_name, "C++: google::protobuf::ServiceDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::has_options, "C++: google::protobuf::ServiceDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::clear_options, "C++: google::protobuf::ServiceDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::ServiceOptions & (google::protobuf::ServiceDescriptorProto::*)() const) &google::protobuf::ServiceDescriptorProto::options, "C++: google::protobuf::ServiceDescriptorProto::options() const --> const class google::protobuf::ServiceOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::ServiceOptions * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::release_options, "C++: google::protobuf::ServiceDescriptorProto::release_options() --> class google::protobuf::ServiceOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::ServiceOptions * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::mutable_options, "C++: google::protobuf::ServiceDescriptorProto::mutable_options() --> class google::protobuf::ServiceOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::ServiceDescriptorProto::*)(class google::protobuf::ServiceOptions *)) &google::protobuf::ServiceDescriptorProto::set_allocated_options, "C++: google::protobuf::ServiceDescriptorProto::set_allocated_options(class google::protobuf::ServiceOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::ServiceDescriptorProto::*)(class google::protobuf::ServiceOptions *)) &google::protobuf::ServiceDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::ServiceDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::ServiceOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::ServiceOptions * (google::protobuf::ServiceDescriptorProto::*)()) &google::protobuf::ServiceDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::ServiceDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::ServiceOptions *", pybind11::return_value_policy::reference);
	}
}


// File: google/protobuf/descriptor_pb_7.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_7(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B181_[google::protobuf::MethodDescriptorProto] ";
	{ // google::protobuf::MethodDescriptorProto file:google/protobuf/descriptor.pb.h line:3133
		pybind11::class_<google::protobuf::MethodDescriptorProto, std::shared_ptr<google::protobuf::MethodDescriptorProto>, google::protobuf::Message> cl(M("google::protobuf"), "MethodDescriptorProto", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::MethodDescriptorProto(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::MethodDescriptorProto const &o){ return new google::protobuf::MethodDescriptorProto(o); } ) );
		cl.def("assign", (class google::protobuf::MethodDescriptorProto & (google::protobuf::MethodDescriptorProto::*)(const class google::protobuf::MethodDescriptorProto &)) &google::protobuf::MethodDescriptorProto::operator=, "C++: google::protobuf::MethodDescriptorProto::operator=(const class google::protobuf::MethodDescriptorProto &) --> class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::unknown_fields, "C++: google::protobuf::MethodDescriptorProto::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::mutable_unknown_fields, "C++: google::protobuf::MethodDescriptorProto::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MethodDescriptorProto::descriptor, "C++: google::protobuf::MethodDescriptorProto::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MethodDescriptorProto::GetDescriptor, "C++: google::protobuf::MethodDescriptorProto::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::MethodDescriptorProto::GetReflection, "C++: google::protobuf::MethodDescriptorProto::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::MethodDescriptorProto & (*)()) &google::protobuf::MethodDescriptorProto::default_instance, "C++: google::protobuf::MethodDescriptorProto::default_instance() --> const class google::protobuf::MethodDescriptorProto &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::MethodDescriptorProto * (*)()) &google::protobuf::MethodDescriptorProto::internal_default_instance, "C++: google::protobuf::MethodDescriptorProto::internal_default_instance() --> const class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::MethodDescriptorProto::*)(class google::protobuf::MethodDescriptorProto *)) &google::protobuf::MethodDescriptorProto::Swap, "C++: google::protobuf::MethodDescriptorProto::Swap(class google::protobuf::MethodDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::MethodDescriptorProto::*)(class google::protobuf::MethodDescriptorProto *)) &google::protobuf::MethodDescriptorProto::UnsafeArenaSwap, "C++: google::protobuf::MethodDescriptorProto::UnsafeArenaSwap(class google::protobuf::MethodDescriptorProto *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::MethodDescriptorProto * (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::New, "C++: google::protobuf::MethodDescriptorProto::New() const --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::MethodDescriptorProto * (google::protobuf::MethodDescriptorProto::*)(class google::protobuf::Arena *) const) &google::protobuf::MethodDescriptorProto::New, "C++: google::protobuf::MethodDescriptorProto::New(class google::protobuf::Arena *) const --> class google::protobuf::MethodDescriptorProto *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::MethodDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::MethodDescriptorProto::CopyFrom, "C++: google::protobuf::MethodDescriptorProto::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MethodDescriptorProto::*)(const class google::protobuf::Message &)) &google::protobuf::MethodDescriptorProto::MergeFrom, "C++: google::protobuf::MethodDescriptorProto::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::MethodDescriptorProto::*)(const class google::protobuf::MethodDescriptorProto &)) &google::protobuf::MethodDescriptorProto::CopyFrom, "C++: google::protobuf::MethodDescriptorProto::CopyFrom(const class google::protobuf::MethodDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MethodDescriptorProto::*)(const class google::protobuf::MethodDescriptorProto &)) &google::protobuf::MethodDescriptorProto::MergeFrom, "C++: google::protobuf::MethodDescriptorProto::MergeFrom(const class google::protobuf::MethodDescriptorProto &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::Clear, "C++: google::protobuf::MethodDescriptorProto::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::IsInitialized, "C++: google::protobuf::MethodDescriptorProto::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::ByteSizeLong, "C++: google::protobuf::MethodDescriptorProto::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::MethodDescriptorProto::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::MethodDescriptorProto::_InternalParse, "C++: google::protobuf::MethodDescriptorProto::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::MethodDescriptorProto::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::MethodDescriptorProto::_InternalSerialize, "C++: google::protobuf::MethodDescriptorProto::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::GetCachedSize, "C++: google::protobuf::MethodDescriptorProto::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::GetMetadata, "C++: google::protobuf::MethodDescriptorProto::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_name", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_name, "C++: google::protobuf::MethodDescriptorProto::has_name() const --> bool");
		cl.def("clear_name", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_name, "C++: google::protobuf::MethodDescriptorProto::clear_name() --> void");
		cl.def("set_name", (void (google::protobuf::MethodDescriptorProto::*)(const char *)) &google::protobuf::MethodDescriptorProto::set_name, "C++: google::protobuf::MethodDescriptorProto::set_name(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name", (void (google::protobuf::MethodDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::MethodDescriptorProto::set_name, "C++: google::protobuf::MethodDescriptorProto::set_name(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_input_type", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_input_type, "C++: google::protobuf::MethodDescriptorProto::has_input_type() const --> bool");
		cl.def("clear_input_type", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_input_type, "C++: google::protobuf::MethodDescriptorProto::clear_input_type() --> void");
		cl.def("set_input_type", (void (google::protobuf::MethodDescriptorProto::*)(const char *)) &google::protobuf::MethodDescriptorProto::set_input_type, "C++: google::protobuf::MethodDescriptorProto::set_input_type(const char *) --> void", pybind11::arg("value"));
		cl.def("set_input_type", (void (google::protobuf::MethodDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::MethodDescriptorProto::set_input_type, "C++: google::protobuf::MethodDescriptorProto::set_input_type(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_output_type", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_output_type, "C++: google::protobuf::MethodDescriptorProto::has_output_type() const --> bool");
		cl.def("clear_output_type", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_output_type, "C++: google::protobuf::MethodDescriptorProto::clear_output_type() --> void");
		cl.def("set_output_type", (void (google::protobuf::MethodDescriptorProto::*)(const char *)) &google::protobuf::MethodDescriptorProto::set_output_type, "C++: google::protobuf::MethodDescriptorProto::set_output_type(const char *) --> void", pybind11::arg("value"));
		cl.def("set_output_type", (void (google::protobuf::MethodDescriptorProto::*)(const char *, unsigned long)) &google::protobuf::MethodDescriptorProto::set_output_type, "C++: google::protobuf::MethodDescriptorProto::set_output_type(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_options", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_options, "C++: google::protobuf::MethodDescriptorProto::has_options() const --> bool");
		cl.def("clear_options", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_options, "C++: google::protobuf::MethodDescriptorProto::clear_options() --> void");
		cl.def("options", (const class google::protobuf::MethodOptions & (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::options, "C++: google::protobuf::MethodDescriptorProto::options() const --> const class google::protobuf::MethodOptions &", pybind11::return_value_policy::automatic);
		cl.def("release_options", (class google::protobuf::MethodOptions * (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::release_options, "C++: google::protobuf::MethodDescriptorProto::release_options() --> class google::protobuf::MethodOptions *", pybind11::return_value_policy::reference);
		cl.def("mutable_options", (class google::protobuf::MethodOptions * (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::mutable_options, "C++: google::protobuf::MethodDescriptorProto::mutable_options() --> class google::protobuf::MethodOptions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_options", (void (google::protobuf::MethodDescriptorProto::*)(class google::protobuf::MethodOptions *)) &google::protobuf::MethodDescriptorProto::set_allocated_options, "C++: google::protobuf::MethodDescriptorProto::set_allocated_options(class google::protobuf::MethodOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_set_allocated_options", (void (google::protobuf::MethodDescriptorProto::*)(class google::protobuf::MethodOptions *)) &google::protobuf::MethodDescriptorProto::unsafe_arena_set_allocated_options, "C++: google::protobuf::MethodDescriptorProto::unsafe_arena_set_allocated_options(class google::protobuf::MethodOptions *) --> void", pybind11::arg("options"));
		cl.def("unsafe_arena_release_options", (class google::protobuf::MethodOptions * (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::unsafe_arena_release_options, "C++: google::protobuf::MethodDescriptorProto::unsafe_arena_release_options() --> class google::protobuf::MethodOptions *", pybind11::return_value_policy::reference);
		cl.def("has_client_streaming", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_client_streaming, "C++: google::protobuf::MethodDescriptorProto::has_client_streaming() const --> bool");
		cl.def("clear_client_streaming", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_client_streaming, "C++: google::protobuf::MethodDescriptorProto::clear_client_streaming() --> void");
		cl.def("client_streaming", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::client_streaming, "C++: google::protobuf::MethodDescriptorProto::client_streaming() const --> bool");
		cl.def("set_client_streaming", (void (google::protobuf::MethodDescriptorProto::*)(bool)) &google::protobuf::MethodDescriptorProto::set_client_streaming, "C++: google::protobuf::MethodDescriptorProto::set_client_streaming(bool) --> void", pybind11::arg("value"));
		cl.def("has_server_streaming", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::has_server_streaming, "C++: google::protobuf::MethodDescriptorProto::has_server_streaming() const --> bool");
		cl.def("clear_server_streaming", (void (google::protobuf::MethodDescriptorProto::*)()) &google::protobuf::MethodDescriptorProto::clear_server_streaming, "C++: google::protobuf::MethodDescriptorProto::clear_server_streaming() --> void");
		cl.def("server_streaming", (bool (google::protobuf::MethodDescriptorProto::*)() const) &google::protobuf::MethodDescriptorProto::server_streaming, "C++: google::protobuf::MethodDescriptorProto::server_streaming() const --> bool");
		cl.def("set_server_streaming", (void (google::protobuf::MethodDescriptorProto::*)(bool)) &google::protobuf::MethodDescriptorProto::set_server_streaming, "C++: google::protobuf::MethodDescriptorProto::set_server_streaming(bool) --> void", pybind11::arg("value"));
	}
	std::cout << "B182_[void google::protobuf::swap(class google::protobuf::MethodDescriptorProto &, class google::protobuf::MethodDescriptorProto &)] ";
	std::cout << "B183_[google::protobuf::FileOptions] ";
	{ // google::protobuf::FileOptions file:google/protobuf/descriptor.pb.h line:3383
		pybind11::class_<google::protobuf::FileOptions, std::shared_ptr<google::protobuf::FileOptions>, google::protobuf::Message> cl(M("google::protobuf"), "FileOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::FileOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::FileOptions const &o){ return new google::protobuf::FileOptions(o); } ) );
		cl.def("assign", (class google::protobuf::FileOptions & (google::protobuf::FileOptions::*)(const class google::protobuf::FileOptions &)) &google::protobuf::FileOptions::operator=, "C++: google::protobuf::FileOptions::operator=(const class google::protobuf::FileOptions &) --> class google::protobuf::FileOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::unknown_fields, "C++: google::protobuf::FileOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::mutable_unknown_fields, "C++: google::protobuf::FileOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FileOptions::descriptor, "C++: google::protobuf::FileOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FileOptions::GetDescriptor, "C++: google::protobuf::FileOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::FileOptions::GetReflection, "C++: google::protobuf::FileOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::FileOptions & (*)()) &google::protobuf::FileOptions::default_instance, "C++: google::protobuf::FileOptions::default_instance() --> const class google::protobuf::FileOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::FileOptions * (*)()) &google::protobuf::FileOptions::internal_default_instance, "C++: google::protobuf::FileOptions::internal_default_instance() --> const class google::protobuf::FileOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::FileOptions::*)(class google::protobuf::FileOptions *)) &google::protobuf::FileOptions::Swap, "C++: google::protobuf::FileOptions::Swap(class google::protobuf::FileOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::FileOptions::*)(class google::protobuf::FileOptions *)) &google::protobuf::FileOptions::UnsafeArenaSwap, "C++: google::protobuf::FileOptions::UnsafeArenaSwap(class google::protobuf::FileOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::FileOptions * (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::New, "C++: google::protobuf::FileOptions::New() const --> class google::protobuf::FileOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::FileOptions * (google::protobuf::FileOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::FileOptions::New, "C++: google::protobuf::FileOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::FileOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::FileOptions::*)(const class google::protobuf::Message &)) &google::protobuf::FileOptions::CopyFrom, "C++: google::protobuf::FileOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FileOptions::*)(const class google::protobuf::Message &)) &google::protobuf::FileOptions::MergeFrom, "C++: google::protobuf::FileOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::FileOptions::*)(const class google::protobuf::FileOptions &)) &google::protobuf::FileOptions::CopyFrom, "C++: google::protobuf::FileOptions::CopyFrom(const class google::protobuf::FileOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FileOptions::*)(const class google::protobuf::FileOptions &)) &google::protobuf::FileOptions::MergeFrom, "C++: google::protobuf::FileOptions::MergeFrom(const class google::protobuf::FileOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::Clear, "C++: google::protobuf::FileOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::IsInitialized, "C++: google::protobuf::FileOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::ByteSizeLong, "C++: google::protobuf::FileOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::FileOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::FileOptions::_InternalParse, "C++: google::protobuf::FileOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::FileOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::FileOptions::_InternalSerialize, "C++: google::protobuf::FileOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::GetCachedSize, "C++: google::protobuf::FileOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::GetMetadata, "C++: google::protobuf::FileOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("OptimizeMode_IsValid", (bool (*)(int)) &google::protobuf::FileOptions::OptimizeMode_IsValid, "C++: google::protobuf::FileOptions::OptimizeMode_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("OptimizeMode_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::FileOptions::OptimizeMode_descriptor, "C++: google::protobuf::FileOptions::OptimizeMode_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("OptimizeMode_Parse", (bool (*)(const std::string &, enum google::protobuf::FileOptions_OptimizeMode *)) &google::protobuf::FileOptions::OptimizeMode_Parse, "C++: google::protobuf::FileOptions::OptimizeMode_Parse(const std::string &, enum google::protobuf::FileOptions_OptimizeMode *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("uninterpreted_option_size", (int (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::uninterpreted_option_size, "C++: google::protobuf::FileOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_uninterpreted_option, "C++: google::protobuf::FileOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::FileOptions::*)(int)) &google::protobuf::FileOptions::mutable_uninterpreted_option, "C++: google::protobuf::FileOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::mutable_uninterpreted_option, "C++: google::protobuf::FileOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::FileOptions::*)(int) const) &google::protobuf::FileOptions::uninterpreted_option, "C++: google::protobuf::FileOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::add_uninterpreted_option, "C++: google::protobuf::FileOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::uninterpreted_option, "C++: google::protobuf::FileOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_java_package", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_package, "C++: google::protobuf::FileOptions::has_java_package() const --> bool");
		cl.def("clear_java_package", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_package, "C++: google::protobuf::FileOptions::clear_java_package() --> void");
		cl.def("set_java_package", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_java_package, "C++: google::protobuf::FileOptions::set_java_package(const char *) --> void", pybind11::arg("value"));
		cl.def("set_java_package", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_java_package, "C++: google::protobuf::FileOptions::set_java_package(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_java_outer_classname", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_outer_classname, "C++: google::protobuf::FileOptions::has_java_outer_classname() const --> bool");
		cl.def("clear_java_outer_classname", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_outer_classname, "C++: google::protobuf::FileOptions::clear_java_outer_classname() --> void");
		cl.def("set_java_outer_classname", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_java_outer_classname, "C++: google::protobuf::FileOptions::set_java_outer_classname(const char *) --> void", pybind11::arg("value"));
		cl.def("set_java_outer_classname", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_java_outer_classname, "C++: google::protobuf::FileOptions::set_java_outer_classname(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_go_package", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_go_package, "C++: google::protobuf::FileOptions::has_go_package() const --> bool");
		cl.def("clear_go_package", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_go_package, "C++: google::protobuf::FileOptions::clear_go_package() --> void");
		cl.def("set_go_package", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_go_package, "C++: google::protobuf::FileOptions::set_go_package(const char *) --> void", pybind11::arg("value"));
		cl.def("set_go_package", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_go_package, "C++: google::protobuf::FileOptions::set_go_package(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_objc_class_prefix", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_objc_class_prefix, "C++: google::protobuf::FileOptions::has_objc_class_prefix() const --> bool");
		cl.def("clear_objc_class_prefix", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_objc_class_prefix, "C++: google::protobuf::FileOptions::clear_objc_class_prefix() --> void");
		cl.def("set_objc_class_prefix", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_objc_class_prefix, "C++: google::protobuf::FileOptions::set_objc_class_prefix(const char *) --> void", pybind11::arg("value"));
		cl.def("set_objc_class_prefix", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_objc_class_prefix, "C++: google::protobuf::FileOptions::set_objc_class_prefix(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_csharp_namespace", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_csharp_namespace, "C++: google::protobuf::FileOptions::has_csharp_namespace() const --> bool");
		cl.def("clear_csharp_namespace", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_csharp_namespace, "C++: google::protobuf::FileOptions::clear_csharp_namespace() --> void");
		cl.def("set_csharp_namespace", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_csharp_namespace, "C++: google::protobuf::FileOptions::set_csharp_namespace(const char *) --> void", pybind11::arg("value"));
		cl.def("set_csharp_namespace", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_csharp_namespace, "C++: google::protobuf::FileOptions::set_csharp_namespace(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_swift_prefix", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_swift_prefix, "C++: google::protobuf::FileOptions::has_swift_prefix() const --> bool");
		cl.def("clear_swift_prefix", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_swift_prefix, "C++: google::protobuf::FileOptions::clear_swift_prefix() --> void");
		cl.def("set_swift_prefix", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_swift_prefix, "C++: google::protobuf::FileOptions::set_swift_prefix(const char *) --> void", pybind11::arg("value"));
		cl.def("set_swift_prefix", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_swift_prefix, "C++: google::protobuf::FileOptions::set_swift_prefix(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_php_class_prefix", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_php_class_prefix, "C++: google::protobuf::FileOptions::has_php_class_prefix() const --> bool");
		cl.def("clear_php_class_prefix", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_php_class_prefix, "C++: google::protobuf::FileOptions::clear_php_class_prefix() --> void");
		cl.def("set_php_class_prefix", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_php_class_prefix, "C++: google::protobuf::FileOptions::set_php_class_prefix(const char *) --> void", pybind11::arg("value"));
		cl.def("set_php_class_prefix", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_php_class_prefix, "C++: google::protobuf::FileOptions::set_php_class_prefix(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_php_namespace", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_php_namespace, "C++: google::protobuf::FileOptions::has_php_namespace() const --> bool");
		cl.def("clear_php_namespace", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_php_namespace, "C++: google::protobuf::FileOptions::clear_php_namespace() --> void");
		cl.def("set_php_namespace", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_php_namespace, "C++: google::protobuf::FileOptions::set_php_namespace(const char *) --> void", pybind11::arg("value"));
		cl.def("set_php_namespace", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_php_namespace, "C++: google::protobuf::FileOptions::set_php_namespace(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_php_metadata_namespace", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_php_metadata_namespace, "C++: google::protobuf::FileOptions::has_php_metadata_namespace() const --> bool");
		cl.def("clear_php_metadata_namespace", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_php_metadata_namespace, "C++: google::protobuf::FileOptions::clear_php_metadata_namespace() --> void");
		cl.def("set_php_metadata_namespace", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_php_metadata_namespace, "C++: google::protobuf::FileOptions::set_php_metadata_namespace(const char *) --> void", pybind11::arg("value"));
		cl.def("set_php_metadata_namespace", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_php_metadata_namespace, "C++: google::protobuf::FileOptions::set_php_metadata_namespace(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_ruby_package", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_ruby_package, "C++: google::protobuf::FileOptions::has_ruby_package() const --> bool");
		cl.def("clear_ruby_package", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_ruby_package, "C++: google::protobuf::FileOptions::clear_ruby_package() --> void");
		cl.def("set_ruby_package", (void (google::protobuf::FileOptions::*)(const char *)) &google::protobuf::FileOptions::set_ruby_package, "C++: google::protobuf::FileOptions::set_ruby_package(const char *) --> void", pybind11::arg("value"));
		cl.def("set_ruby_package", (void (google::protobuf::FileOptions::*)(const char *, unsigned long)) &google::protobuf::FileOptions::set_ruby_package, "C++: google::protobuf::FileOptions::set_ruby_package(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_java_multiple_files", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_multiple_files, "C++: google::protobuf::FileOptions::has_java_multiple_files() const --> bool");
		cl.def("clear_java_multiple_files", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_multiple_files, "C++: google::protobuf::FileOptions::clear_java_multiple_files() --> void");
		cl.def("java_multiple_files", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::java_multiple_files, "C++: google::protobuf::FileOptions::java_multiple_files() const --> bool");
		cl.def("set_java_multiple_files", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_java_multiple_files, "C++: google::protobuf::FileOptions::set_java_multiple_files(bool) --> void", pybind11::arg("value"));
		cl.def("has_java_generate_equals_and_hash", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_generate_equals_and_hash, "C++: google::protobuf::FileOptions::has_java_generate_equals_and_hash() const --> bool");
		cl.def("clear_java_generate_equals_and_hash", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_generate_equals_and_hash, "C++: google::protobuf::FileOptions::clear_java_generate_equals_and_hash() --> void");
		cl.def("java_generate_equals_and_hash", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::java_generate_equals_and_hash, "C++: google::protobuf::FileOptions::java_generate_equals_and_hash() const --> bool");
		cl.def("set_java_generate_equals_and_hash", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_java_generate_equals_and_hash, "C++: google::protobuf::FileOptions::set_java_generate_equals_and_hash(bool) --> void", pybind11::arg("value"));
		cl.def("has_java_string_check_utf8", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_string_check_utf8, "C++: google::protobuf::FileOptions::has_java_string_check_utf8() const --> bool");
		cl.def("clear_java_string_check_utf8", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_string_check_utf8, "C++: google::protobuf::FileOptions::clear_java_string_check_utf8() --> void");
		cl.def("java_string_check_utf8", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::java_string_check_utf8, "C++: google::protobuf::FileOptions::java_string_check_utf8() const --> bool");
		cl.def("set_java_string_check_utf8", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_java_string_check_utf8, "C++: google::protobuf::FileOptions::set_java_string_check_utf8(bool) --> void", pybind11::arg("value"));
		cl.def("has_cc_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_cc_generic_services, "C++: google::protobuf::FileOptions::has_cc_generic_services() const --> bool");
		cl.def("clear_cc_generic_services", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_cc_generic_services, "C++: google::protobuf::FileOptions::clear_cc_generic_services() --> void");
		cl.def("cc_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::cc_generic_services, "C++: google::protobuf::FileOptions::cc_generic_services() const --> bool");
		cl.def("set_cc_generic_services", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_cc_generic_services, "C++: google::protobuf::FileOptions::set_cc_generic_services(bool) --> void", pybind11::arg("value"));
		cl.def("has_java_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_java_generic_services, "C++: google::protobuf::FileOptions::has_java_generic_services() const --> bool");
		cl.def("clear_java_generic_services", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_java_generic_services, "C++: google::protobuf::FileOptions::clear_java_generic_services() --> void");
		cl.def("java_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::java_generic_services, "C++: google::protobuf::FileOptions::java_generic_services() const --> bool");
		cl.def("set_java_generic_services", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_java_generic_services, "C++: google::protobuf::FileOptions::set_java_generic_services(bool) --> void", pybind11::arg("value"));
		cl.def("has_py_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_py_generic_services, "C++: google::protobuf::FileOptions::has_py_generic_services() const --> bool");
		cl.def("clear_py_generic_services", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_py_generic_services, "C++: google::protobuf::FileOptions::clear_py_generic_services() --> void");
		cl.def("py_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::py_generic_services, "C++: google::protobuf::FileOptions::py_generic_services() const --> bool");
		cl.def("set_py_generic_services", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_py_generic_services, "C++: google::protobuf::FileOptions::set_py_generic_services(bool) --> void", pybind11::arg("value"));
		cl.def("has_php_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_php_generic_services, "C++: google::protobuf::FileOptions::has_php_generic_services() const --> bool");
		cl.def("clear_php_generic_services", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_php_generic_services, "C++: google::protobuf::FileOptions::clear_php_generic_services() --> void");
		cl.def("php_generic_services", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::php_generic_services, "C++: google::protobuf::FileOptions::php_generic_services() const --> bool");
		cl.def("set_php_generic_services", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_php_generic_services, "C++: google::protobuf::FileOptions::set_php_generic_services(bool) --> void", pybind11::arg("value"));
		cl.def("has_deprecated", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_deprecated, "C++: google::protobuf::FileOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_deprecated, "C++: google::protobuf::FileOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::deprecated, "C++: google::protobuf::FileOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_deprecated, "C++: google::protobuf::FileOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
		cl.def("has_optimize_for", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_optimize_for, "C++: google::protobuf::FileOptions::has_optimize_for() const --> bool");
		cl.def("clear_optimize_for", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_optimize_for, "C++: google::protobuf::FileOptions::clear_optimize_for() --> void");
		cl.def("optimize_for", (enum google::protobuf::FileOptions_OptimizeMode (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::optimize_for, "C++: google::protobuf::FileOptions::optimize_for() const --> enum google::protobuf::FileOptions_OptimizeMode");
		cl.def("set_optimize_for", (void (google::protobuf::FileOptions::*)(enum google::protobuf::FileOptions_OptimizeMode)) &google::protobuf::FileOptions::set_optimize_for, "C++: google::protobuf::FileOptions::set_optimize_for(enum google::protobuf::FileOptions_OptimizeMode) --> void", pybind11::arg("value"));
		cl.def("has_cc_enable_arenas", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::has_cc_enable_arenas, "C++: google::protobuf::FileOptions::has_cc_enable_arenas() const --> bool");
		cl.def("clear_cc_enable_arenas", (void (google::protobuf::FileOptions::*)()) &google::protobuf::FileOptions::clear_cc_enable_arenas, "C++: google::protobuf::FileOptions::clear_cc_enable_arenas() --> void");
		cl.def("cc_enable_arenas", (bool (google::protobuf::FileOptions::*)() const) &google::protobuf::FileOptions::cc_enable_arenas, "C++: google::protobuf::FileOptions::cc_enable_arenas() const --> bool");
		cl.def("set_cc_enable_arenas", (void (google::protobuf::FileOptions::*)(bool)) &google::protobuf::FileOptions::set_cc_enable_arenas, "C++: google::protobuf::FileOptions::set_cc_enable_arenas(bool) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_8.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_8(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B184_[google::protobuf::MessageOptions] ";
	{ // google::protobuf::MessageOptions file:google/protobuf/descriptor.pb.h line:3942
		pybind11::class_<google::protobuf::MessageOptions, std::shared_ptr<google::protobuf::MessageOptions>, google::protobuf::Message> cl(M("google::protobuf"), "MessageOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::MessageOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::MessageOptions const &o){ return new google::protobuf::MessageOptions(o); } ) );
		cl.def("assign", (class google::protobuf::MessageOptions & (google::protobuf::MessageOptions::*)(const class google::protobuf::MessageOptions &)) &google::protobuf::MessageOptions::operator=, "C++: google::protobuf::MessageOptions::operator=(const class google::protobuf::MessageOptions &) --> class google::protobuf::MessageOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::unknown_fields, "C++: google::protobuf::MessageOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::mutable_unknown_fields, "C++: google::protobuf::MessageOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MessageOptions::descriptor, "C++: google::protobuf::MessageOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MessageOptions::GetDescriptor, "C++: google::protobuf::MessageOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::MessageOptions::GetReflection, "C++: google::protobuf::MessageOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::MessageOptions & (*)()) &google::protobuf::MessageOptions::default_instance, "C++: google::protobuf::MessageOptions::default_instance() --> const class google::protobuf::MessageOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::MessageOptions * (*)()) &google::protobuf::MessageOptions::internal_default_instance, "C++: google::protobuf::MessageOptions::internal_default_instance() --> const class google::protobuf::MessageOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::MessageOptions::*)(class google::protobuf::MessageOptions *)) &google::protobuf::MessageOptions::Swap, "C++: google::protobuf::MessageOptions::Swap(class google::protobuf::MessageOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::MessageOptions::*)(class google::protobuf::MessageOptions *)) &google::protobuf::MessageOptions::UnsafeArenaSwap, "C++: google::protobuf::MessageOptions::UnsafeArenaSwap(class google::protobuf::MessageOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::MessageOptions * (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::New, "C++: google::protobuf::MessageOptions::New() const --> class google::protobuf::MessageOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::MessageOptions * (google::protobuf::MessageOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::MessageOptions::New, "C++: google::protobuf::MessageOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::MessageOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::MessageOptions::*)(const class google::protobuf::Message &)) &google::protobuf::MessageOptions::CopyFrom, "C++: google::protobuf::MessageOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MessageOptions::*)(const class google::protobuf::Message &)) &google::protobuf::MessageOptions::MergeFrom, "C++: google::protobuf::MessageOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::MessageOptions::*)(const class google::protobuf::MessageOptions &)) &google::protobuf::MessageOptions::CopyFrom, "C++: google::protobuf::MessageOptions::CopyFrom(const class google::protobuf::MessageOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MessageOptions::*)(const class google::protobuf::MessageOptions &)) &google::protobuf::MessageOptions::MergeFrom, "C++: google::protobuf::MessageOptions::MergeFrom(const class google::protobuf::MessageOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::Clear, "C++: google::protobuf::MessageOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::IsInitialized, "C++: google::protobuf::MessageOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::ByteSizeLong, "C++: google::protobuf::MessageOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::MessageOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::MessageOptions::_InternalParse, "C++: google::protobuf::MessageOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::MessageOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::MessageOptions::_InternalSerialize, "C++: google::protobuf::MessageOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::GetCachedSize, "C++: google::protobuf::MessageOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::GetMetadata, "C++: google::protobuf::MessageOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::uninterpreted_option_size, "C++: google::protobuf::MessageOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::clear_uninterpreted_option, "C++: google::protobuf::MessageOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::MessageOptions::*)(int)) &google::protobuf::MessageOptions::mutable_uninterpreted_option, "C++: google::protobuf::MessageOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::mutable_uninterpreted_option, "C++: google::protobuf::MessageOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::MessageOptions::*)(int) const) &google::protobuf::MessageOptions::uninterpreted_option, "C++: google::protobuf::MessageOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::add_uninterpreted_option, "C++: google::protobuf::MessageOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::uninterpreted_option, "C++: google::protobuf::MessageOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_message_set_wire_format", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::has_message_set_wire_format, "C++: google::protobuf::MessageOptions::has_message_set_wire_format() const --> bool");
		cl.def("clear_message_set_wire_format", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::clear_message_set_wire_format, "C++: google::protobuf::MessageOptions::clear_message_set_wire_format() --> void");
		cl.def("message_set_wire_format", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::message_set_wire_format, "C++: google::protobuf::MessageOptions::message_set_wire_format() const --> bool");
		cl.def("set_message_set_wire_format", (void (google::protobuf::MessageOptions::*)(bool)) &google::protobuf::MessageOptions::set_message_set_wire_format, "C++: google::protobuf::MessageOptions::set_message_set_wire_format(bool) --> void", pybind11::arg("value"));
		cl.def("has_no_standard_descriptor_accessor", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::has_no_standard_descriptor_accessor, "C++: google::protobuf::MessageOptions::has_no_standard_descriptor_accessor() const --> bool");
		cl.def("clear_no_standard_descriptor_accessor", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::clear_no_standard_descriptor_accessor, "C++: google::protobuf::MessageOptions::clear_no_standard_descriptor_accessor() --> void");
		cl.def("no_standard_descriptor_accessor", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::no_standard_descriptor_accessor, "C++: google::protobuf::MessageOptions::no_standard_descriptor_accessor() const --> bool");
		cl.def("set_no_standard_descriptor_accessor", (void (google::protobuf::MessageOptions::*)(bool)) &google::protobuf::MessageOptions::set_no_standard_descriptor_accessor, "C++: google::protobuf::MessageOptions::set_no_standard_descriptor_accessor(bool) --> void", pybind11::arg("value"));
		cl.def("has_deprecated", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::has_deprecated, "C++: google::protobuf::MessageOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::clear_deprecated, "C++: google::protobuf::MessageOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::deprecated, "C++: google::protobuf::MessageOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::MessageOptions::*)(bool)) &google::protobuf::MessageOptions::set_deprecated, "C++: google::protobuf::MessageOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
		cl.def("has_map_entry", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::has_map_entry, "C++: google::protobuf::MessageOptions::has_map_entry() const --> bool");
		cl.def("clear_map_entry", (void (google::protobuf::MessageOptions::*)()) &google::protobuf::MessageOptions::clear_map_entry, "C++: google::protobuf::MessageOptions::clear_map_entry() --> void");
		cl.def("map_entry", (bool (google::protobuf::MessageOptions::*)() const) &google::protobuf::MessageOptions::map_entry, "C++: google::protobuf::MessageOptions::map_entry() const --> bool");
		cl.def("set_map_entry", (void (google::protobuf::MessageOptions::*)(bool)) &google::protobuf::MessageOptions::set_map_entry, "C++: google::protobuf::MessageOptions::set_map_entry(bool) --> void", pybind11::arg("value"));
	}
	std::cout << "B185_[void google::protobuf::swap(class google::protobuf::MessageOptions &, class google::protobuf::MessageOptions &)] ";
	std::cout << "B186_[google::protobuf::FieldOptions] ";
	{ // google::protobuf::FieldOptions file:google/protobuf/descriptor.pb.h line:4159
		pybind11::class_<google::protobuf::FieldOptions, std::shared_ptr<google::protobuf::FieldOptions>, google::protobuf::Message> cl(M("google::protobuf"), "FieldOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::FieldOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::FieldOptions const &o){ return new google::protobuf::FieldOptions(o); } ) );
		cl.def("assign", (class google::protobuf::FieldOptions & (google::protobuf::FieldOptions::*)(const class google::protobuf::FieldOptions &)) &google::protobuf::FieldOptions::operator=, "C++: google::protobuf::FieldOptions::operator=(const class google::protobuf::FieldOptions &) --> class google::protobuf::FieldOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::unknown_fields, "C++: google::protobuf::FieldOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::mutable_unknown_fields, "C++: google::protobuf::FieldOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FieldOptions::descriptor, "C++: google::protobuf::FieldOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::FieldOptions::GetDescriptor, "C++: google::protobuf::FieldOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::FieldOptions::GetReflection, "C++: google::protobuf::FieldOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::FieldOptions & (*)()) &google::protobuf::FieldOptions::default_instance, "C++: google::protobuf::FieldOptions::default_instance() --> const class google::protobuf::FieldOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::FieldOptions * (*)()) &google::protobuf::FieldOptions::internal_default_instance, "C++: google::protobuf::FieldOptions::internal_default_instance() --> const class google::protobuf::FieldOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::FieldOptions::*)(class google::protobuf::FieldOptions *)) &google::protobuf::FieldOptions::Swap, "C++: google::protobuf::FieldOptions::Swap(class google::protobuf::FieldOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::FieldOptions::*)(class google::protobuf::FieldOptions *)) &google::protobuf::FieldOptions::UnsafeArenaSwap, "C++: google::protobuf::FieldOptions::UnsafeArenaSwap(class google::protobuf::FieldOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::FieldOptions * (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::New, "C++: google::protobuf::FieldOptions::New() const --> class google::protobuf::FieldOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::FieldOptions * (google::protobuf::FieldOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::FieldOptions::New, "C++: google::protobuf::FieldOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::FieldOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::FieldOptions::*)(const class google::protobuf::Message &)) &google::protobuf::FieldOptions::CopyFrom, "C++: google::protobuf::FieldOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FieldOptions::*)(const class google::protobuf::Message &)) &google::protobuf::FieldOptions::MergeFrom, "C++: google::protobuf::FieldOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::FieldOptions::*)(const class google::protobuf::FieldOptions &)) &google::protobuf::FieldOptions::CopyFrom, "C++: google::protobuf::FieldOptions::CopyFrom(const class google::protobuf::FieldOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::FieldOptions::*)(const class google::protobuf::FieldOptions &)) &google::protobuf::FieldOptions::MergeFrom, "C++: google::protobuf::FieldOptions::MergeFrom(const class google::protobuf::FieldOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::Clear, "C++: google::protobuf::FieldOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::IsInitialized, "C++: google::protobuf::FieldOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::ByteSizeLong, "C++: google::protobuf::FieldOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::FieldOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::FieldOptions::_InternalParse, "C++: google::protobuf::FieldOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::FieldOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::FieldOptions::_InternalSerialize, "C++: google::protobuf::FieldOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::GetCachedSize, "C++: google::protobuf::FieldOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::GetMetadata, "C++: google::protobuf::FieldOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("CType_IsValid", (bool (*)(int)) &google::protobuf::FieldOptions::CType_IsValid, "C++: google::protobuf::FieldOptions::CType_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("CType_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::FieldOptions::CType_descriptor, "C++: google::protobuf::FieldOptions::CType_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("CType_Parse", (bool (*)(const std::string &, enum google::protobuf::FieldOptions_CType *)) &google::protobuf::FieldOptions::CType_Parse, "C++: google::protobuf::FieldOptions::CType_Parse(const std::string &, enum google::protobuf::FieldOptions_CType *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("JSType_IsValid", (bool (*)(int)) &google::protobuf::FieldOptions::JSType_IsValid, "C++: google::protobuf::FieldOptions::JSType_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("JSType_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::FieldOptions::JSType_descriptor, "C++: google::protobuf::FieldOptions::JSType_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("JSType_Parse", (bool (*)(const std::string &, enum google::protobuf::FieldOptions_JSType *)) &google::protobuf::FieldOptions::JSType_Parse, "C++: google::protobuf::FieldOptions::JSType_Parse(const std::string &, enum google::protobuf::FieldOptions_JSType *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("uninterpreted_option_size", (int (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::uninterpreted_option_size, "C++: google::protobuf::FieldOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_uninterpreted_option, "C++: google::protobuf::FieldOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::FieldOptions::*)(int)) &google::protobuf::FieldOptions::mutable_uninterpreted_option, "C++: google::protobuf::FieldOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::mutable_uninterpreted_option, "C++: google::protobuf::FieldOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::FieldOptions::*)(int) const) &google::protobuf::FieldOptions::uninterpreted_option, "C++: google::protobuf::FieldOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::add_uninterpreted_option, "C++: google::protobuf::FieldOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::uninterpreted_option, "C++: google::protobuf::FieldOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_ctype", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_ctype, "C++: google::protobuf::FieldOptions::has_ctype() const --> bool");
		cl.def("clear_ctype", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_ctype, "C++: google::protobuf::FieldOptions::clear_ctype() --> void");
		cl.def("ctype", (enum google::protobuf::FieldOptions_CType (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::ctype, "C++: google::protobuf::FieldOptions::ctype() const --> enum google::protobuf::FieldOptions_CType");
		cl.def("set_ctype", (void (google::protobuf::FieldOptions::*)(enum google::protobuf::FieldOptions_CType)) &google::protobuf::FieldOptions::set_ctype, "C++: google::protobuf::FieldOptions::set_ctype(enum google::protobuf::FieldOptions_CType) --> void", pybind11::arg("value"));
		cl.def("has_packed", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_packed, "C++: google::protobuf::FieldOptions::has_packed() const --> bool");
		cl.def("clear_packed", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_packed, "C++: google::protobuf::FieldOptions::clear_packed() --> void");
		cl.def("packed", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::packed, "C++: google::protobuf::FieldOptions::packed() const --> bool");
		cl.def("set_packed", (void (google::protobuf::FieldOptions::*)(bool)) &google::protobuf::FieldOptions::set_packed, "C++: google::protobuf::FieldOptions::set_packed(bool) --> void", pybind11::arg("value"));
		cl.def("has_lazy", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_lazy, "C++: google::protobuf::FieldOptions::has_lazy() const --> bool");
		cl.def("clear_lazy", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_lazy, "C++: google::protobuf::FieldOptions::clear_lazy() --> void");
		cl.def("lazy", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::lazy, "C++: google::protobuf::FieldOptions::lazy() const --> bool");
		cl.def("set_lazy", (void (google::protobuf::FieldOptions::*)(bool)) &google::protobuf::FieldOptions::set_lazy, "C++: google::protobuf::FieldOptions::set_lazy(bool) --> void", pybind11::arg("value"));
		cl.def("has_deprecated", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_deprecated, "C++: google::protobuf::FieldOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_deprecated, "C++: google::protobuf::FieldOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::deprecated, "C++: google::protobuf::FieldOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::FieldOptions::*)(bool)) &google::protobuf::FieldOptions::set_deprecated, "C++: google::protobuf::FieldOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
		cl.def("has_weak", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_weak, "C++: google::protobuf::FieldOptions::has_weak() const --> bool");
		cl.def("clear_weak", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_weak, "C++: google::protobuf::FieldOptions::clear_weak() --> void");
		cl.def("weak", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::weak, "C++: google::protobuf::FieldOptions::weak() const --> bool");
		cl.def("set_weak", (void (google::protobuf::FieldOptions::*)(bool)) &google::protobuf::FieldOptions::set_weak, "C++: google::protobuf::FieldOptions::set_weak(bool) --> void", pybind11::arg("value"));
		cl.def("has_jstype", (bool (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::has_jstype, "C++: google::protobuf::FieldOptions::has_jstype() const --> bool");
		cl.def("clear_jstype", (void (google::protobuf::FieldOptions::*)()) &google::protobuf::FieldOptions::clear_jstype, "C++: google::protobuf::FieldOptions::clear_jstype() --> void");
		cl.def("jstype", (enum google::protobuf::FieldOptions_JSType (google::protobuf::FieldOptions::*)() const) &google::protobuf::FieldOptions::jstype, "C++: google::protobuf::FieldOptions::jstype() const --> enum google::protobuf::FieldOptions_JSType");
		cl.def("set_jstype", (void (google::protobuf::FieldOptions::*)(enum google::protobuf::FieldOptions_JSType)) &google::protobuf::FieldOptions::set_jstype, "C++: google::protobuf::FieldOptions::set_jstype(enum google::protobuf::FieldOptions_JSType) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_9.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_9(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B187_[google::protobuf::OneofOptions] ";
	{ // google::protobuf::OneofOptions file:google/protobuf/descriptor.pb.h line:4470
		pybind11::class_<google::protobuf::OneofOptions, std::shared_ptr<google::protobuf::OneofOptions>, google::protobuf::Message> cl(M("google::protobuf"), "OneofOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::OneofOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::OneofOptions const &o){ return new google::protobuf::OneofOptions(o); } ) );
		cl.def("assign", (class google::protobuf::OneofOptions & (google::protobuf::OneofOptions::*)(const class google::protobuf::OneofOptions &)) &google::protobuf::OneofOptions::operator=, "C++: google::protobuf::OneofOptions::operator=(const class google::protobuf::OneofOptions &) --> class google::protobuf::OneofOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::unknown_fields, "C++: google::protobuf::OneofOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::OneofOptions::*)()) &google::protobuf::OneofOptions::mutable_unknown_fields, "C++: google::protobuf::OneofOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::OneofOptions::descriptor, "C++: google::protobuf::OneofOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::OneofOptions::GetDescriptor, "C++: google::protobuf::OneofOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::OneofOptions::GetReflection, "C++: google::protobuf::OneofOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::OneofOptions & (*)()) &google::protobuf::OneofOptions::default_instance, "C++: google::protobuf::OneofOptions::default_instance() --> const class google::protobuf::OneofOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::OneofOptions * (*)()) &google::protobuf::OneofOptions::internal_default_instance, "C++: google::protobuf::OneofOptions::internal_default_instance() --> const class google::protobuf::OneofOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::OneofOptions::*)(class google::protobuf::OneofOptions *)) &google::protobuf::OneofOptions::Swap, "C++: google::protobuf::OneofOptions::Swap(class google::protobuf::OneofOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::OneofOptions::*)(class google::protobuf::OneofOptions *)) &google::protobuf::OneofOptions::UnsafeArenaSwap, "C++: google::protobuf::OneofOptions::UnsafeArenaSwap(class google::protobuf::OneofOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::OneofOptions * (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::New, "C++: google::protobuf::OneofOptions::New() const --> class google::protobuf::OneofOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::OneofOptions * (google::protobuf::OneofOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::OneofOptions::New, "C++: google::protobuf::OneofOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::OneofOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::OneofOptions::*)(const class google::protobuf::Message &)) &google::protobuf::OneofOptions::CopyFrom, "C++: google::protobuf::OneofOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::OneofOptions::*)(const class google::protobuf::Message &)) &google::protobuf::OneofOptions::MergeFrom, "C++: google::protobuf::OneofOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::OneofOptions::*)(const class google::protobuf::OneofOptions &)) &google::protobuf::OneofOptions::CopyFrom, "C++: google::protobuf::OneofOptions::CopyFrom(const class google::protobuf::OneofOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::OneofOptions::*)(const class google::protobuf::OneofOptions &)) &google::protobuf::OneofOptions::MergeFrom, "C++: google::protobuf::OneofOptions::MergeFrom(const class google::protobuf::OneofOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::OneofOptions::*)()) &google::protobuf::OneofOptions::Clear, "C++: google::protobuf::OneofOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::IsInitialized, "C++: google::protobuf::OneofOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::ByteSizeLong, "C++: google::protobuf::OneofOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::OneofOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::OneofOptions::_InternalParse, "C++: google::protobuf::OneofOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::OneofOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::OneofOptions::_InternalSerialize, "C++: google::protobuf::OneofOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::GetCachedSize, "C++: google::protobuf::OneofOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::GetMetadata, "C++: google::protobuf::OneofOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::uninterpreted_option_size, "C++: google::protobuf::OneofOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::OneofOptions::*)()) &google::protobuf::OneofOptions::clear_uninterpreted_option, "C++: google::protobuf::OneofOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::OneofOptions::*)(int)) &google::protobuf::OneofOptions::mutable_uninterpreted_option, "C++: google::protobuf::OneofOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::OneofOptions::*)()) &google::protobuf::OneofOptions::mutable_uninterpreted_option, "C++: google::protobuf::OneofOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::OneofOptions::*)(int) const) &google::protobuf::OneofOptions::uninterpreted_option, "C++: google::protobuf::OneofOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::OneofOptions::*)()) &google::protobuf::OneofOptions::add_uninterpreted_option, "C++: google::protobuf::OneofOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::OneofOptions::*)() const) &google::protobuf::OneofOptions::uninterpreted_option, "C++: google::protobuf::OneofOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
	}
	std::cout << "B188_[void google::protobuf::swap(class google::protobuf::OneofOptions &, class google::protobuf::OneofOptions &)] ";
	std::cout << "B189_[google::protobuf::EnumOptions] ";
	{ // google::protobuf::EnumOptions file:google/protobuf/descriptor.pb.h line:4626
		pybind11::class_<google::protobuf::EnumOptions, std::shared_ptr<google::protobuf::EnumOptions>, google::protobuf::Message> cl(M("google::protobuf"), "EnumOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::EnumOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::EnumOptions const &o){ return new google::protobuf::EnumOptions(o); } ) );
		cl.def("assign", (class google::protobuf::EnumOptions & (google::protobuf::EnumOptions::*)(const class google::protobuf::EnumOptions &)) &google::protobuf::EnumOptions::operator=, "C++: google::protobuf::EnumOptions::operator=(const class google::protobuf::EnumOptions &) --> class google::protobuf::EnumOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::unknown_fields, "C++: google::protobuf::EnumOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::mutable_unknown_fields, "C++: google::protobuf::EnumOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumOptions::descriptor, "C++: google::protobuf::EnumOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumOptions::GetDescriptor, "C++: google::protobuf::EnumOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::EnumOptions::GetReflection, "C++: google::protobuf::EnumOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::EnumOptions & (*)()) &google::protobuf::EnumOptions::default_instance, "C++: google::protobuf::EnumOptions::default_instance() --> const class google::protobuf::EnumOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::EnumOptions * (*)()) &google::protobuf::EnumOptions::internal_default_instance, "C++: google::protobuf::EnumOptions::internal_default_instance() --> const class google::protobuf::EnumOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::EnumOptions::*)(class google::protobuf::EnumOptions *)) &google::protobuf::EnumOptions::Swap, "C++: google::protobuf::EnumOptions::Swap(class google::protobuf::EnumOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::EnumOptions::*)(class google::protobuf::EnumOptions *)) &google::protobuf::EnumOptions::UnsafeArenaSwap, "C++: google::protobuf::EnumOptions::UnsafeArenaSwap(class google::protobuf::EnumOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::EnumOptions * (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::New, "C++: google::protobuf::EnumOptions::New() const --> class google::protobuf::EnumOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::EnumOptions * (google::protobuf::EnumOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::EnumOptions::New, "C++: google::protobuf::EnumOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::EnumOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::EnumOptions::*)(const class google::protobuf::Message &)) &google::protobuf::EnumOptions::CopyFrom, "C++: google::protobuf::EnumOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumOptions::*)(const class google::protobuf::Message &)) &google::protobuf::EnumOptions::MergeFrom, "C++: google::protobuf::EnumOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::EnumOptions::*)(const class google::protobuf::EnumOptions &)) &google::protobuf::EnumOptions::CopyFrom, "C++: google::protobuf::EnumOptions::CopyFrom(const class google::protobuf::EnumOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumOptions::*)(const class google::protobuf::EnumOptions &)) &google::protobuf::EnumOptions::MergeFrom, "C++: google::protobuf::EnumOptions::MergeFrom(const class google::protobuf::EnumOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::Clear, "C++: google::protobuf::EnumOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::IsInitialized, "C++: google::protobuf::EnumOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::ByteSizeLong, "C++: google::protobuf::EnumOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::EnumOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::EnumOptions::_InternalParse, "C++: google::protobuf::EnumOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::EnumOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::EnumOptions::_InternalSerialize, "C++: google::protobuf::EnumOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::GetCachedSize, "C++: google::protobuf::EnumOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::GetMetadata, "C++: google::protobuf::EnumOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::uninterpreted_option_size, "C++: google::protobuf::EnumOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::clear_uninterpreted_option, "C++: google::protobuf::EnumOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::EnumOptions::*)(int)) &google::protobuf::EnumOptions::mutable_uninterpreted_option, "C++: google::protobuf::EnumOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::mutable_uninterpreted_option, "C++: google::protobuf::EnumOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::EnumOptions::*)(int) const) &google::protobuf::EnumOptions::uninterpreted_option, "C++: google::protobuf::EnumOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::add_uninterpreted_option, "C++: google::protobuf::EnumOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::uninterpreted_option, "C++: google::protobuf::EnumOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_allow_alias", (bool (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::has_allow_alias, "C++: google::protobuf::EnumOptions::has_allow_alias() const --> bool");
		cl.def("clear_allow_alias", (void (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::clear_allow_alias, "C++: google::protobuf::EnumOptions::clear_allow_alias() --> void");
		cl.def("allow_alias", (bool (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::allow_alias, "C++: google::protobuf::EnumOptions::allow_alias() const --> bool");
		cl.def("set_allow_alias", (void (google::protobuf::EnumOptions::*)(bool)) &google::protobuf::EnumOptions::set_allow_alias, "C++: google::protobuf::EnumOptions::set_allow_alias(bool) --> void", pybind11::arg("value"));
		cl.def("has_deprecated", (bool (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::has_deprecated, "C++: google::protobuf::EnumOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::EnumOptions::*)()) &google::protobuf::EnumOptions::clear_deprecated, "C++: google::protobuf::EnumOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::EnumOptions::*)() const) &google::protobuf::EnumOptions::deprecated, "C++: google::protobuf::EnumOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::EnumOptions::*)(bool)) &google::protobuf::EnumOptions::set_deprecated, "C++: google::protobuf::EnumOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_10.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_10(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B190_[google::protobuf::EnumValueOptions] ";
	{ // google::protobuf::EnumValueOptions file:google/protobuf/descriptor.pb.h line:4813
		pybind11::class_<google::protobuf::EnumValueOptions, std::shared_ptr<google::protobuf::EnumValueOptions>, google::protobuf::Message> cl(M("google::protobuf"), "EnumValueOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::EnumValueOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::EnumValueOptions const &o){ return new google::protobuf::EnumValueOptions(o); } ) );
		cl.def("assign", (class google::protobuf::EnumValueOptions & (google::protobuf::EnumValueOptions::*)(const class google::protobuf::EnumValueOptions &)) &google::protobuf::EnumValueOptions::operator=, "C++: google::protobuf::EnumValueOptions::operator=(const class google::protobuf::EnumValueOptions &) --> class google::protobuf::EnumValueOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::unknown_fields, "C++: google::protobuf::EnumValueOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::mutable_unknown_fields, "C++: google::protobuf::EnumValueOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumValueOptions::descriptor, "C++: google::protobuf::EnumValueOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::EnumValueOptions::GetDescriptor, "C++: google::protobuf::EnumValueOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::EnumValueOptions::GetReflection, "C++: google::protobuf::EnumValueOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::EnumValueOptions & (*)()) &google::protobuf::EnumValueOptions::default_instance, "C++: google::protobuf::EnumValueOptions::default_instance() --> const class google::protobuf::EnumValueOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::EnumValueOptions * (*)()) &google::protobuf::EnumValueOptions::internal_default_instance, "C++: google::protobuf::EnumValueOptions::internal_default_instance() --> const class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::EnumValueOptions::*)(class google::protobuf::EnumValueOptions *)) &google::protobuf::EnumValueOptions::Swap, "C++: google::protobuf::EnumValueOptions::Swap(class google::protobuf::EnumValueOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::EnumValueOptions::*)(class google::protobuf::EnumValueOptions *)) &google::protobuf::EnumValueOptions::UnsafeArenaSwap, "C++: google::protobuf::EnumValueOptions::UnsafeArenaSwap(class google::protobuf::EnumValueOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::EnumValueOptions * (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::New, "C++: google::protobuf::EnumValueOptions::New() const --> class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::EnumValueOptions * (google::protobuf::EnumValueOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::EnumValueOptions::New, "C++: google::protobuf::EnumValueOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::EnumValueOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::EnumValueOptions::*)(const class google::protobuf::Message &)) &google::protobuf::EnumValueOptions::CopyFrom, "C++: google::protobuf::EnumValueOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumValueOptions::*)(const class google::protobuf::Message &)) &google::protobuf::EnumValueOptions::MergeFrom, "C++: google::protobuf::EnumValueOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::EnumValueOptions::*)(const class google::protobuf::EnumValueOptions &)) &google::protobuf::EnumValueOptions::CopyFrom, "C++: google::protobuf::EnumValueOptions::CopyFrom(const class google::protobuf::EnumValueOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::EnumValueOptions::*)(const class google::protobuf::EnumValueOptions &)) &google::protobuf::EnumValueOptions::MergeFrom, "C++: google::protobuf::EnumValueOptions::MergeFrom(const class google::protobuf::EnumValueOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::Clear, "C++: google::protobuf::EnumValueOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::IsInitialized, "C++: google::protobuf::EnumValueOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::ByteSizeLong, "C++: google::protobuf::EnumValueOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::EnumValueOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::EnumValueOptions::_InternalParse, "C++: google::protobuf::EnumValueOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::EnumValueOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::EnumValueOptions::_InternalSerialize, "C++: google::protobuf::EnumValueOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::GetCachedSize, "C++: google::protobuf::EnumValueOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::GetMetadata, "C++: google::protobuf::EnumValueOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::uninterpreted_option_size, "C++: google::protobuf::EnumValueOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::clear_uninterpreted_option, "C++: google::protobuf::EnumValueOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::EnumValueOptions::*)(int)) &google::protobuf::EnumValueOptions::mutable_uninterpreted_option, "C++: google::protobuf::EnumValueOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::mutable_uninterpreted_option, "C++: google::protobuf::EnumValueOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::EnumValueOptions::*)(int) const) &google::protobuf::EnumValueOptions::uninterpreted_option, "C++: google::protobuf::EnumValueOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::add_uninterpreted_option, "C++: google::protobuf::EnumValueOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::uninterpreted_option, "C++: google::protobuf::EnumValueOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_deprecated", (bool (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::has_deprecated, "C++: google::protobuf::EnumValueOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::EnumValueOptions::*)()) &google::protobuf::EnumValueOptions::clear_deprecated, "C++: google::protobuf::EnumValueOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::EnumValueOptions::*)() const) &google::protobuf::EnumValueOptions::deprecated, "C++: google::protobuf::EnumValueOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::EnumValueOptions::*)(bool)) &google::protobuf::EnumValueOptions::set_deprecated, "C++: google::protobuf::EnumValueOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
	}
	std::cout << "B191_[void google::protobuf::swap(class google::protobuf::EnumValueOptions &, class google::protobuf::EnumValueOptions &)] ";
	std::cout << "B192_[google::protobuf::ServiceOptions] ";
	{ // google::protobuf::ServiceOptions file:google/protobuf/descriptor.pb.h line:4985
		pybind11::class_<google::protobuf::ServiceOptions, std::shared_ptr<google::protobuf::ServiceOptions>, google::protobuf::Message> cl(M("google::protobuf"), "ServiceOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::ServiceOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::ServiceOptions const &o){ return new google::protobuf::ServiceOptions(o); } ) );
		cl.def("assign", (class google::protobuf::ServiceOptions & (google::protobuf::ServiceOptions::*)(const class google::protobuf::ServiceOptions &)) &google::protobuf::ServiceOptions::operator=, "C++: google::protobuf::ServiceOptions::operator=(const class google::protobuf::ServiceOptions &) --> class google::protobuf::ServiceOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::unknown_fields, "C++: google::protobuf::ServiceOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::mutable_unknown_fields, "C++: google::protobuf::ServiceOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ServiceOptions::descriptor, "C++: google::protobuf::ServiceOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::ServiceOptions::GetDescriptor, "C++: google::protobuf::ServiceOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::ServiceOptions::GetReflection, "C++: google::protobuf::ServiceOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::ServiceOptions & (*)()) &google::protobuf::ServiceOptions::default_instance, "C++: google::protobuf::ServiceOptions::default_instance() --> const class google::protobuf::ServiceOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::ServiceOptions * (*)()) &google::protobuf::ServiceOptions::internal_default_instance, "C++: google::protobuf::ServiceOptions::internal_default_instance() --> const class google::protobuf::ServiceOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::ServiceOptions::*)(class google::protobuf::ServiceOptions *)) &google::protobuf::ServiceOptions::Swap, "C++: google::protobuf::ServiceOptions::Swap(class google::protobuf::ServiceOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::ServiceOptions::*)(class google::protobuf::ServiceOptions *)) &google::protobuf::ServiceOptions::UnsafeArenaSwap, "C++: google::protobuf::ServiceOptions::UnsafeArenaSwap(class google::protobuf::ServiceOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::ServiceOptions * (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::New, "C++: google::protobuf::ServiceOptions::New() const --> class google::protobuf::ServiceOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::ServiceOptions * (google::protobuf::ServiceOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::ServiceOptions::New, "C++: google::protobuf::ServiceOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::ServiceOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::ServiceOptions::*)(const class google::protobuf::Message &)) &google::protobuf::ServiceOptions::CopyFrom, "C++: google::protobuf::ServiceOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ServiceOptions::*)(const class google::protobuf::Message &)) &google::protobuf::ServiceOptions::MergeFrom, "C++: google::protobuf::ServiceOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::ServiceOptions::*)(const class google::protobuf::ServiceOptions &)) &google::protobuf::ServiceOptions::CopyFrom, "C++: google::protobuf::ServiceOptions::CopyFrom(const class google::protobuf::ServiceOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::ServiceOptions::*)(const class google::protobuf::ServiceOptions &)) &google::protobuf::ServiceOptions::MergeFrom, "C++: google::protobuf::ServiceOptions::MergeFrom(const class google::protobuf::ServiceOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::Clear, "C++: google::protobuf::ServiceOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::IsInitialized, "C++: google::protobuf::ServiceOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::ByteSizeLong, "C++: google::protobuf::ServiceOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::ServiceOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::ServiceOptions::_InternalParse, "C++: google::protobuf::ServiceOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::ServiceOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::ServiceOptions::_InternalSerialize, "C++: google::protobuf::ServiceOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::GetCachedSize, "C++: google::protobuf::ServiceOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::GetMetadata, "C++: google::protobuf::ServiceOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("uninterpreted_option_size", (int (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::uninterpreted_option_size, "C++: google::protobuf::ServiceOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::clear_uninterpreted_option, "C++: google::protobuf::ServiceOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::ServiceOptions::*)(int)) &google::protobuf::ServiceOptions::mutable_uninterpreted_option, "C++: google::protobuf::ServiceOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::mutable_uninterpreted_option, "C++: google::protobuf::ServiceOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::ServiceOptions::*)(int) const) &google::protobuf::ServiceOptions::uninterpreted_option, "C++: google::protobuf::ServiceOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::add_uninterpreted_option, "C++: google::protobuf::ServiceOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::uninterpreted_option, "C++: google::protobuf::ServiceOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_deprecated", (bool (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::has_deprecated, "C++: google::protobuf::ServiceOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::ServiceOptions::*)()) &google::protobuf::ServiceOptions::clear_deprecated, "C++: google::protobuf::ServiceOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::ServiceOptions::*)() const) &google::protobuf::ServiceOptions::deprecated, "C++: google::protobuf::ServiceOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::ServiceOptions::*)(bool)) &google::protobuf::ServiceOptions::set_deprecated, "C++: google::protobuf::ServiceOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_11.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_11(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B193_[google::protobuf::MethodOptions] ";
	{ // google::protobuf::MethodOptions file:google/protobuf/descriptor.pb.h line:5157
		pybind11::class_<google::protobuf::MethodOptions, std::shared_ptr<google::protobuf::MethodOptions>, google::protobuf::Message> cl(M("google::protobuf"), "MethodOptions", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::MethodOptions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::MethodOptions const &o){ return new google::protobuf::MethodOptions(o); } ) );
		cl.def("assign", (class google::protobuf::MethodOptions & (google::protobuf::MethodOptions::*)(const class google::protobuf::MethodOptions &)) &google::protobuf::MethodOptions::operator=, "C++: google::protobuf::MethodOptions::operator=(const class google::protobuf::MethodOptions &) --> class google::protobuf::MethodOptions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::unknown_fields, "C++: google::protobuf::MethodOptions::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::mutable_unknown_fields, "C++: google::protobuf::MethodOptions::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MethodOptions::descriptor, "C++: google::protobuf::MethodOptions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::MethodOptions::GetDescriptor, "C++: google::protobuf::MethodOptions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::MethodOptions::GetReflection, "C++: google::protobuf::MethodOptions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::MethodOptions & (*)()) &google::protobuf::MethodOptions::default_instance, "C++: google::protobuf::MethodOptions::default_instance() --> const class google::protobuf::MethodOptions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::MethodOptions * (*)()) &google::protobuf::MethodOptions::internal_default_instance, "C++: google::protobuf::MethodOptions::internal_default_instance() --> const class google::protobuf::MethodOptions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::MethodOptions::*)(class google::protobuf::MethodOptions *)) &google::protobuf::MethodOptions::Swap, "C++: google::protobuf::MethodOptions::Swap(class google::protobuf::MethodOptions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::MethodOptions::*)(class google::protobuf::MethodOptions *)) &google::protobuf::MethodOptions::UnsafeArenaSwap, "C++: google::protobuf::MethodOptions::UnsafeArenaSwap(class google::protobuf::MethodOptions *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::MethodOptions * (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::New, "C++: google::protobuf::MethodOptions::New() const --> class google::protobuf::MethodOptions *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::MethodOptions * (google::protobuf::MethodOptions::*)(class google::protobuf::Arena *) const) &google::protobuf::MethodOptions::New, "C++: google::protobuf::MethodOptions::New(class google::protobuf::Arena *) const --> class google::protobuf::MethodOptions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::MethodOptions::*)(const class google::protobuf::Message &)) &google::protobuf::MethodOptions::CopyFrom, "C++: google::protobuf::MethodOptions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MethodOptions::*)(const class google::protobuf::Message &)) &google::protobuf::MethodOptions::MergeFrom, "C++: google::protobuf::MethodOptions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::MethodOptions::*)(const class google::protobuf::MethodOptions &)) &google::protobuf::MethodOptions::CopyFrom, "C++: google::protobuf::MethodOptions::CopyFrom(const class google::protobuf::MethodOptions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::MethodOptions::*)(const class google::protobuf::MethodOptions &)) &google::protobuf::MethodOptions::MergeFrom, "C++: google::protobuf::MethodOptions::MergeFrom(const class google::protobuf::MethodOptions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::Clear, "C++: google::protobuf::MethodOptions::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::IsInitialized, "C++: google::protobuf::MethodOptions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::ByteSizeLong, "C++: google::protobuf::MethodOptions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::MethodOptions::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::MethodOptions::_InternalParse, "C++: google::protobuf::MethodOptions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::MethodOptions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::MethodOptions::_InternalSerialize, "C++: google::protobuf::MethodOptions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::GetCachedSize, "C++: google::protobuf::MethodOptions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::GetMetadata, "C++: google::protobuf::MethodOptions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("IdempotencyLevel_IsValid", (bool (*)(int)) &google::protobuf::MethodOptions::IdempotencyLevel_IsValid, "C++: google::protobuf::MethodOptions::IdempotencyLevel_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("IdempotencyLevel_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &google::protobuf::MethodOptions::IdempotencyLevel_descriptor, "C++: google::protobuf::MethodOptions::IdempotencyLevel_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("IdempotencyLevel_Parse", (bool (*)(const std::string &, enum google::protobuf::MethodOptions_IdempotencyLevel *)) &google::protobuf::MethodOptions::IdempotencyLevel_Parse, "C++: google::protobuf::MethodOptions::IdempotencyLevel_Parse(const std::string &, enum google::protobuf::MethodOptions_IdempotencyLevel *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("uninterpreted_option_size", (int (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::uninterpreted_option_size, "C++: google::protobuf::MethodOptions::uninterpreted_option_size() const --> int");
		cl.def("clear_uninterpreted_option", (void (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::clear_uninterpreted_option, "C++: google::protobuf::MethodOptions::clear_uninterpreted_option() --> void");
		cl.def("mutable_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::MethodOptions::*)(int)) &google::protobuf::MethodOptions::mutable_uninterpreted_option, "C++: google::protobuf::MethodOptions::mutable_uninterpreted_option(int) --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_uninterpreted_option", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> * (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::mutable_uninterpreted_option, "C++: google::protobuf::MethodOptions::mutable_uninterpreted_option() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::UninterpretedOption & (google::protobuf::MethodOptions::*)(int) const) &google::protobuf::MethodOptions::uninterpreted_option, "C++: google::protobuf::MethodOptions::uninterpreted_option(int) const --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_uninterpreted_option", (class google::protobuf::UninterpretedOption * (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::add_uninterpreted_option, "C++: google::protobuf::MethodOptions::add_uninterpreted_option() --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("uninterpreted_option", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> & (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::uninterpreted_option, "C++: google::protobuf::MethodOptions::uninterpreted_option() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption> &", pybind11::return_value_policy::automatic);
		cl.def("has_deprecated", (bool (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::has_deprecated, "C++: google::protobuf::MethodOptions::has_deprecated() const --> bool");
		cl.def("clear_deprecated", (void (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::clear_deprecated, "C++: google::protobuf::MethodOptions::clear_deprecated() --> void");
		cl.def("deprecated", (bool (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::deprecated, "C++: google::protobuf::MethodOptions::deprecated() const --> bool");
		cl.def("set_deprecated", (void (google::protobuf::MethodOptions::*)(bool)) &google::protobuf::MethodOptions::set_deprecated, "C++: google::protobuf::MethodOptions::set_deprecated(bool) --> void", pybind11::arg("value"));
		cl.def("has_idempotency_level", (bool (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::has_idempotency_level, "C++: google::protobuf::MethodOptions::has_idempotency_level() const --> bool");
		cl.def("clear_idempotency_level", (void (google::protobuf::MethodOptions::*)()) &google::protobuf::MethodOptions::clear_idempotency_level, "C++: google::protobuf::MethodOptions::clear_idempotency_level() --> void");
		cl.def("idempotency_level", (enum google::protobuf::MethodOptions_IdempotencyLevel (google::protobuf::MethodOptions::*)() const) &google::protobuf::MethodOptions::idempotency_level, "C++: google::protobuf::MethodOptions::idempotency_level() const --> enum google::protobuf::MethodOptions_IdempotencyLevel");
		cl.def("set_idempotency_level", (void (google::protobuf::MethodOptions::*)(enum google::protobuf::MethodOptions_IdempotencyLevel)) &google::protobuf::MethodOptions::set_idempotency_level, "C++: google::protobuf::MethodOptions::set_idempotency_level(enum google::protobuf::MethodOptions_IdempotencyLevel) --> void", pybind11::arg("value"));
	}
	std::cout << "B194_[void google::protobuf::swap(class google::protobuf::MethodOptions &, class google::protobuf::MethodOptions &)] ";
	std::cout << "B195_[google::protobuf::UninterpretedOption_NamePart] ";
	{ // google::protobuf::UninterpretedOption_NamePart file:google/protobuf/descriptor.pb.h line:5376
		pybind11::class_<google::protobuf::UninterpretedOption_NamePart, std::shared_ptr<google::protobuf::UninterpretedOption_NamePart>, google::protobuf::Message> cl(M("google::protobuf"), "UninterpretedOption_NamePart", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::UninterpretedOption_NamePart(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::UninterpretedOption_NamePart const &o){ return new google::protobuf::UninterpretedOption_NamePart(o); } ) );
		cl.def("assign", (class google::protobuf::UninterpretedOption_NamePart & (google::protobuf::UninterpretedOption_NamePart::*)(const class google::protobuf::UninterpretedOption_NamePart &)) &google::protobuf::UninterpretedOption_NamePart::operator=, "C++: google::protobuf::UninterpretedOption_NamePart::operator=(const class google::protobuf::UninterpretedOption_NamePart &) --> class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::unknown_fields, "C++: google::protobuf::UninterpretedOption_NamePart::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::UninterpretedOption_NamePart::*)()) &google::protobuf::UninterpretedOption_NamePart::mutable_unknown_fields, "C++: google::protobuf::UninterpretedOption_NamePart::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::UninterpretedOption_NamePart::descriptor, "C++: google::protobuf::UninterpretedOption_NamePart::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::UninterpretedOption_NamePart::GetDescriptor, "C++: google::protobuf::UninterpretedOption_NamePart::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::UninterpretedOption_NamePart::GetReflection, "C++: google::protobuf::UninterpretedOption_NamePart::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::UninterpretedOption_NamePart & (*)()) &google::protobuf::UninterpretedOption_NamePart::default_instance, "C++: google::protobuf::UninterpretedOption_NamePart::default_instance() --> const class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::UninterpretedOption_NamePart * (*)()) &google::protobuf::UninterpretedOption_NamePart::internal_default_instance, "C++: google::protobuf::UninterpretedOption_NamePart::internal_default_instance() --> const class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::UninterpretedOption_NamePart::*)(class google::protobuf::UninterpretedOption_NamePart *)) &google::protobuf::UninterpretedOption_NamePart::Swap, "C++: google::protobuf::UninterpretedOption_NamePart::Swap(class google::protobuf::UninterpretedOption_NamePart *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::UninterpretedOption_NamePart::*)(class google::protobuf::UninterpretedOption_NamePart *)) &google::protobuf::UninterpretedOption_NamePart::UnsafeArenaSwap, "C++: google::protobuf::UninterpretedOption_NamePart::UnsafeArenaSwap(class google::protobuf::UninterpretedOption_NamePart *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::New, "C++: google::protobuf::UninterpretedOption_NamePart::New() const --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::UninterpretedOption_NamePart::*)(class google::protobuf::Arena *) const) &google::protobuf::UninterpretedOption_NamePart::New, "C++: google::protobuf::UninterpretedOption_NamePart::New(class google::protobuf::Arena *) const --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::UninterpretedOption_NamePart::*)(const class google::protobuf::Message &)) &google::protobuf::UninterpretedOption_NamePart::CopyFrom, "C++: google::protobuf::UninterpretedOption_NamePart::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::UninterpretedOption_NamePart::*)(const class google::protobuf::Message &)) &google::protobuf::UninterpretedOption_NamePart::MergeFrom, "C++: google::protobuf::UninterpretedOption_NamePart::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::UninterpretedOption_NamePart::*)(const class google::protobuf::UninterpretedOption_NamePart &)) &google::protobuf::UninterpretedOption_NamePart::CopyFrom, "C++: google::protobuf::UninterpretedOption_NamePart::CopyFrom(const class google::protobuf::UninterpretedOption_NamePart &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::UninterpretedOption_NamePart::*)(const class google::protobuf::UninterpretedOption_NamePart &)) &google::protobuf::UninterpretedOption_NamePart::MergeFrom, "C++: google::protobuf::UninterpretedOption_NamePart::MergeFrom(const class google::protobuf::UninterpretedOption_NamePart &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::UninterpretedOption_NamePart::*)()) &google::protobuf::UninterpretedOption_NamePart::Clear, "C++: google::protobuf::UninterpretedOption_NamePart::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::IsInitialized, "C++: google::protobuf::UninterpretedOption_NamePart::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::ByteSizeLong, "C++: google::protobuf::UninterpretedOption_NamePart::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::UninterpretedOption_NamePart::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::UninterpretedOption_NamePart::_InternalParse, "C++: google::protobuf::UninterpretedOption_NamePart::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::UninterpretedOption_NamePart::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::UninterpretedOption_NamePart::_InternalSerialize, "C++: google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::GetCachedSize, "C++: google::protobuf::UninterpretedOption_NamePart::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::GetMetadata, "C++: google::protobuf::UninterpretedOption_NamePart::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_name_part", (bool (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::has_name_part, "C++: google::protobuf::UninterpretedOption_NamePart::has_name_part() const --> bool");
		cl.def("clear_name_part", (void (google::protobuf::UninterpretedOption_NamePart::*)()) &google::protobuf::UninterpretedOption_NamePart::clear_name_part, "C++: google::protobuf::UninterpretedOption_NamePart::clear_name_part() --> void");
		cl.def("set_name_part", (void (google::protobuf::UninterpretedOption_NamePart::*)(const char *)) &google::protobuf::UninterpretedOption_NamePart::set_name_part, "C++: google::protobuf::UninterpretedOption_NamePart::set_name_part(const char *) --> void", pybind11::arg("value"));
		cl.def("set_name_part", (void (google::protobuf::UninterpretedOption_NamePart::*)(const char *, unsigned long)) &google::protobuf::UninterpretedOption_NamePart::set_name_part, "C++: google::protobuf::UninterpretedOption_NamePart::set_name_part(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_is_extension", (bool (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::has_is_extension, "C++: google::protobuf::UninterpretedOption_NamePart::has_is_extension() const --> bool");
		cl.def("clear_is_extension", (void (google::protobuf::UninterpretedOption_NamePart::*)()) &google::protobuf::UninterpretedOption_NamePart::clear_is_extension, "C++: google::protobuf::UninterpretedOption_NamePart::clear_is_extension() --> void");
		cl.def("is_extension", (bool (google::protobuf::UninterpretedOption_NamePart::*)() const) &google::protobuf::UninterpretedOption_NamePart::is_extension, "C++: google::protobuf::UninterpretedOption_NamePart::is_extension() const --> bool");
		cl.def("set_is_extension", (void (google::protobuf::UninterpretedOption_NamePart::*)(bool)) &google::protobuf::UninterpretedOption_NamePart::set_is_extension, "C++: google::protobuf::UninterpretedOption_NamePart::set_is_extension(bool) --> void", pybind11::arg("value"));
	}
}


// File: google/protobuf/descriptor_pb_12.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption_NamePart
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_12(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B196_[google::protobuf::UninterpretedOption] ";
	{ // google::protobuf::UninterpretedOption file:google/protobuf/descriptor.pb.h line:5550
		pybind11::class_<google::protobuf::UninterpretedOption, std::shared_ptr<google::protobuf::UninterpretedOption>, google::protobuf::Message> cl(M("google::protobuf"), "UninterpretedOption", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::UninterpretedOption(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::UninterpretedOption const &o){ return new google::protobuf::UninterpretedOption(o); } ) );
		cl.def("assign", (class google::protobuf::UninterpretedOption & (google::protobuf::UninterpretedOption::*)(const class google::protobuf::UninterpretedOption &)) &google::protobuf::UninterpretedOption::operator=, "C++: google::protobuf::UninterpretedOption::operator=(const class google::protobuf::UninterpretedOption &) --> class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::unknown_fields, "C++: google::protobuf::UninterpretedOption::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::mutable_unknown_fields, "C++: google::protobuf::UninterpretedOption::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::UninterpretedOption::descriptor, "C++: google::protobuf::UninterpretedOption::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::UninterpretedOption::GetDescriptor, "C++: google::protobuf::UninterpretedOption::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::UninterpretedOption::GetReflection, "C++: google::protobuf::UninterpretedOption::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::UninterpretedOption & (*)()) &google::protobuf::UninterpretedOption::default_instance, "C++: google::protobuf::UninterpretedOption::default_instance() --> const class google::protobuf::UninterpretedOption &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::UninterpretedOption * (*)()) &google::protobuf::UninterpretedOption::internal_default_instance, "C++: google::protobuf::UninterpretedOption::internal_default_instance() --> const class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::UninterpretedOption::*)(class google::protobuf::UninterpretedOption *)) &google::protobuf::UninterpretedOption::Swap, "C++: google::protobuf::UninterpretedOption::Swap(class google::protobuf::UninterpretedOption *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::UninterpretedOption::*)(class google::protobuf::UninterpretedOption *)) &google::protobuf::UninterpretedOption::UnsafeArenaSwap, "C++: google::protobuf::UninterpretedOption::UnsafeArenaSwap(class google::protobuf::UninterpretedOption *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::UninterpretedOption * (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::New, "C++: google::protobuf::UninterpretedOption::New() const --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::UninterpretedOption * (google::protobuf::UninterpretedOption::*)(class google::protobuf::Arena *) const) &google::protobuf::UninterpretedOption::New, "C++: google::protobuf::UninterpretedOption::New(class google::protobuf::Arena *) const --> class google::protobuf::UninterpretedOption *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::UninterpretedOption::*)(const class google::protobuf::Message &)) &google::protobuf::UninterpretedOption::CopyFrom, "C++: google::protobuf::UninterpretedOption::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::UninterpretedOption::*)(const class google::protobuf::Message &)) &google::protobuf::UninterpretedOption::MergeFrom, "C++: google::protobuf::UninterpretedOption::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::UninterpretedOption::*)(const class google::protobuf::UninterpretedOption &)) &google::protobuf::UninterpretedOption::CopyFrom, "C++: google::protobuf::UninterpretedOption::CopyFrom(const class google::protobuf::UninterpretedOption &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::UninterpretedOption::*)(const class google::protobuf::UninterpretedOption &)) &google::protobuf::UninterpretedOption::MergeFrom, "C++: google::protobuf::UninterpretedOption::MergeFrom(const class google::protobuf::UninterpretedOption &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::Clear, "C++: google::protobuf::UninterpretedOption::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::IsInitialized, "C++: google::protobuf::UninterpretedOption::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::ByteSizeLong, "C++: google::protobuf::UninterpretedOption::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::UninterpretedOption::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::UninterpretedOption::_InternalParse, "C++: google::protobuf::UninterpretedOption::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::UninterpretedOption::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::UninterpretedOption::_InternalSerialize, "C++: google::protobuf::UninterpretedOption::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::GetCachedSize, "C++: google::protobuf::UninterpretedOption::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::GetMetadata, "C++: google::protobuf::UninterpretedOption::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("name_size", (int (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::name_size, "C++: google::protobuf::UninterpretedOption::name_size() const --> int");
		cl.def("clear_name", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_name, "C++: google::protobuf::UninterpretedOption::clear_name() --> void");
		cl.def("mutable_name", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::UninterpretedOption::*)(int)) &google::protobuf::UninterpretedOption::mutable_name, "C++: google::protobuf::UninterpretedOption::mutable_name(int) --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_name", (class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> * (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::mutable_name, "C++: google::protobuf::UninterpretedOption::mutable_name() --> class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> *", pybind11::return_value_policy::reference);
		cl.def("name", (const class google::protobuf::UninterpretedOption_NamePart & (google::protobuf::UninterpretedOption::*)(int) const) &google::protobuf::UninterpretedOption::name, "C++: google::protobuf::UninterpretedOption::name(int) const --> const class google::protobuf::UninterpretedOption_NamePart &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_name", (class google::protobuf::UninterpretedOption_NamePart * (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::add_name, "C++: google::protobuf::UninterpretedOption::add_name() --> class google::protobuf::UninterpretedOption_NamePart *", pybind11::return_value_policy::reference);
		cl.def("name", (const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> & (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::name, "C++: google::protobuf::UninterpretedOption::name() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::UninterpretedOption_NamePart> &", pybind11::return_value_policy::automatic);
		cl.def("has_identifier_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_identifier_value, "C++: google::protobuf::UninterpretedOption::has_identifier_value() const --> bool");
		cl.def("clear_identifier_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_identifier_value, "C++: google::protobuf::UninterpretedOption::clear_identifier_value() --> void");
		cl.def("set_identifier_value", (void (google::protobuf::UninterpretedOption::*)(const char *)) &google::protobuf::UninterpretedOption::set_identifier_value, "C++: google::protobuf::UninterpretedOption::set_identifier_value(const char *) --> void", pybind11::arg("value"));
		cl.def("set_identifier_value", (void (google::protobuf::UninterpretedOption::*)(const char *, unsigned long)) &google::protobuf::UninterpretedOption::set_identifier_value, "C++: google::protobuf::UninterpretedOption::set_identifier_value(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_string_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_string_value, "C++: google::protobuf::UninterpretedOption::has_string_value() const --> bool");
		cl.def("clear_string_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_string_value, "C++: google::protobuf::UninterpretedOption::clear_string_value() --> void");
		cl.def("set_string_value", (void (google::protobuf::UninterpretedOption::*)(const char *)) &google::protobuf::UninterpretedOption::set_string_value, "C++: google::protobuf::UninterpretedOption::set_string_value(const char *) --> void", pybind11::arg("value"));
		cl.def("set_string_value", (void (google::protobuf::UninterpretedOption::*)(const void *, unsigned long)) &google::protobuf::UninterpretedOption::set_string_value, "C++: google::protobuf::UninterpretedOption::set_string_value(const void *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_aggregate_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_aggregate_value, "C++: google::protobuf::UninterpretedOption::has_aggregate_value() const --> bool");
		cl.def("clear_aggregate_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_aggregate_value, "C++: google::protobuf::UninterpretedOption::clear_aggregate_value() --> void");
		cl.def("set_aggregate_value", (void (google::protobuf::UninterpretedOption::*)(const char *)) &google::protobuf::UninterpretedOption::set_aggregate_value, "C++: google::protobuf::UninterpretedOption::set_aggregate_value(const char *) --> void", pybind11::arg("value"));
		cl.def("set_aggregate_value", (void (google::protobuf::UninterpretedOption::*)(const char *, unsigned long)) &google::protobuf::UninterpretedOption::set_aggregate_value, "C++: google::protobuf::UninterpretedOption::set_aggregate_value(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_positive_int_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_positive_int_value, "C++: google::protobuf::UninterpretedOption::has_positive_int_value() const --> bool");
		cl.def("clear_positive_int_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_positive_int_value, "C++: google::protobuf::UninterpretedOption::clear_positive_int_value() --> void");
		cl.def("positive_int_value", (unsigned long (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::positive_int_value, "C++: google::protobuf::UninterpretedOption::positive_int_value() const --> unsigned long");
		cl.def("set_positive_int_value", (void (google::protobuf::UninterpretedOption::*)(unsigned long)) &google::protobuf::UninterpretedOption::set_positive_int_value, "C++: google::protobuf::UninterpretedOption::set_positive_int_value(unsigned long) --> void", pybind11::arg("value"));
		cl.def("has_negative_int_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_negative_int_value, "C++: google::protobuf::UninterpretedOption::has_negative_int_value() const --> bool");
		cl.def("clear_negative_int_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_negative_int_value, "C++: google::protobuf::UninterpretedOption::clear_negative_int_value() --> void");
		cl.def("negative_int_value", (long (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::negative_int_value, "C++: google::protobuf::UninterpretedOption::negative_int_value() const --> long");
		cl.def("set_negative_int_value", (void (google::protobuf::UninterpretedOption::*)(long)) &google::protobuf::UninterpretedOption::set_negative_int_value, "C++: google::protobuf::UninterpretedOption::set_negative_int_value(long) --> void", pybind11::arg("value"));
		cl.def("has_double_value", (bool (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::has_double_value, "C++: google::protobuf::UninterpretedOption::has_double_value() const --> bool");
		cl.def("clear_double_value", (void (google::protobuf::UninterpretedOption::*)()) &google::protobuf::UninterpretedOption::clear_double_value, "C++: google::protobuf::UninterpretedOption::clear_double_value() --> void");
		cl.def("double_value", (double (google::protobuf::UninterpretedOption::*)() const) &google::protobuf::UninterpretedOption::double_value, "C++: google::protobuf::UninterpretedOption::double_value() const --> double");
		cl.def("set_double_value", (void (google::protobuf::UninterpretedOption::*)(double)) &google::protobuf::UninterpretedOption::set_double_value, "C++: google::protobuf::UninterpretedOption::set_double_value(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B197_[void google::protobuf::swap(class google::protobuf::UninterpretedOption &, class google::protobuf::UninterpretedOption &)] ";
}


// File: google/protobuf/descriptor_pb_13.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_13(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B198_[google::protobuf::SourceCodeInfo_Location] ";
	{ // google::protobuf::SourceCodeInfo_Location file:google/protobuf/descriptor.pb.h line:5817
		pybind11::class_<google::protobuf::SourceCodeInfo_Location, std::shared_ptr<google::protobuf::SourceCodeInfo_Location>, google::protobuf::Message> cl(M("google::protobuf"), "SourceCodeInfo_Location", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::SourceCodeInfo_Location(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::SourceCodeInfo_Location const &o){ return new google::protobuf::SourceCodeInfo_Location(o); } ) );
		cl.def("assign", (class google::protobuf::SourceCodeInfo_Location & (google::protobuf::SourceCodeInfo_Location::*)(const class google::protobuf::SourceCodeInfo_Location &)) &google::protobuf::SourceCodeInfo_Location::operator=, "C++: google::protobuf::SourceCodeInfo_Location::operator=(const class google::protobuf::SourceCodeInfo_Location &) --> class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::unknown_fields, "C++: google::protobuf::SourceCodeInfo_Location::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::mutable_unknown_fields, "C++: google::protobuf::SourceCodeInfo_Location::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::SourceCodeInfo_Location::descriptor, "C++: google::protobuf::SourceCodeInfo_Location::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::SourceCodeInfo_Location::GetDescriptor, "C++: google::protobuf::SourceCodeInfo_Location::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::SourceCodeInfo_Location::GetReflection, "C++: google::protobuf::SourceCodeInfo_Location::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::SourceCodeInfo_Location & (*)()) &google::protobuf::SourceCodeInfo_Location::default_instance, "C++: google::protobuf::SourceCodeInfo_Location::default_instance() --> const class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::SourceCodeInfo_Location * (*)()) &google::protobuf::SourceCodeInfo_Location::internal_default_instance, "C++: google::protobuf::SourceCodeInfo_Location::internal_default_instance() --> const class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::SourceCodeInfo_Location::*)(class google::protobuf::SourceCodeInfo_Location *)) &google::protobuf::SourceCodeInfo_Location::Swap, "C++: google::protobuf::SourceCodeInfo_Location::Swap(class google::protobuf::SourceCodeInfo_Location *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::SourceCodeInfo_Location::*)(class google::protobuf::SourceCodeInfo_Location *)) &google::protobuf::SourceCodeInfo_Location::UnsafeArenaSwap, "C++: google::protobuf::SourceCodeInfo_Location::UnsafeArenaSwap(class google::protobuf::SourceCodeInfo_Location *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::New, "C++: google::protobuf::SourceCodeInfo_Location::New() const --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::SourceCodeInfo_Location::*)(class google::protobuf::Arena *) const) &google::protobuf::SourceCodeInfo_Location::New, "C++: google::protobuf::SourceCodeInfo_Location::New(class google::protobuf::Arena *) const --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::SourceCodeInfo_Location::*)(const class google::protobuf::Message &)) &google::protobuf::SourceCodeInfo_Location::CopyFrom, "C++: google::protobuf::SourceCodeInfo_Location::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::SourceCodeInfo_Location::*)(const class google::protobuf::Message &)) &google::protobuf::SourceCodeInfo_Location::MergeFrom, "C++: google::protobuf::SourceCodeInfo_Location::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::SourceCodeInfo_Location::*)(const class google::protobuf::SourceCodeInfo_Location &)) &google::protobuf::SourceCodeInfo_Location::CopyFrom, "C++: google::protobuf::SourceCodeInfo_Location::CopyFrom(const class google::protobuf::SourceCodeInfo_Location &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::SourceCodeInfo_Location::*)(const class google::protobuf::SourceCodeInfo_Location &)) &google::protobuf::SourceCodeInfo_Location::MergeFrom, "C++: google::protobuf::SourceCodeInfo_Location::MergeFrom(const class google::protobuf::SourceCodeInfo_Location &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::Clear, "C++: google::protobuf::SourceCodeInfo_Location::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::IsInitialized, "C++: google::protobuf::SourceCodeInfo_Location::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::ByteSizeLong, "C++: google::protobuf::SourceCodeInfo_Location::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::SourceCodeInfo_Location::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::SourceCodeInfo_Location::_InternalParse, "C++: google::protobuf::SourceCodeInfo_Location::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::SourceCodeInfo_Location::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::SourceCodeInfo_Location::_InternalSerialize, "C++: google::protobuf::SourceCodeInfo_Location::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::GetCachedSize, "C++: google::protobuf::SourceCodeInfo_Location::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::GetMetadata, "C++: google::protobuf::SourceCodeInfo_Location::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("path_size", (int (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::path_size, "C++: google::protobuf::SourceCodeInfo_Location::path_size() const --> int");
		cl.def("clear_path", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::clear_path, "C++: google::protobuf::SourceCodeInfo_Location::clear_path() --> void");
		cl.def("path", (int (google::protobuf::SourceCodeInfo_Location::*)(int) const) &google::protobuf::SourceCodeInfo_Location::path, "C++: google::protobuf::SourceCodeInfo_Location::path(int) const --> int", pybind11::arg("index"));
		cl.def("set_path", (void (google::protobuf::SourceCodeInfo_Location::*)(int, int)) &google::protobuf::SourceCodeInfo_Location::set_path, "C++: google::protobuf::SourceCodeInfo_Location::set_path(int, int) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_path", (void (google::protobuf::SourceCodeInfo_Location::*)(int)) &google::protobuf::SourceCodeInfo_Location::add_path, "C++: google::protobuf::SourceCodeInfo_Location::add_path(int) --> void", pybind11::arg("value"));
		cl.def("path", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::path, "C++: google::protobuf::SourceCodeInfo_Location::path() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_path", (class google::protobuf::RepeatedField<google::protobuf::int32> * (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::mutable_path, "C++: google::protobuf::SourceCodeInfo_Location::mutable_path() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("span_size", (int (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::span_size, "C++: google::protobuf::SourceCodeInfo_Location::span_size() const --> int");
		cl.def("clear_span", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::clear_span, "C++: google::protobuf::SourceCodeInfo_Location::clear_span() --> void");
		cl.def("span", (int (google::protobuf::SourceCodeInfo_Location::*)(int) const) &google::protobuf::SourceCodeInfo_Location::span, "C++: google::protobuf::SourceCodeInfo_Location::span(int) const --> int", pybind11::arg("index"));
		cl.def("set_span", (void (google::protobuf::SourceCodeInfo_Location::*)(int, int)) &google::protobuf::SourceCodeInfo_Location::set_span, "C++: google::protobuf::SourceCodeInfo_Location::set_span(int, int) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_span", (void (google::protobuf::SourceCodeInfo_Location::*)(int)) &google::protobuf::SourceCodeInfo_Location::add_span, "C++: google::protobuf::SourceCodeInfo_Location::add_span(int) --> void", pybind11::arg("value"));
		cl.def("span", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::span, "C++: google::protobuf::SourceCodeInfo_Location::span() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_span", (class google::protobuf::RepeatedField<google::protobuf::int32> * (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::mutable_span, "C++: google::protobuf::SourceCodeInfo_Location::mutable_span() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("leading_detached_comments_size", (int (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::leading_detached_comments_size, "C++: google::protobuf::SourceCodeInfo_Location::leading_detached_comments_size() const --> int");
		cl.def("clear_leading_detached_comments", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::clear_leading_detached_comments, "C++: google::protobuf::SourceCodeInfo_Location::clear_leading_detached_comments() --> void");
		cl.def("set_leading_detached_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(int, const char *)) &google::protobuf::SourceCodeInfo_Location::set_leading_detached_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_leading_detached_comments(int, const char *) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("set_leading_detached_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(int, const char *, unsigned long)) &google::protobuf::SourceCodeInfo_Location::set_leading_detached_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_leading_detached_comments(int, const char *, unsigned long) --> void", pybind11::arg("index"), pybind11::arg("value"), pybind11::arg("size"));
		cl.def("add_leading_detached_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *)) &google::protobuf::SourceCodeInfo_Location::add_leading_detached_comments, "C++: google::protobuf::SourceCodeInfo_Location::add_leading_detached_comments(const char *) --> void", pybind11::arg("value"));
		cl.def("add_leading_detached_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *, unsigned long)) &google::protobuf::SourceCodeInfo_Location::add_leading_detached_comments, "C++: google::protobuf::SourceCodeInfo_Location::add_leading_detached_comments(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_leading_comments", (bool (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::has_leading_comments, "C++: google::protobuf::SourceCodeInfo_Location::has_leading_comments() const --> bool");
		cl.def("clear_leading_comments", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::clear_leading_comments, "C++: google::protobuf::SourceCodeInfo_Location::clear_leading_comments() --> void");
		cl.def("set_leading_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *)) &google::protobuf::SourceCodeInfo_Location::set_leading_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_leading_comments(const char *) --> void", pybind11::arg("value"));
		cl.def("set_leading_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *, unsigned long)) &google::protobuf::SourceCodeInfo_Location::set_leading_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_leading_comments(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_trailing_comments", (bool (google::protobuf::SourceCodeInfo_Location::*)() const) &google::protobuf::SourceCodeInfo_Location::has_trailing_comments, "C++: google::protobuf::SourceCodeInfo_Location::has_trailing_comments() const --> bool");
		cl.def("clear_trailing_comments", (void (google::protobuf::SourceCodeInfo_Location::*)()) &google::protobuf::SourceCodeInfo_Location::clear_trailing_comments, "C++: google::protobuf::SourceCodeInfo_Location::clear_trailing_comments() --> void");
		cl.def("set_trailing_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *)) &google::protobuf::SourceCodeInfo_Location::set_trailing_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_trailing_comments(const char *) --> void", pybind11::arg("value"));
		cl.def("set_trailing_comments", (void (google::protobuf::SourceCodeInfo_Location::*)(const char *, unsigned long)) &google::protobuf::SourceCodeInfo_Location::set_trailing_comments, "C++: google::protobuf::SourceCodeInfo_Location::set_trailing_comments(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
	}
	std::cout << "B199_[void google::protobuf::swap(class google::protobuf::SourceCodeInfo_Location &, class google::protobuf::SourceCodeInfo_Location &)] ";
}


// File: google/protobuf/descriptor_pb_14.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Label
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldDescriptorProto_Type
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_CType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions_JSType
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions_OptimizeMode
#include <google/protobuf/descriptor.pb.h> // google::protobuf::GeneratedCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::GeneratedCodeInfo_Annotation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::GetEnumDescriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions_IdempotencyLevel
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo_Location
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/descriptor.pb.h> // google::protobuf::is_proto_enum
#include <google/protobuf/descriptor.pb.h> // google::protobuf::swap
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::CodedInputStream
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/io/zero_copy_stream.h> // google::protobuf::io::ZeroCopyInputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_google_protobuf_descriptor_pb_14(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B200_[google::protobuf::SourceCodeInfo] ";
	{ // google::protobuf::SourceCodeInfo file:google/protobuf/descriptor.pb.h line:6071
		pybind11::class_<google::protobuf::SourceCodeInfo, std::shared_ptr<google::protobuf::SourceCodeInfo>, google::protobuf::Message> cl(M("google::protobuf"), "SourceCodeInfo", "");
		cl.def( pybind11::init( [](){ return new google::protobuf::SourceCodeInfo(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](google::protobuf::SourceCodeInfo const &o){ return new google::protobuf::SourceCodeInfo(o); } ) );
		cl.def("assign", (class google::protobuf::SourceCodeInfo & (google::protobuf::SourceCodeInfo::*)(const class google::protobuf::SourceCodeInfo &)) &google::protobuf::SourceCodeInfo::operator=, "C++: google::protobuf::SourceCodeInfo::operator=(const class google::protobuf::SourceCodeInfo &) --> class google::protobuf::SourceCodeInfo &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def("unknown_fields", (const class google::protobuf::UnknownFieldSet & (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::unknown_fields, "C++: google::protobuf::SourceCodeInfo::unknown_fields() const --> const class google::protobuf::UnknownFieldSet &", pybind11::return_value_policy::automatic);
		cl.def("mutable_unknown_fields", (class google::protobuf::UnknownFieldSet * (google::protobuf::SourceCodeInfo::*)()) &google::protobuf::SourceCodeInfo::mutable_unknown_fields, "C++: google::protobuf::SourceCodeInfo::mutable_unknown_fields() --> class google::protobuf::UnknownFieldSet *", pybind11::return_value_policy::reference);
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::SourceCodeInfo::descriptor, "C++: google::protobuf::SourceCodeInfo::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &google::protobuf::SourceCodeInfo::GetDescriptor, "C++: google::protobuf::SourceCodeInfo::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &google::protobuf::SourceCodeInfo::GetReflection, "C++: google::protobuf::SourceCodeInfo::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class google::protobuf::SourceCodeInfo & (*)()) &google::protobuf::SourceCodeInfo::default_instance, "C++: google::protobuf::SourceCodeInfo::default_instance() --> const class google::protobuf::SourceCodeInfo &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class google::protobuf::SourceCodeInfo * (*)()) &google::protobuf::SourceCodeInfo::internal_default_instance, "C++: google::protobuf::SourceCodeInfo::internal_default_instance() --> const class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (google::protobuf::SourceCodeInfo::*)(class google::protobuf::SourceCodeInfo *)) &google::protobuf::SourceCodeInfo::Swap, "C++: google::protobuf::SourceCodeInfo::Swap(class google::protobuf::SourceCodeInfo *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (google::protobuf::SourceCodeInfo::*)(class google::protobuf::SourceCodeInfo *)) &google::protobuf::SourceCodeInfo::UnsafeArenaSwap, "C++: google::protobuf::SourceCodeInfo::UnsafeArenaSwap(class google::protobuf::SourceCodeInfo *) --> void", pybind11::arg("other"));
		cl.def("New", (class google::protobuf::SourceCodeInfo * (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::New, "C++: google::protobuf::SourceCodeInfo::New() const --> class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::reference);
		cl.def("New", (class google::protobuf::SourceCodeInfo * (google::protobuf::SourceCodeInfo::*)(class google::protobuf::Arena *) const) &google::protobuf::SourceCodeInfo::New, "C++: google::protobuf::SourceCodeInfo::New(class google::protobuf::Arena *) const --> class google::protobuf::SourceCodeInfo *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (google::protobuf::SourceCodeInfo::*)(const class google::protobuf::Message &)) &google::protobuf::SourceCodeInfo::CopyFrom, "C++: google::protobuf::SourceCodeInfo::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::SourceCodeInfo::*)(const class google::protobuf::Message &)) &google::protobuf::SourceCodeInfo::MergeFrom, "C++: google::protobuf::SourceCodeInfo::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (google::protobuf::SourceCodeInfo::*)(const class google::protobuf::SourceCodeInfo &)) &google::protobuf::SourceCodeInfo::CopyFrom, "C++: google::protobuf::SourceCodeInfo::CopyFrom(const class google::protobuf::SourceCodeInfo &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (google::protobuf::SourceCodeInfo::*)(const class google::protobuf::SourceCodeInfo &)) &google::protobuf::SourceCodeInfo::MergeFrom, "C++: google::protobuf::SourceCodeInfo::MergeFrom(const class google::protobuf::SourceCodeInfo &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (google::protobuf::SourceCodeInfo::*)()) &google::protobuf::SourceCodeInfo::Clear, "C++: google::protobuf::SourceCodeInfo::Clear() --> void");
		cl.def("IsInitialized", (bool (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::IsInitialized, "C++: google::protobuf::SourceCodeInfo::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::ByteSizeLong, "C++: google::protobuf::SourceCodeInfo::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (google::protobuf::SourceCodeInfo::*)(const char *, class google::protobuf::internal::ParseContext *)) &google::protobuf::SourceCodeInfo::_InternalParse, "C++: google::protobuf::SourceCodeInfo::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (google::protobuf::SourceCodeInfo::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &google::protobuf::SourceCodeInfo::_InternalSerialize, "C++: google::protobuf::SourceCodeInfo::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::GetCachedSize, "C++: google::protobuf::SourceCodeInfo::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::GetMetadata, "C++: google::protobuf::SourceCodeInfo::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("location_size", (int (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::location_size, "C++: google::protobuf::SourceCodeInfo::location_size() const --> int");
		cl.def("clear_location", (void (google::protobuf::SourceCodeInfo::*)()) &google::protobuf::SourceCodeInfo::clear_location, "C++: google::protobuf::SourceCodeInfo::clear_location() --> void");
		cl.def("mutable_location", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::SourceCodeInfo::*)(int)) &google::protobuf::SourceCodeInfo::mutable_location, "C++: google::protobuf::SourceCodeInfo::mutable_location(int) --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_location", (class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> * (google::protobuf::SourceCodeInfo::*)()) &google::protobuf::SourceCodeInfo::mutable_location, "C++: google::protobuf::SourceCodeInfo::mutable_location() --> class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> *", pybind11::return_value_policy::reference);
		cl.def("location", (const class google::protobuf::SourceCodeInfo_Location & (google::protobuf::SourceCodeInfo::*)(int) const) &google::protobuf::SourceCodeInfo::location, "C++: google::protobuf::SourceCodeInfo::location(int) const --> const class google::protobuf::SourceCodeInfo_Location &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_location", (class google::protobuf::SourceCodeInfo_Location * (google::protobuf::SourceCodeInfo::*)()) &google::protobuf::SourceCodeInfo::add_location, "C++: google::protobuf::SourceCodeInfo::add_location() --> class google::protobuf::SourceCodeInfo_Location *", pybind11::return_value_policy::reference);
		cl.def("location", (const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> & (google::protobuf::SourceCodeInfo::*)() const) &google::protobuf::SourceCodeInfo::location, "C++: google::protobuf::SourceCodeInfo::location() const --> const class google::protobuf::RepeatedPtrField<class google::protobuf::SourceCodeInfo_Location> &", pybind11::return_value_policy::automatic);
	}
	std::cout << "B201_[void google::protobuf::swap(class google::protobuf::SourceCodeInfo &, class google::protobuf::SourceCodeInfo &)] ";
	std::cout << "B202_[google::protobuf::GeneratedCodeInfo_Annotation] ";
	std::cout << "B203_[void google::protobuf::swap(class google::protobuf::GeneratedCodeInfo_Annotation &, class google::protobuf::GeneratedCodeInfo_Annotation &)] ";
	std::cout << "B204_[google::protobuf::GeneratedCodeInfo] ";
	std::cout << "B205_[void google::protobuf::swap(class google::protobuf::GeneratedCodeInfo &, class google::protobuf::GeneratedCodeInfo &)] ";
	std::cout << "B206_[google::protobuf::is_proto_enum<google::protobuf::FieldDescriptorProto_Type>] ";
	std::cout << "B207_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::FieldDescriptorProto_Type>()] ";
	std::cout << "B208_[google::protobuf::is_proto_enum<google::protobuf::FieldDescriptorProto_Label>] ";
	std::cout << "B209_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::FieldDescriptorProto_Label>()] ";
	std::cout << "B210_[google::protobuf::is_proto_enum<google::protobuf::FileOptions_OptimizeMode>] ";
	std::cout << "B211_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::FileOptions_OptimizeMode>()] ";
	std::cout << "B212_[google::protobuf::is_proto_enum<google::protobuf::FieldOptions_CType>] ";
	std::cout << "B213_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::FieldOptions_CType>()] ";
	std::cout << "B214_[google::protobuf::is_proto_enum<google::protobuf::FieldOptions_JSType>] ";
	std::cout << "B215_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::FieldOptions_JSType>()] ";
	std::cout << "B216_[google::protobuf::is_proto_enum<google::protobuf::MethodOptions_IdempotencyLevel>] ";
	std::cout << "B217_[const class google::protobuf::EnumDescriptor * google::protobuf::GetEnumDescriptor<google::protobuf::MethodOptions_IdempotencyLevel>()] ";
}


// File: unknown/unknown.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B218_[osi3::InterfaceVersion] ";
	{ // osi3::InterfaceVersion file: line:70
		pybind11::class_<osi3::InterfaceVersion, std::shared_ptr<osi3::InterfaceVersion>, google::protobuf::Message> cl(M("osi3"), "InterfaceVersion", "");
		cl.def( pybind11::init( [](){ return new osi3::InterfaceVersion(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::InterfaceVersion const &o){ return new osi3::InterfaceVersion(o); } ) );
		cl.def("assign", (class osi3::InterfaceVersion & (osi3::InterfaceVersion::*)(const class osi3::InterfaceVersion &)) &osi3::InterfaceVersion::operator=, "C++: osi3::InterfaceVersion::operator=(const class osi3::InterfaceVersion &) --> class osi3::InterfaceVersion &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::InterfaceVersion::descriptor, "C++: osi3::InterfaceVersion::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::InterfaceVersion::GetDescriptor, "C++: osi3::InterfaceVersion::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::InterfaceVersion::GetReflection, "C++: osi3::InterfaceVersion::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::InterfaceVersion & (*)()) &osi3::InterfaceVersion::default_instance, "C++: osi3::InterfaceVersion::default_instance() --> const class osi3::InterfaceVersion &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::InterfaceVersion * (*)()) &osi3::InterfaceVersion::internal_default_instance, "C++: osi3::InterfaceVersion::internal_default_instance() --> const class osi3::InterfaceVersion *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::InterfaceVersion::*)(class osi3::InterfaceVersion *)) &osi3::InterfaceVersion::Swap, "C++: osi3::InterfaceVersion::Swap(class osi3::InterfaceVersion *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::InterfaceVersion::*)(class osi3::InterfaceVersion *)) &osi3::InterfaceVersion::UnsafeArenaSwap, "C++: osi3::InterfaceVersion::UnsafeArenaSwap(class osi3::InterfaceVersion *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::InterfaceVersion * (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::New, "C++: osi3::InterfaceVersion::New() const --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::InterfaceVersion * (osi3::InterfaceVersion::*)(class google::protobuf::Arena *) const) &osi3::InterfaceVersion::New, "C++: osi3::InterfaceVersion::New(class google::protobuf::Arena *) const --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::InterfaceVersion::*)(const class google::protobuf::Message &)) &osi3::InterfaceVersion::CopyFrom, "C++: osi3::InterfaceVersion::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::InterfaceVersion::*)(const class google::protobuf::Message &)) &osi3::InterfaceVersion::MergeFrom, "C++: osi3::InterfaceVersion::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::InterfaceVersion::*)(const class osi3::InterfaceVersion &)) &osi3::InterfaceVersion::CopyFrom, "C++: osi3::InterfaceVersion::CopyFrom(const class osi3::InterfaceVersion &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::InterfaceVersion::*)(const class osi3::InterfaceVersion &)) &osi3::InterfaceVersion::MergeFrom, "C++: osi3::InterfaceVersion::MergeFrom(const class osi3::InterfaceVersion &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::InterfaceVersion::*)()) &osi3::InterfaceVersion::Clear, "C++: osi3::InterfaceVersion::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::IsInitialized, "C++: osi3::InterfaceVersion::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::ByteSizeLong, "C++: osi3::InterfaceVersion::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::InterfaceVersion::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::InterfaceVersion::_InternalParse, "C++: osi3::InterfaceVersion::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::InterfaceVersion::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::InterfaceVersion::_InternalSerialize, "C++: osi3::InterfaceVersion::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::GetCachedSize, "C++: osi3::InterfaceVersion::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::GetMetadata, "C++: osi3::InterfaceVersion::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_version_major", (void (osi3::InterfaceVersion::*)()) &osi3::InterfaceVersion::clear_version_major, "C++: osi3::InterfaceVersion::clear_version_major() --> void");
		cl.def("version_major", (unsigned int (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::version_major, "C++: osi3::InterfaceVersion::version_major() const --> unsigned int");
		cl.def("set_version_major", (void (osi3::InterfaceVersion::*)(unsigned int)) &osi3::InterfaceVersion::set_version_major, "C++: osi3::InterfaceVersion::set_version_major(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_version_minor", (void (osi3::InterfaceVersion::*)()) &osi3::InterfaceVersion::clear_version_minor, "C++: osi3::InterfaceVersion::clear_version_minor() --> void");
		cl.def("version_minor", (unsigned int (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::version_minor, "C++: osi3::InterfaceVersion::version_minor() const --> unsigned int");
		cl.def("set_version_minor", (void (osi3::InterfaceVersion::*)(unsigned int)) &osi3::InterfaceVersion::set_version_minor, "C++: osi3::InterfaceVersion::set_version_minor(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_version_patch", (void (osi3::InterfaceVersion::*)()) &osi3::InterfaceVersion::clear_version_patch, "C++: osi3::InterfaceVersion::clear_version_patch() --> void");
		cl.def("version_patch", (unsigned int (osi3::InterfaceVersion::*)() const) &osi3::InterfaceVersion::version_patch, "C++: osi3::InterfaceVersion::version_patch() const --> unsigned int");
		cl.def("set_version_patch", (void (osi3::InterfaceVersion::*)(unsigned int)) &osi3::InterfaceVersion::set_version_patch, "C++: osi3::InterfaceVersion::set_version_patch(unsigned int) --> void", pybind11::arg("value"));
	}
	std::cout << "B219_[void osi3::swap(class osi3::InterfaceVersion &, class osi3::InterfaceVersion &)] ";
}


// File: unknown/unknown_1.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_1(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B220_[osi3::Vector3d] ";
	{ // osi3::Vector3d file: line:113
		pybind11::class_<osi3::Vector3d, std::shared_ptr<osi3::Vector3d>, google::protobuf::Message> cl(M("osi3"), "Vector3d", "");
		cl.def( pybind11::init( [](){ return new osi3::Vector3d(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Vector3d const &o){ return new osi3::Vector3d(o); } ) );
		cl.def("assign", (class osi3::Vector3d & (osi3::Vector3d::*)(const class osi3::Vector3d &)) &osi3::Vector3d::operator=, "C++: osi3::Vector3d::operator=(const class osi3::Vector3d &) --> class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Vector3d::descriptor, "C++: osi3::Vector3d::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Vector3d::GetDescriptor, "C++: osi3::Vector3d::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Vector3d::GetReflection, "C++: osi3::Vector3d::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Vector3d & (*)()) &osi3::Vector3d::default_instance, "C++: osi3::Vector3d::default_instance() --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Vector3d * (*)()) &osi3::Vector3d::internal_default_instance, "C++: osi3::Vector3d::internal_default_instance() --> const class osi3::Vector3d *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Vector3d::*)(class osi3::Vector3d *)) &osi3::Vector3d::Swap, "C++: osi3::Vector3d::Swap(class osi3::Vector3d *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Vector3d::*)(class osi3::Vector3d *)) &osi3::Vector3d::UnsafeArenaSwap, "C++: osi3::Vector3d::UnsafeArenaSwap(class osi3::Vector3d *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Vector3d * (osi3::Vector3d::*)() const) &osi3::Vector3d::New, "C++: osi3::Vector3d::New() const --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Vector3d * (osi3::Vector3d::*)(class google::protobuf::Arena *) const) &osi3::Vector3d::New, "C++: osi3::Vector3d::New(class google::protobuf::Arena *) const --> class osi3::Vector3d *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Vector3d::*)(const class google::protobuf::Message &)) &osi3::Vector3d::CopyFrom, "C++: osi3::Vector3d::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Vector3d::*)(const class google::protobuf::Message &)) &osi3::Vector3d::MergeFrom, "C++: osi3::Vector3d::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Vector3d::*)(const class osi3::Vector3d &)) &osi3::Vector3d::CopyFrom, "C++: osi3::Vector3d::CopyFrom(const class osi3::Vector3d &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Vector3d::*)(const class osi3::Vector3d &)) &osi3::Vector3d::MergeFrom, "C++: osi3::Vector3d::MergeFrom(const class osi3::Vector3d &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Vector3d::*)()) &osi3::Vector3d::Clear, "C++: osi3::Vector3d::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Vector3d::*)() const) &osi3::Vector3d::IsInitialized, "C++: osi3::Vector3d::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Vector3d::*)() const) &osi3::Vector3d::ByteSizeLong, "C++: osi3::Vector3d::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Vector3d::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Vector3d::_InternalParse, "C++: osi3::Vector3d::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Vector3d::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Vector3d::_InternalSerialize, "C++: osi3::Vector3d::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Vector3d::*)() const) &osi3::Vector3d::GetCachedSize, "C++: osi3::Vector3d::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Vector3d::*)() const) &osi3::Vector3d::GetMetadata, "C++: osi3::Vector3d::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_x", (void (osi3::Vector3d::*)()) &osi3::Vector3d::clear_x, "C++: osi3::Vector3d::clear_x() --> void");
		cl.def("x", (double (osi3::Vector3d::*)() const) &osi3::Vector3d::x, "C++: osi3::Vector3d::x() const --> double");
		cl.def("set_x", (void (osi3::Vector3d::*)(double)) &osi3::Vector3d::set_x, "C++: osi3::Vector3d::set_x(double) --> void", pybind11::arg("value"));
		cl.def("clear_y", (void (osi3::Vector3d::*)()) &osi3::Vector3d::clear_y, "C++: osi3::Vector3d::clear_y() --> void");
		cl.def("y", (double (osi3::Vector3d::*)() const) &osi3::Vector3d::y, "C++: osi3::Vector3d::y() const --> double");
		cl.def("set_y", (void (osi3::Vector3d::*)(double)) &osi3::Vector3d::set_y, "C++: osi3::Vector3d::set_y(double) --> void", pybind11::arg("value"));
		cl.def("clear_z", (void (osi3::Vector3d::*)()) &osi3::Vector3d::clear_z, "C++: osi3::Vector3d::clear_z() --> void");
		cl.def("z", (double (osi3::Vector3d::*)() const) &osi3::Vector3d::z, "C++: osi3::Vector3d::z() const --> double");
		cl.def("set_z", (void (osi3::Vector3d::*)(double)) &osi3::Vector3d::set_z, "C++: osi3::Vector3d::set_z(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B221_[void osi3::swap(class osi3::Vector3d &, class osi3::Vector3d &)] ";
	std::cout << "B222_[osi3::Vector2d] ";
	{ // osi3::Vector2d file: line:272
		pybind11::class_<osi3::Vector2d, std::shared_ptr<osi3::Vector2d>, google::protobuf::Message> cl(M("osi3"), "Vector2d", "");
		cl.def( pybind11::init( [](){ return new osi3::Vector2d(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Vector2d const &o){ return new osi3::Vector2d(o); } ) );
		cl.def("assign", (class osi3::Vector2d & (osi3::Vector2d::*)(const class osi3::Vector2d &)) &osi3::Vector2d::operator=, "C++: osi3::Vector2d::operator=(const class osi3::Vector2d &) --> class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Vector2d::descriptor, "C++: osi3::Vector2d::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Vector2d::GetDescriptor, "C++: osi3::Vector2d::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Vector2d::GetReflection, "C++: osi3::Vector2d::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Vector2d & (*)()) &osi3::Vector2d::default_instance, "C++: osi3::Vector2d::default_instance() --> const class osi3::Vector2d &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Vector2d * (*)()) &osi3::Vector2d::internal_default_instance, "C++: osi3::Vector2d::internal_default_instance() --> const class osi3::Vector2d *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Vector2d::*)(class osi3::Vector2d *)) &osi3::Vector2d::Swap, "C++: osi3::Vector2d::Swap(class osi3::Vector2d *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Vector2d::*)(class osi3::Vector2d *)) &osi3::Vector2d::UnsafeArenaSwap, "C++: osi3::Vector2d::UnsafeArenaSwap(class osi3::Vector2d *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Vector2d * (osi3::Vector2d::*)() const) &osi3::Vector2d::New, "C++: osi3::Vector2d::New() const --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Vector2d * (osi3::Vector2d::*)(class google::protobuf::Arena *) const) &osi3::Vector2d::New, "C++: osi3::Vector2d::New(class google::protobuf::Arena *) const --> class osi3::Vector2d *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Vector2d::*)(const class google::protobuf::Message &)) &osi3::Vector2d::CopyFrom, "C++: osi3::Vector2d::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Vector2d::*)(const class google::protobuf::Message &)) &osi3::Vector2d::MergeFrom, "C++: osi3::Vector2d::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Vector2d::*)(const class osi3::Vector2d &)) &osi3::Vector2d::CopyFrom, "C++: osi3::Vector2d::CopyFrom(const class osi3::Vector2d &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Vector2d::*)(const class osi3::Vector2d &)) &osi3::Vector2d::MergeFrom, "C++: osi3::Vector2d::MergeFrom(const class osi3::Vector2d &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Vector2d::*)()) &osi3::Vector2d::Clear, "C++: osi3::Vector2d::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Vector2d::*)() const) &osi3::Vector2d::IsInitialized, "C++: osi3::Vector2d::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Vector2d::*)() const) &osi3::Vector2d::ByteSizeLong, "C++: osi3::Vector2d::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Vector2d::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Vector2d::_InternalParse, "C++: osi3::Vector2d::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Vector2d::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Vector2d::_InternalSerialize, "C++: osi3::Vector2d::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Vector2d::*)() const) &osi3::Vector2d::GetCachedSize, "C++: osi3::Vector2d::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Vector2d::*)() const) &osi3::Vector2d::GetMetadata, "C++: osi3::Vector2d::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_x", (void (osi3::Vector2d::*)()) &osi3::Vector2d::clear_x, "C++: osi3::Vector2d::clear_x() --> void");
		cl.def("x", (double (osi3::Vector2d::*)() const) &osi3::Vector2d::x, "C++: osi3::Vector2d::x() const --> double");
		cl.def("set_x", (void (osi3::Vector2d::*)(double)) &osi3::Vector2d::set_x, "C++: osi3::Vector2d::set_x(double) --> void", pybind11::arg("value"));
		cl.def("clear_y", (void (osi3::Vector2d::*)()) &osi3::Vector2d::clear_y, "C++: osi3::Vector2d::clear_y() --> void");
		cl.def("y", (double (osi3::Vector2d::*)() const) &osi3::Vector2d::y, "C++: osi3::Vector2d::y() const --> double");
		cl.def("set_y", (void (osi3::Vector2d::*)(double)) &osi3::Vector2d::set_y, "C++: osi3::Vector2d::set_y(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B223_[void osi3::swap(class osi3::Vector2d &, class osi3::Vector2d &)] ";
	std::cout << "B224_[osi3::Timestamp] ";
	{ // osi3::Timestamp file: line:420
		pybind11::class_<osi3::Timestamp, std::shared_ptr<osi3::Timestamp>, google::protobuf::Message> cl(M("osi3"), "Timestamp", "");
		cl.def( pybind11::init( [](){ return new osi3::Timestamp(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Timestamp const &o){ return new osi3::Timestamp(o); } ) );
		cl.def("assign", (class osi3::Timestamp & (osi3::Timestamp::*)(const class osi3::Timestamp &)) &osi3::Timestamp::operator=, "C++: osi3::Timestamp::operator=(const class osi3::Timestamp &) --> class osi3::Timestamp &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Timestamp::descriptor, "C++: osi3::Timestamp::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Timestamp::GetDescriptor, "C++: osi3::Timestamp::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Timestamp::GetReflection, "C++: osi3::Timestamp::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Timestamp & (*)()) &osi3::Timestamp::default_instance, "C++: osi3::Timestamp::default_instance() --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Timestamp * (*)()) &osi3::Timestamp::internal_default_instance, "C++: osi3::Timestamp::internal_default_instance() --> const class osi3::Timestamp *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Timestamp::*)(class osi3::Timestamp *)) &osi3::Timestamp::Swap, "C++: osi3::Timestamp::Swap(class osi3::Timestamp *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Timestamp::*)(class osi3::Timestamp *)) &osi3::Timestamp::UnsafeArenaSwap, "C++: osi3::Timestamp::UnsafeArenaSwap(class osi3::Timestamp *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Timestamp * (osi3::Timestamp::*)() const) &osi3::Timestamp::New, "C++: osi3::Timestamp::New() const --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Timestamp * (osi3::Timestamp::*)(class google::protobuf::Arena *) const) &osi3::Timestamp::New, "C++: osi3::Timestamp::New(class google::protobuf::Arena *) const --> class osi3::Timestamp *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Timestamp::*)(const class google::protobuf::Message &)) &osi3::Timestamp::CopyFrom, "C++: osi3::Timestamp::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Timestamp::*)(const class google::protobuf::Message &)) &osi3::Timestamp::MergeFrom, "C++: osi3::Timestamp::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Timestamp::*)(const class osi3::Timestamp &)) &osi3::Timestamp::CopyFrom, "C++: osi3::Timestamp::CopyFrom(const class osi3::Timestamp &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Timestamp::*)(const class osi3::Timestamp &)) &osi3::Timestamp::MergeFrom, "C++: osi3::Timestamp::MergeFrom(const class osi3::Timestamp &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Timestamp::*)()) &osi3::Timestamp::Clear, "C++: osi3::Timestamp::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Timestamp::*)() const) &osi3::Timestamp::IsInitialized, "C++: osi3::Timestamp::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Timestamp::*)() const) &osi3::Timestamp::ByteSizeLong, "C++: osi3::Timestamp::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Timestamp::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Timestamp::_InternalParse, "C++: osi3::Timestamp::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Timestamp::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Timestamp::_InternalSerialize, "C++: osi3::Timestamp::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Timestamp::*)() const) &osi3::Timestamp::GetCachedSize, "C++: osi3::Timestamp::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Timestamp::*)() const) &osi3::Timestamp::GetMetadata, "C++: osi3::Timestamp::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_seconds", (void (osi3::Timestamp::*)()) &osi3::Timestamp::clear_seconds, "C++: osi3::Timestamp::clear_seconds() --> void");
		cl.def("seconds", (long (osi3::Timestamp::*)() const) &osi3::Timestamp::seconds, "C++: osi3::Timestamp::seconds() const --> long");
		cl.def("set_seconds", (void (osi3::Timestamp::*)(long)) &osi3::Timestamp::set_seconds, "C++: osi3::Timestamp::set_seconds(long) --> void", pybind11::arg("value"));
		cl.def("clear_nanos", (void (osi3::Timestamp::*)()) &osi3::Timestamp::clear_nanos, "C++: osi3::Timestamp::clear_nanos() --> void");
		cl.def("nanos", (unsigned int (osi3::Timestamp::*)() const) &osi3::Timestamp::nanos, "C++: osi3::Timestamp::nanos() const --> unsigned int");
		cl.def("set_nanos", (void (osi3::Timestamp::*)(unsigned int)) &osi3::Timestamp::set_nanos, "C++: osi3::Timestamp::set_nanos(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_2.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_2(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B225_[osi3::Dimension3d] ";
	{ // osi3::Dimension3d file: line:568
		pybind11::class_<osi3::Dimension3d, std::shared_ptr<osi3::Dimension3d>, google::protobuf::Message> cl(M("osi3"), "Dimension3d", "");
		cl.def( pybind11::init( [](){ return new osi3::Dimension3d(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Dimension3d const &o){ return new osi3::Dimension3d(o); } ) );
		cl.def("assign", (class osi3::Dimension3d & (osi3::Dimension3d::*)(const class osi3::Dimension3d &)) &osi3::Dimension3d::operator=, "C++: osi3::Dimension3d::operator=(const class osi3::Dimension3d &) --> class osi3::Dimension3d &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Dimension3d::descriptor, "C++: osi3::Dimension3d::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Dimension3d::GetDescriptor, "C++: osi3::Dimension3d::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Dimension3d::GetReflection, "C++: osi3::Dimension3d::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Dimension3d & (*)()) &osi3::Dimension3d::default_instance, "C++: osi3::Dimension3d::default_instance() --> const class osi3::Dimension3d &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Dimension3d * (*)()) &osi3::Dimension3d::internal_default_instance, "C++: osi3::Dimension3d::internal_default_instance() --> const class osi3::Dimension3d *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Dimension3d::*)(class osi3::Dimension3d *)) &osi3::Dimension3d::Swap, "C++: osi3::Dimension3d::Swap(class osi3::Dimension3d *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Dimension3d::*)(class osi3::Dimension3d *)) &osi3::Dimension3d::UnsafeArenaSwap, "C++: osi3::Dimension3d::UnsafeArenaSwap(class osi3::Dimension3d *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Dimension3d * (osi3::Dimension3d::*)() const) &osi3::Dimension3d::New, "C++: osi3::Dimension3d::New() const --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Dimension3d * (osi3::Dimension3d::*)(class google::protobuf::Arena *) const) &osi3::Dimension3d::New, "C++: osi3::Dimension3d::New(class google::protobuf::Arena *) const --> class osi3::Dimension3d *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Dimension3d::*)(const class google::protobuf::Message &)) &osi3::Dimension3d::CopyFrom, "C++: osi3::Dimension3d::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Dimension3d::*)(const class google::protobuf::Message &)) &osi3::Dimension3d::MergeFrom, "C++: osi3::Dimension3d::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Dimension3d::*)(const class osi3::Dimension3d &)) &osi3::Dimension3d::CopyFrom, "C++: osi3::Dimension3d::CopyFrom(const class osi3::Dimension3d &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Dimension3d::*)(const class osi3::Dimension3d &)) &osi3::Dimension3d::MergeFrom, "C++: osi3::Dimension3d::MergeFrom(const class osi3::Dimension3d &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Dimension3d::*)()) &osi3::Dimension3d::Clear, "C++: osi3::Dimension3d::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Dimension3d::*)() const) &osi3::Dimension3d::IsInitialized, "C++: osi3::Dimension3d::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Dimension3d::*)() const) &osi3::Dimension3d::ByteSizeLong, "C++: osi3::Dimension3d::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Dimension3d::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Dimension3d::_InternalParse, "C++: osi3::Dimension3d::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Dimension3d::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Dimension3d::_InternalSerialize, "C++: osi3::Dimension3d::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Dimension3d::*)() const) &osi3::Dimension3d::GetCachedSize, "C++: osi3::Dimension3d::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Dimension3d::*)() const) &osi3::Dimension3d::GetMetadata, "C++: osi3::Dimension3d::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_length", (void (osi3::Dimension3d::*)()) &osi3::Dimension3d::clear_length, "C++: osi3::Dimension3d::clear_length() --> void");
		cl.def("length", (double (osi3::Dimension3d::*)() const) &osi3::Dimension3d::length, "C++: osi3::Dimension3d::length() const --> double");
		cl.def("set_length", (void (osi3::Dimension3d::*)(double)) &osi3::Dimension3d::set_length, "C++: osi3::Dimension3d::set_length(double) --> void", pybind11::arg("value"));
		cl.def("clear_width", (void (osi3::Dimension3d::*)()) &osi3::Dimension3d::clear_width, "C++: osi3::Dimension3d::clear_width() --> void");
		cl.def("width", (double (osi3::Dimension3d::*)() const) &osi3::Dimension3d::width, "C++: osi3::Dimension3d::width() const --> double");
		cl.def("set_width", (void (osi3::Dimension3d::*)(double)) &osi3::Dimension3d::set_width, "C++: osi3::Dimension3d::set_width(double) --> void", pybind11::arg("value"));
		cl.def("clear_height", (void (osi3::Dimension3d::*)()) &osi3::Dimension3d::clear_height, "C++: osi3::Dimension3d::clear_height() --> void");
		cl.def("height", (double (osi3::Dimension3d::*)() const) &osi3::Dimension3d::height, "C++: osi3::Dimension3d::height() const --> double");
		cl.def("set_height", (void (osi3::Dimension3d::*)(double)) &osi3::Dimension3d::set_height, "C++: osi3::Dimension3d::set_height(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B226_[void osi3::swap(class osi3::Dimension3d &, class osi3::Dimension3d &)] ";
	std::cout << "B227_[osi3::Orientation3d] ";
	{ // osi3::Orientation3d file: line:727
		pybind11::class_<osi3::Orientation3d, std::shared_ptr<osi3::Orientation3d>, google::protobuf::Message> cl(M("osi3"), "Orientation3d", "");
		cl.def( pybind11::init( [](){ return new osi3::Orientation3d(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Orientation3d const &o){ return new osi3::Orientation3d(o); } ) );
		cl.def("assign", (class osi3::Orientation3d & (osi3::Orientation3d::*)(const class osi3::Orientation3d &)) &osi3::Orientation3d::operator=, "C++: osi3::Orientation3d::operator=(const class osi3::Orientation3d &) --> class osi3::Orientation3d &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Orientation3d::descriptor, "C++: osi3::Orientation3d::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Orientation3d::GetDescriptor, "C++: osi3::Orientation3d::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Orientation3d::GetReflection, "C++: osi3::Orientation3d::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Orientation3d & (*)()) &osi3::Orientation3d::default_instance, "C++: osi3::Orientation3d::default_instance() --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Orientation3d * (*)()) &osi3::Orientation3d::internal_default_instance, "C++: osi3::Orientation3d::internal_default_instance() --> const class osi3::Orientation3d *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Orientation3d::*)(class osi3::Orientation3d *)) &osi3::Orientation3d::Swap, "C++: osi3::Orientation3d::Swap(class osi3::Orientation3d *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Orientation3d::*)(class osi3::Orientation3d *)) &osi3::Orientation3d::UnsafeArenaSwap, "C++: osi3::Orientation3d::UnsafeArenaSwap(class osi3::Orientation3d *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Orientation3d * (osi3::Orientation3d::*)() const) &osi3::Orientation3d::New, "C++: osi3::Orientation3d::New() const --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Orientation3d * (osi3::Orientation3d::*)(class google::protobuf::Arena *) const) &osi3::Orientation3d::New, "C++: osi3::Orientation3d::New(class google::protobuf::Arena *) const --> class osi3::Orientation3d *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Orientation3d::*)(const class google::protobuf::Message &)) &osi3::Orientation3d::CopyFrom, "C++: osi3::Orientation3d::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Orientation3d::*)(const class google::protobuf::Message &)) &osi3::Orientation3d::MergeFrom, "C++: osi3::Orientation3d::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Orientation3d::*)(const class osi3::Orientation3d &)) &osi3::Orientation3d::CopyFrom, "C++: osi3::Orientation3d::CopyFrom(const class osi3::Orientation3d &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Orientation3d::*)(const class osi3::Orientation3d &)) &osi3::Orientation3d::MergeFrom, "C++: osi3::Orientation3d::MergeFrom(const class osi3::Orientation3d &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Orientation3d::*)()) &osi3::Orientation3d::Clear, "C++: osi3::Orientation3d::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Orientation3d::*)() const) &osi3::Orientation3d::IsInitialized, "C++: osi3::Orientation3d::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Orientation3d::*)() const) &osi3::Orientation3d::ByteSizeLong, "C++: osi3::Orientation3d::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Orientation3d::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Orientation3d::_InternalParse, "C++: osi3::Orientation3d::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Orientation3d::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Orientation3d::_InternalSerialize, "C++: osi3::Orientation3d::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Orientation3d::*)() const) &osi3::Orientation3d::GetCachedSize, "C++: osi3::Orientation3d::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Orientation3d::*)() const) &osi3::Orientation3d::GetMetadata, "C++: osi3::Orientation3d::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_roll", (void (osi3::Orientation3d::*)()) &osi3::Orientation3d::clear_roll, "C++: osi3::Orientation3d::clear_roll() --> void");
		cl.def("roll", (double (osi3::Orientation3d::*)() const) &osi3::Orientation3d::roll, "C++: osi3::Orientation3d::roll() const --> double");
		cl.def("set_roll", (void (osi3::Orientation3d::*)(double)) &osi3::Orientation3d::set_roll, "C++: osi3::Orientation3d::set_roll(double) --> void", pybind11::arg("value"));
		cl.def("clear_pitch", (void (osi3::Orientation3d::*)()) &osi3::Orientation3d::clear_pitch, "C++: osi3::Orientation3d::clear_pitch() --> void");
		cl.def("pitch", (double (osi3::Orientation3d::*)() const) &osi3::Orientation3d::pitch, "C++: osi3::Orientation3d::pitch() const --> double");
		cl.def("set_pitch", (void (osi3::Orientation3d::*)(double)) &osi3::Orientation3d::set_pitch, "C++: osi3::Orientation3d::set_pitch(double) --> void", pybind11::arg("value"));
		cl.def("clear_yaw", (void (osi3::Orientation3d::*)()) &osi3::Orientation3d::clear_yaw, "C++: osi3::Orientation3d::clear_yaw() --> void");
		cl.def("yaw", (double (osi3::Orientation3d::*)() const) &osi3::Orientation3d::yaw, "C++: osi3::Orientation3d::yaw() const --> double");
		cl.def("set_yaw", (void (osi3::Orientation3d::*)(double)) &osi3::Orientation3d::set_yaw, "C++: osi3::Orientation3d::set_yaw(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B228_[void osi3::swap(class osi3::Orientation3d &, class osi3::Orientation3d &)] ";
	std::cout << "B229_[osi3::Identifier] ";
	{ // osi3::Identifier file: line:886
		pybind11::class_<osi3::Identifier, std::shared_ptr<osi3::Identifier>, google::protobuf::Message> cl(M("osi3"), "Identifier", "");
		cl.def( pybind11::init( [](){ return new osi3::Identifier(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Identifier const &o){ return new osi3::Identifier(o); } ) );
		cl.def("assign", (class osi3::Identifier & (osi3::Identifier::*)(const class osi3::Identifier &)) &osi3::Identifier::operator=, "C++: osi3::Identifier::operator=(const class osi3::Identifier &) --> class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Identifier::descriptor, "C++: osi3::Identifier::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Identifier::GetDescriptor, "C++: osi3::Identifier::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Identifier::GetReflection, "C++: osi3::Identifier::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Identifier & (*)()) &osi3::Identifier::default_instance, "C++: osi3::Identifier::default_instance() --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Identifier * (*)()) &osi3::Identifier::internal_default_instance, "C++: osi3::Identifier::internal_default_instance() --> const class osi3::Identifier *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Identifier::*)(class osi3::Identifier *)) &osi3::Identifier::Swap, "C++: osi3::Identifier::Swap(class osi3::Identifier *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Identifier::*)(class osi3::Identifier *)) &osi3::Identifier::UnsafeArenaSwap, "C++: osi3::Identifier::UnsafeArenaSwap(class osi3::Identifier *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Identifier * (osi3::Identifier::*)() const) &osi3::Identifier::New, "C++: osi3::Identifier::New() const --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Identifier * (osi3::Identifier::*)(class google::protobuf::Arena *) const) &osi3::Identifier::New, "C++: osi3::Identifier::New(class google::protobuf::Arena *) const --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Identifier::*)(const class google::protobuf::Message &)) &osi3::Identifier::CopyFrom, "C++: osi3::Identifier::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Identifier::*)(const class google::protobuf::Message &)) &osi3::Identifier::MergeFrom, "C++: osi3::Identifier::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Identifier::*)(const class osi3::Identifier &)) &osi3::Identifier::CopyFrom, "C++: osi3::Identifier::CopyFrom(const class osi3::Identifier &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Identifier::*)(const class osi3::Identifier &)) &osi3::Identifier::MergeFrom, "C++: osi3::Identifier::MergeFrom(const class osi3::Identifier &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Identifier::*)()) &osi3::Identifier::Clear, "C++: osi3::Identifier::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Identifier::*)() const) &osi3::Identifier::IsInitialized, "C++: osi3::Identifier::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Identifier::*)() const) &osi3::Identifier::ByteSizeLong, "C++: osi3::Identifier::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Identifier::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Identifier::_InternalParse, "C++: osi3::Identifier::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Identifier::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Identifier::_InternalSerialize, "C++: osi3::Identifier::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Identifier::*)() const) &osi3::Identifier::GetCachedSize, "C++: osi3::Identifier::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Identifier::*)() const) &osi3::Identifier::GetMetadata, "C++: osi3::Identifier::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_value", (void (osi3::Identifier::*)()) &osi3::Identifier::clear_value, "C++: osi3::Identifier::clear_value() --> void");
		cl.def("value", (unsigned long (osi3::Identifier::*)() const) &osi3::Identifier::value, "C++: osi3::Identifier::value() const --> unsigned long");
		cl.def("set_value", (void (osi3::Identifier::*)(unsigned long)) &osi3::Identifier::set_value, "C++: osi3::Identifier::set_value(unsigned long) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_3.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_3(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B230_[osi3::MountingPosition] ";
	{ // osi3::MountingPosition file: line:1023
		pybind11::class_<osi3::MountingPosition, std::shared_ptr<osi3::MountingPosition>, google::protobuf::Message> cl(M("osi3"), "MountingPosition", "");
		cl.def( pybind11::init( [](){ return new osi3::MountingPosition(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MountingPosition const &o){ return new osi3::MountingPosition(o); } ) );
		cl.def("assign", (class osi3::MountingPosition & (osi3::MountingPosition::*)(const class osi3::MountingPosition &)) &osi3::MountingPosition::operator=, "C++: osi3::MountingPosition::operator=(const class osi3::MountingPosition &) --> class osi3::MountingPosition &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MountingPosition::descriptor, "C++: osi3::MountingPosition::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MountingPosition::GetDescriptor, "C++: osi3::MountingPosition::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MountingPosition::GetReflection, "C++: osi3::MountingPosition::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MountingPosition & (*)()) &osi3::MountingPosition::default_instance, "C++: osi3::MountingPosition::default_instance() --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MountingPosition * (*)()) &osi3::MountingPosition::internal_default_instance, "C++: osi3::MountingPosition::internal_default_instance() --> const class osi3::MountingPosition *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MountingPosition::*)(class osi3::MountingPosition *)) &osi3::MountingPosition::Swap, "C++: osi3::MountingPosition::Swap(class osi3::MountingPosition *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MountingPosition::*)(class osi3::MountingPosition *)) &osi3::MountingPosition::UnsafeArenaSwap, "C++: osi3::MountingPosition::UnsafeArenaSwap(class osi3::MountingPosition *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MountingPosition * (osi3::MountingPosition::*)() const) &osi3::MountingPosition::New, "C++: osi3::MountingPosition::New() const --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MountingPosition * (osi3::MountingPosition::*)(class google::protobuf::Arena *) const) &osi3::MountingPosition::New, "C++: osi3::MountingPosition::New(class google::protobuf::Arena *) const --> class osi3::MountingPosition *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MountingPosition::*)(const class google::protobuf::Message &)) &osi3::MountingPosition::CopyFrom, "C++: osi3::MountingPosition::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MountingPosition::*)(const class google::protobuf::Message &)) &osi3::MountingPosition::MergeFrom, "C++: osi3::MountingPosition::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MountingPosition::*)(const class osi3::MountingPosition &)) &osi3::MountingPosition::CopyFrom, "C++: osi3::MountingPosition::CopyFrom(const class osi3::MountingPosition &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MountingPosition::*)(const class osi3::MountingPosition &)) &osi3::MountingPosition::MergeFrom, "C++: osi3::MountingPosition::MergeFrom(const class osi3::MountingPosition &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MountingPosition::*)()) &osi3::MountingPosition::Clear, "C++: osi3::MountingPosition::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MountingPosition::*)() const) &osi3::MountingPosition::IsInitialized, "C++: osi3::MountingPosition::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MountingPosition::*)() const) &osi3::MountingPosition::ByteSizeLong, "C++: osi3::MountingPosition::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MountingPosition::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MountingPosition::_InternalParse, "C++: osi3::MountingPosition::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MountingPosition::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MountingPosition::_InternalSerialize, "C++: osi3::MountingPosition::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MountingPosition::*)() const) &osi3::MountingPosition::GetCachedSize, "C++: osi3::MountingPosition::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MountingPosition::*)() const) &osi3::MountingPosition::GetMetadata, "C++: osi3::MountingPosition::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_position", (bool (osi3::MountingPosition::*)() const) &osi3::MountingPosition::has_position, "C++: osi3::MountingPosition::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::MountingPosition::*)()) &osi3::MountingPosition::clear_position, "C++: osi3::MountingPosition::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::MountingPosition::*)() const) &osi3::MountingPosition::position, "C++: osi3::MountingPosition::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::release_position, "C++: osi3::MountingPosition::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::mutable_position, "C++: osi3::MountingPosition::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::MountingPosition::*)(class osi3::Vector3d *)) &osi3::MountingPosition::set_allocated_position, "C++: osi3::MountingPosition::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::MountingPosition::*)(class osi3::Vector3d *)) &osi3::MountingPosition::unsafe_arena_set_allocated_position, "C++: osi3::MountingPosition::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::unsafe_arena_release_position, "C++: osi3::MountingPosition::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation", (bool (osi3::MountingPosition::*)() const) &osi3::MountingPosition::has_orientation, "C++: osi3::MountingPosition::has_orientation() const --> bool");
		cl.def("clear_orientation", (void (osi3::MountingPosition::*)()) &osi3::MountingPosition::clear_orientation, "C++: osi3::MountingPosition::clear_orientation() --> void");
		cl.def("orientation", (const class osi3::Orientation3d & (osi3::MountingPosition::*)() const) &osi3::MountingPosition::orientation, "C++: osi3::MountingPosition::orientation() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation", (class osi3::Orientation3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::release_orientation, "C++: osi3::MountingPosition::release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation", (class osi3::Orientation3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::mutable_orientation, "C++: osi3::MountingPosition::mutable_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation", (void (osi3::MountingPosition::*)(class osi3::Orientation3d *)) &osi3::MountingPosition::set_allocated_orientation, "C++: osi3::MountingPosition::set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_set_allocated_orientation", (void (osi3::MountingPosition::*)(class osi3::Orientation3d *)) &osi3::MountingPosition::unsafe_arena_set_allocated_orientation, "C++: osi3::MountingPosition::unsafe_arena_set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_release_orientation", (class osi3::Orientation3d * (osi3::MountingPosition::*)()) &osi3::MountingPosition::unsafe_arena_release_orientation, "C++: osi3::MountingPosition::unsafe_arena_release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
	}
	std::cout << "B231_[void osi3::swap(class osi3::MountingPosition &, class osi3::MountingPosition &)] ";
	std::cout << "B232_[osi3::Spherical3d] ";
	std::cout << "B233_[void osi3::swap(class osi3::Spherical3d &, class osi3::Spherical3d &)] ";
	std::cout << "B234_[osi3::BaseStationary] ";
	{ // osi3::BaseStationary file: line:1348
		pybind11::class_<osi3::BaseStationary, std::shared_ptr<osi3::BaseStationary>, google::protobuf::Message> cl(M("osi3"), "BaseStationary", "");
		cl.def( pybind11::init( [](){ return new osi3::BaseStationary(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::BaseStationary const &o){ return new osi3::BaseStationary(o); } ) );
		cl.def("assign", (class osi3::BaseStationary & (osi3::BaseStationary::*)(const class osi3::BaseStationary &)) &osi3::BaseStationary::operator=, "C++: osi3::BaseStationary::operator=(const class osi3::BaseStationary &) --> class osi3::BaseStationary &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::BaseStationary::descriptor, "C++: osi3::BaseStationary::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::BaseStationary::GetDescriptor, "C++: osi3::BaseStationary::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::BaseStationary::GetReflection, "C++: osi3::BaseStationary::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::BaseStationary & (*)()) &osi3::BaseStationary::default_instance, "C++: osi3::BaseStationary::default_instance() --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::BaseStationary * (*)()) &osi3::BaseStationary::internal_default_instance, "C++: osi3::BaseStationary::internal_default_instance() --> const class osi3::BaseStationary *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::BaseStationary::*)(class osi3::BaseStationary *)) &osi3::BaseStationary::Swap, "C++: osi3::BaseStationary::Swap(class osi3::BaseStationary *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::BaseStationary::*)(class osi3::BaseStationary *)) &osi3::BaseStationary::UnsafeArenaSwap, "C++: osi3::BaseStationary::UnsafeArenaSwap(class osi3::BaseStationary *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::BaseStationary * (osi3::BaseStationary::*)() const) &osi3::BaseStationary::New, "C++: osi3::BaseStationary::New() const --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::BaseStationary * (osi3::BaseStationary::*)(class google::protobuf::Arena *) const) &osi3::BaseStationary::New, "C++: osi3::BaseStationary::New(class google::protobuf::Arena *) const --> class osi3::BaseStationary *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::BaseStationary::*)(const class google::protobuf::Message &)) &osi3::BaseStationary::CopyFrom, "C++: osi3::BaseStationary::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::BaseStationary::*)(const class google::protobuf::Message &)) &osi3::BaseStationary::MergeFrom, "C++: osi3::BaseStationary::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::BaseStationary::*)(const class osi3::BaseStationary &)) &osi3::BaseStationary::CopyFrom, "C++: osi3::BaseStationary::CopyFrom(const class osi3::BaseStationary &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::BaseStationary::*)(const class osi3::BaseStationary &)) &osi3::BaseStationary::MergeFrom, "C++: osi3::BaseStationary::MergeFrom(const class osi3::BaseStationary &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::BaseStationary::*)()) &osi3::BaseStationary::Clear, "C++: osi3::BaseStationary::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::BaseStationary::*)() const) &osi3::BaseStationary::IsInitialized, "C++: osi3::BaseStationary::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::BaseStationary::*)() const) &osi3::BaseStationary::ByteSizeLong, "C++: osi3::BaseStationary::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::BaseStationary::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::BaseStationary::_InternalParse, "C++: osi3::BaseStationary::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::BaseStationary::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::BaseStationary::_InternalSerialize, "C++: osi3::BaseStationary::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::BaseStationary::*)() const) &osi3::BaseStationary::GetCachedSize, "C++: osi3::BaseStationary::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::BaseStationary::*)() const) &osi3::BaseStationary::GetMetadata, "C++: osi3::BaseStationary::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("base_polygon_size", (int (osi3::BaseStationary::*)() const) &osi3::BaseStationary::base_polygon_size, "C++: osi3::BaseStationary::base_polygon_size() const --> int");
		cl.def("clear_base_polygon", (void (osi3::BaseStationary::*)()) &osi3::BaseStationary::clear_base_polygon, "C++: osi3::BaseStationary::clear_base_polygon() --> void");
		cl.def("mutable_base_polygon", (class osi3::Vector2d * (osi3::BaseStationary::*)(int)) &osi3::BaseStationary::mutable_base_polygon, "C++: osi3::BaseStationary::mutable_base_polygon(int) --> class osi3::Vector2d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_base_polygon", (class google::protobuf::RepeatedPtrField<class osi3::Vector2d> * (osi3::BaseStationary::*)()) &osi3::BaseStationary::mutable_base_polygon, "C++: osi3::BaseStationary::mutable_base_polygon() --> class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *", pybind11::return_value_policy::reference);
		cl.def("base_polygon", (const class osi3::Vector2d & (osi3::BaseStationary::*)(int) const) &osi3::BaseStationary::base_polygon, "C++: osi3::BaseStationary::base_polygon(int) const --> const class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_base_polygon", (class osi3::Vector2d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::add_base_polygon, "C++: osi3::BaseStationary::add_base_polygon() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("base_polygon", (const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> & (osi3::BaseStationary::*)() const) &osi3::BaseStationary::base_polygon, "C++: osi3::BaseStationary::base_polygon() const --> const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &", pybind11::return_value_policy::automatic);
		cl.def("has_dimension", (bool (osi3::BaseStationary::*)() const) &osi3::BaseStationary::has_dimension, "C++: osi3::BaseStationary::has_dimension() const --> bool");
		cl.def("clear_dimension", (void (osi3::BaseStationary::*)()) &osi3::BaseStationary::clear_dimension, "C++: osi3::BaseStationary::clear_dimension() --> void");
		cl.def("dimension", (const class osi3::Dimension3d & (osi3::BaseStationary::*)() const) &osi3::BaseStationary::dimension, "C++: osi3::BaseStationary::dimension() const --> const class osi3::Dimension3d &", pybind11::return_value_policy::automatic);
		cl.def("release_dimension", (class osi3::Dimension3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::release_dimension, "C++: osi3::BaseStationary::release_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_dimension", (class osi3::Dimension3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::mutable_dimension, "C++: osi3::BaseStationary::mutable_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_dimension", (void (osi3::BaseStationary::*)(class osi3::Dimension3d *)) &osi3::BaseStationary::set_allocated_dimension, "C++: osi3::BaseStationary::set_allocated_dimension(class osi3::Dimension3d *) --> void", pybind11::arg("dimension"));
		cl.def("unsafe_arena_set_allocated_dimension", (void (osi3::BaseStationary::*)(class osi3::Dimension3d *)) &osi3::BaseStationary::unsafe_arena_set_allocated_dimension, "C++: osi3::BaseStationary::unsafe_arena_set_allocated_dimension(class osi3::Dimension3d *) --> void", pybind11::arg("dimension"));
		cl.def("unsafe_arena_release_dimension", (class osi3::Dimension3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::unsafe_arena_release_dimension, "C++: osi3::BaseStationary::unsafe_arena_release_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("has_position", (bool (osi3::BaseStationary::*)() const) &osi3::BaseStationary::has_position, "C++: osi3::BaseStationary::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::BaseStationary::*)()) &osi3::BaseStationary::clear_position, "C++: osi3::BaseStationary::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::BaseStationary::*)() const) &osi3::BaseStationary::position, "C++: osi3::BaseStationary::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::release_position, "C++: osi3::BaseStationary::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::mutable_position, "C++: osi3::BaseStationary::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::BaseStationary::*)(class osi3::Vector3d *)) &osi3::BaseStationary::set_allocated_position, "C++: osi3::BaseStationary::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::BaseStationary::*)(class osi3::Vector3d *)) &osi3::BaseStationary::unsafe_arena_set_allocated_position, "C++: osi3::BaseStationary::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::unsafe_arena_release_position, "C++: osi3::BaseStationary::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation", (bool (osi3::BaseStationary::*)() const) &osi3::BaseStationary::has_orientation, "C++: osi3::BaseStationary::has_orientation() const --> bool");
		cl.def("clear_orientation", (void (osi3::BaseStationary::*)()) &osi3::BaseStationary::clear_orientation, "C++: osi3::BaseStationary::clear_orientation() --> void");
		cl.def("orientation", (const class osi3::Orientation3d & (osi3::BaseStationary::*)() const) &osi3::BaseStationary::orientation, "C++: osi3::BaseStationary::orientation() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation", (class osi3::Orientation3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::release_orientation, "C++: osi3::BaseStationary::release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation", (class osi3::Orientation3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::mutable_orientation, "C++: osi3::BaseStationary::mutable_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation", (void (osi3::BaseStationary::*)(class osi3::Orientation3d *)) &osi3::BaseStationary::set_allocated_orientation, "C++: osi3::BaseStationary::set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_set_allocated_orientation", (void (osi3::BaseStationary::*)(class osi3::Orientation3d *)) &osi3::BaseStationary::unsafe_arena_set_allocated_orientation, "C++: osi3::BaseStationary::unsafe_arena_set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_release_orientation", (class osi3::Orientation3d * (osi3::BaseStationary::*)()) &osi3::BaseStationary::unsafe_arena_release_orientation, "C++: osi3::BaseStationary::unsafe_arena_release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_4.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_4(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B235_[osi3::BaseMoving] ";
	{ // osi3::BaseMoving file: line:1554
		pybind11::class_<osi3::BaseMoving, std::shared_ptr<osi3::BaseMoving>, google::protobuf::Message> cl(M("osi3"), "BaseMoving", "");
		cl.def( pybind11::init( [](){ return new osi3::BaseMoving(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::BaseMoving const &o){ return new osi3::BaseMoving(o); } ) );
		cl.def("assign", (class osi3::BaseMoving & (osi3::BaseMoving::*)(const class osi3::BaseMoving &)) &osi3::BaseMoving::operator=, "C++: osi3::BaseMoving::operator=(const class osi3::BaseMoving &) --> class osi3::BaseMoving &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::BaseMoving::descriptor, "C++: osi3::BaseMoving::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::BaseMoving::GetDescriptor, "C++: osi3::BaseMoving::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::BaseMoving::GetReflection, "C++: osi3::BaseMoving::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::BaseMoving & (*)()) &osi3::BaseMoving::default_instance, "C++: osi3::BaseMoving::default_instance() --> const class osi3::BaseMoving &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::BaseMoving * (*)()) &osi3::BaseMoving::internal_default_instance, "C++: osi3::BaseMoving::internal_default_instance() --> const class osi3::BaseMoving *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::BaseMoving::*)(class osi3::BaseMoving *)) &osi3::BaseMoving::Swap, "C++: osi3::BaseMoving::Swap(class osi3::BaseMoving *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::BaseMoving::*)(class osi3::BaseMoving *)) &osi3::BaseMoving::UnsafeArenaSwap, "C++: osi3::BaseMoving::UnsafeArenaSwap(class osi3::BaseMoving *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::BaseMoving * (osi3::BaseMoving::*)() const) &osi3::BaseMoving::New, "C++: osi3::BaseMoving::New() const --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::BaseMoving * (osi3::BaseMoving::*)(class google::protobuf::Arena *) const) &osi3::BaseMoving::New, "C++: osi3::BaseMoving::New(class google::protobuf::Arena *) const --> class osi3::BaseMoving *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::BaseMoving::*)(const class google::protobuf::Message &)) &osi3::BaseMoving::CopyFrom, "C++: osi3::BaseMoving::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::BaseMoving::*)(const class google::protobuf::Message &)) &osi3::BaseMoving::MergeFrom, "C++: osi3::BaseMoving::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::BaseMoving::*)(const class osi3::BaseMoving &)) &osi3::BaseMoving::CopyFrom, "C++: osi3::BaseMoving::CopyFrom(const class osi3::BaseMoving &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::BaseMoving::*)(const class osi3::BaseMoving &)) &osi3::BaseMoving::MergeFrom, "C++: osi3::BaseMoving::MergeFrom(const class osi3::BaseMoving &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::Clear, "C++: osi3::BaseMoving::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::IsInitialized, "C++: osi3::BaseMoving::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::BaseMoving::*)() const) &osi3::BaseMoving::ByteSizeLong, "C++: osi3::BaseMoving::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::BaseMoving::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::BaseMoving::_InternalParse, "C++: osi3::BaseMoving::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::BaseMoving::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::BaseMoving::_InternalSerialize, "C++: osi3::BaseMoving::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::BaseMoving::*)() const) &osi3::BaseMoving::GetCachedSize, "C++: osi3::BaseMoving::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::BaseMoving::*)() const) &osi3::BaseMoving::GetMetadata, "C++: osi3::BaseMoving::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("base_polygon_size", (int (osi3::BaseMoving::*)() const) &osi3::BaseMoving::base_polygon_size, "C++: osi3::BaseMoving::base_polygon_size() const --> int");
		cl.def("clear_base_polygon", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_base_polygon, "C++: osi3::BaseMoving::clear_base_polygon() --> void");
		cl.def("mutable_base_polygon", (class osi3::Vector2d * (osi3::BaseMoving::*)(int)) &osi3::BaseMoving::mutable_base_polygon, "C++: osi3::BaseMoving::mutable_base_polygon(int) --> class osi3::Vector2d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_base_polygon", (class google::protobuf::RepeatedPtrField<class osi3::Vector2d> * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_base_polygon, "C++: osi3::BaseMoving::mutable_base_polygon() --> class google::protobuf::RepeatedPtrField<class osi3::Vector2d> *", pybind11::return_value_policy::reference);
		cl.def("base_polygon", (const class osi3::Vector2d & (osi3::BaseMoving::*)(int) const) &osi3::BaseMoving::base_polygon, "C++: osi3::BaseMoving::base_polygon(int) const --> const class osi3::Vector2d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_base_polygon", (class osi3::Vector2d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::add_base_polygon, "C++: osi3::BaseMoving::add_base_polygon() --> class osi3::Vector2d *", pybind11::return_value_policy::reference);
		cl.def("base_polygon", (const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::base_polygon, "C++: osi3::BaseMoving::base_polygon() const --> const class google::protobuf::RepeatedPtrField<class osi3::Vector2d> &", pybind11::return_value_policy::automatic);
		cl.def("has_dimension", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_dimension, "C++: osi3::BaseMoving::has_dimension() const --> bool");
		cl.def("clear_dimension", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_dimension, "C++: osi3::BaseMoving::clear_dimension() --> void");
		cl.def("dimension", (const class osi3::Dimension3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::dimension, "C++: osi3::BaseMoving::dimension() const --> const class osi3::Dimension3d &", pybind11::return_value_policy::automatic);
		cl.def("release_dimension", (class osi3::Dimension3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_dimension, "C++: osi3::BaseMoving::release_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_dimension", (class osi3::Dimension3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_dimension, "C++: osi3::BaseMoving::mutable_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_dimension", (void (osi3::BaseMoving::*)(class osi3::Dimension3d *)) &osi3::BaseMoving::set_allocated_dimension, "C++: osi3::BaseMoving::set_allocated_dimension(class osi3::Dimension3d *) --> void", pybind11::arg("dimension"));
		cl.def("unsafe_arena_set_allocated_dimension", (void (osi3::BaseMoving::*)(class osi3::Dimension3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_dimension, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_dimension(class osi3::Dimension3d *) --> void", pybind11::arg("dimension"));
		cl.def("unsafe_arena_release_dimension", (class osi3::Dimension3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_dimension, "C++: osi3::BaseMoving::unsafe_arena_release_dimension() --> class osi3::Dimension3d *", pybind11::return_value_policy::reference);
		cl.def("has_position", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_position, "C++: osi3::BaseMoving::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_position, "C++: osi3::BaseMoving::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::position, "C++: osi3::BaseMoving::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_position, "C++: osi3::BaseMoving::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_position, "C++: osi3::BaseMoving::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::set_allocated_position, "C++: osi3::BaseMoving::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_position, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_position, "C++: osi3::BaseMoving::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_orientation, "C++: osi3::BaseMoving::has_orientation() const --> bool");
		cl.def("clear_orientation", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_orientation, "C++: osi3::BaseMoving::clear_orientation() --> void");
		cl.def("orientation", (const class osi3::Orientation3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::orientation, "C++: osi3::BaseMoving::orientation() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_orientation, "C++: osi3::BaseMoving::release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_orientation, "C++: osi3::BaseMoving::mutable_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::set_allocated_orientation, "C++: osi3::BaseMoving::set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_set_allocated_orientation", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_orientation, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_release_orientation", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_orientation, "C++: osi3::BaseMoving::unsafe_arena_release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("has_velocity", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_velocity, "C++: osi3::BaseMoving::has_velocity() const --> bool");
		cl.def("clear_velocity", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_velocity, "C++: osi3::BaseMoving::clear_velocity() --> void");
		cl.def("velocity", (const class osi3::Vector3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::velocity, "C++: osi3::BaseMoving::velocity() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_velocity", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_velocity, "C++: osi3::BaseMoving::release_velocity() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_velocity", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_velocity, "C++: osi3::BaseMoving::mutable_velocity() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_velocity", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::set_allocated_velocity, "C++: osi3::BaseMoving::set_allocated_velocity(class osi3::Vector3d *) --> void", pybind11::arg("velocity"));
		cl.def("unsafe_arena_set_allocated_velocity", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_velocity, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_velocity(class osi3::Vector3d *) --> void", pybind11::arg("velocity"));
		cl.def("unsafe_arena_release_velocity", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_velocity, "C++: osi3::BaseMoving::unsafe_arena_release_velocity() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_acceleration", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_acceleration, "C++: osi3::BaseMoving::has_acceleration() const --> bool");
		cl.def("clear_acceleration", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_acceleration, "C++: osi3::BaseMoving::clear_acceleration() --> void");
		cl.def("acceleration", (const class osi3::Vector3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::acceleration, "C++: osi3::BaseMoving::acceleration() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_acceleration", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_acceleration, "C++: osi3::BaseMoving::release_acceleration() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_acceleration", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_acceleration, "C++: osi3::BaseMoving::mutable_acceleration() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_acceleration", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::set_allocated_acceleration, "C++: osi3::BaseMoving::set_allocated_acceleration(class osi3::Vector3d *) --> void", pybind11::arg("acceleration"));
		cl.def("unsafe_arena_set_allocated_acceleration", (void (osi3::BaseMoving::*)(class osi3::Vector3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_acceleration, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_acceleration(class osi3::Vector3d *) --> void", pybind11::arg("acceleration"));
		cl.def("unsafe_arena_release_acceleration", (class osi3::Vector3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_acceleration, "C++: osi3::BaseMoving::unsafe_arena_release_acceleration() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation_rate", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_orientation_rate, "C++: osi3::BaseMoving::has_orientation_rate() const --> bool");
		cl.def("clear_orientation_rate", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_orientation_rate, "C++: osi3::BaseMoving::clear_orientation_rate() --> void");
		cl.def("orientation_rate", (const class osi3::Orientation3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::orientation_rate, "C++: osi3::BaseMoving::orientation_rate() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation_rate", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_orientation_rate, "C++: osi3::BaseMoving::release_orientation_rate() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation_rate", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_orientation_rate, "C++: osi3::BaseMoving::mutable_orientation_rate() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation_rate", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::set_allocated_orientation_rate, "C++: osi3::BaseMoving::set_allocated_orientation_rate(class osi3::Orientation3d *) --> void", pybind11::arg("orientation_rate"));
		cl.def("unsafe_arena_set_allocated_orientation_rate", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_orientation_rate, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_orientation_rate(class osi3::Orientation3d *) --> void", pybind11::arg("orientation_rate"));
		cl.def("unsafe_arena_release_orientation_rate", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_orientation_rate, "C++: osi3::BaseMoving::unsafe_arena_release_orientation_rate() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation_acceleration", (bool (osi3::BaseMoving::*)() const) &osi3::BaseMoving::has_orientation_acceleration, "C++: osi3::BaseMoving::has_orientation_acceleration() const --> bool");
		cl.def("clear_orientation_acceleration", (void (osi3::BaseMoving::*)()) &osi3::BaseMoving::clear_orientation_acceleration, "C++: osi3::BaseMoving::clear_orientation_acceleration() --> void");
		cl.def("orientation_acceleration", (const class osi3::Orientation3d & (osi3::BaseMoving::*)() const) &osi3::BaseMoving::orientation_acceleration, "C++: osi3::BaseMoving::orientation_acceleration() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation_acceleration", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::release_orientation_acceleration, "C++: osi3::BaseMoving::release_orientation_acceleration() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation_acceleration", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::mutable_orientation_acceleration, "C++: osi3::BaseMoving::mutable_orientation_acceleration() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation_acceleration", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::set_allocated_orientation_acceleration, "C++: osi3::BaseMoving::set_allocated_orientation_acceleration(class osi3::Orientation3d *) --> void", pybind11::arg("orientation_acceleration"));
		cl.def("unsafe_arena_set_allocated_orientation_acceleration", (void (osi3::BaseMoving::*)(class osi3::Orientation3d *)) &osi3::BaseMoving::unsafe_arena_set_allocated_orientation_acceleration, "C++: osi3::BaseMoving::unsafe_arena_set_allocated_orientation_acceleration(class osi3::Orientation3d *) --> void", pybind11::arg("orientation_acceleration"));
		cl.def("unsafe_arena_release_orientation_acceleration", (class osi3::Orientation3d * (osi3::BaseMoving::*)()) &osi3::BaseMoving::unsafe_arena_release_orientation_acceleration, "C++: osi3::BaseMoving::unsafe_arena_release_orientation_acceleration() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_5.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_5(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B236_[osi3::StatePoint] ";
	{ // osi3::StatePoint file: line:1840
		pybind11::class_<osi3::StatePoint, std::shared_ptr<osi3::StatePoint>, google::protobuf::Message> cl(M("osi3"), "StatePoint", "");
		cl.def( pybind11::init( [](){ return new osi3::StatePoint(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::StatePoint const &o){ return new osi3::StatePoint(o); } ) );
		cl.def("assign", (class osi3::StatePoint & (osi3::StatePoint::*)(const class osi3::StatePoint &)) &osi3::StatePoint::operator=, "C++: osi3::StatePoint::operator=(const class osi3::StatePoint &) --> class osi3::StatePoint &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StatePoint::descriptor, "C++: osi3::StatePoint::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StatePoint::GetDescriptor, "C++: osi3::StatePoint::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::StatePoint::GetReflection, "C++: osi3::StatePoint::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::StatePoint & (*)()) &osi3::StatePoint::default_instance, "C++: osi3::StatePoint::default_instance() --> const class osi3::StatePoint &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::StatePoint * (*)()) &osi3::StatePoint::internal_default_instance, "C++: osi3::StatePoint::internal_default_instance() --> const class osi3::StatePoint *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::StatePoint::*)(class osi3::StatePoint *)) &osi3::StatePoint::Swap, "C++: osi3::StatePoint::Swap(class osi3::StatePoint *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::StatePoint::*)(class osi3::StatePoint *)) &osi3::StatePoint::UnsafeArenaSwap, "C++: osi3::StatePoint::UnsafeArenaSwap(class osi3::StatePoint *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::StatePoint * (osi3::StatePoint::*)() const) &osi3::StatePoint::New, "C++: osi3::StatePoint::New() const --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::StatePoint * (osi3::StatePoint::*)(class google::protobuf::Arena *) const) &osi3::StatePoint::New, "C++: osi3::StatePoint::New(class google::protobuf::Arena *) const --> class osi3::StatePoint *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::StatePoint::*)(const class google::protobuf::Message &)) &osi3::StatePoint::CopyFrom, "C++: osi3::StatePoint::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StatePoint::*)(const class google::protobuf::Message &)) &osi3::StatePoint::MergeFrom, "C++: osi3::StatePoint::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::StatePoint::*)(const class osi3::StatePoint &)) &osi3::StatePoint::CopyFrom, "C++: osi3::StatePoint::CopyFrom(const class osi3::StatePoint &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StatePoint::*)(const class osi3::StatePoint &)) &osi3::StatePoint::MergeFrom, "C++: osi3::StatePoint::MergeFrom(const class osi3::StatePoint &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::StatePoint::*)()) &osi3::StatePoint::Clear, "C++: osi3::StatePoint::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::StatePoint::*)() const) &osi3::StatePoint::IsInitialized, "C++: osi3::StatePoint::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::StatePoint::*)() const) &osi3::StatePoint::ByteSizeLong, "C++: osi3::StatePoint::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::StatePoint::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::StatePoint::_InternalParse, "C++: osi3::StatePoint::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::StatePoint::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::StatePoint::_InternalSerialize, "C++: osi3::StatePoint::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::StatePoint::*)() const) &osi3::StatePoint::GetCachedSize, "C++: osi3::StatePoint::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::StatePoint::*)() const) &osi3::StatePoint::GetMetadata, "C++: osi3::StatePoint::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_timestamp", (bool (osi3::StatePoint::*)() const) &osi3::StatePoint::has_timestamp, "C++: osi3::StatePoint::has_timestamp() const --> bool");
		cl.def("clear_timestamp", (void (osi3::StatePoint::*)()) &osi3::StatePoint::clear_timestamp, "C++: osi3::StatePoint::clear_timestamp() --> void");
		cl.def("timestamp", (const class osi3::Timestamp & (osi3::StatePoint::*)() const) &osi3::StatePoint::timestamp, "C++: osi3::StatePoint::timestamp() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_timestamp", (class osi3::Timestamp * (osi3::StatePoint::*)()) &osi3::StatePoint::release_timestamp, "C++: osi3::StatePoint::release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_timestamp", (class osi3::Timestamp * (osi3::StatePoint::*)()) &osi3::StatePoint::mutable_timestamp, "C++: osi3::StatePoint::mutable_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_timestamp", (void (osi3::StatePoint::*)(class osi3::Timestamp *)) &osi3::StatePoint::set_allocated_timestamp, "C++: osi3::StatePoint::set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_set_allocated_timestamp", (void (osi3::StatePoint::*)(class osi3::Timestamp *)) &osi3::StatePoint::unsafe_arena_set_allocated_timestamp, "C++: osi3::StatePoint::unsafe_arena_set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_release_timestamp", (class osi3::Timestamp * (osi3::StatePoint::*)()) &osi3::StatePoint::unsafe_arena_release_timestamp, "C++: osi3::StatePoint::unsafe_arena_release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("has_position", (bool (osi3::StatePoint::*)() const) &osi3::StatePoint::has_position, "C++: osi3::StatePoint::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::StatePoint::*)()) &osi3::StatePoint::clear_position, "C++: osi3::StatePoint::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::StatePoint::*)() const) &osi3::StatePoint::position, "C++: osi3::StatePoint::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::StatePoint::*)()) &osi3::StatePoint::release_position, "C++: osi3::StatePoint::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::StatePoint::*)()) &osi3::StatePoint::mutable_position, "C++: osi3::StatePoint::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::StatePoint::*)(class osi3::Vector3d *)) &osi3::StatePoint::set_allocated_position, "C++: osi3::StatePoint::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::StatePoint::*)(class osi3::Vector3d *)) &osi3::StatePoint::unsafe_arena_set_allocated_position, "C++: osi3::StatePoint::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::StatePoint::*)()) &osi3::StatePoint::unsafe_arena_release_position, "C++: osi3::StatePoint::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation", (bool (osi3::StatePoint::*)() const) &osi3::StatePoint::has_orientation, "C++: osi3::StatePoint::has_orientation() const --> bool");
		cl.def("clear_orientation", (void (osi3::StatePoint::*)()) &osi3::StatePoint::clear_orientation, "C++: osi3::StatePoint::clear_orientation() --> void");
		cl.def("orientation", (const class osi3::Orientation3d & (osi3::StatePoint::*)() const) &osi3::StatePoint::orientation, "C++: osi3::StatePoint::orientation() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation", (class osi3::Orientation3d * (osi3::StatePoint::*)()) &osi3::StatePoint::release_orientation, "C++: osi3::StatePoint::release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation", (class osi3::Orientation3d * (osi3::StatePoint::*)()) &osi3::StatePoint::mutable_orientation, "C++: osi3::StatePoint::mutable_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation", (void (osi3::StatePoint::*)(class osi3::Orientation3d *)) &osi3::StatePoint::set_allocated_orientation, "C++: osi3::StatePoint::set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_set_allocated_orientation", (void (osi3::StatePoint::*)(class osi3::Orientation3d *)) &osi3::StatePoint::unsafe_arena_set_allocated_orientation, "C++: osi3::StatePoint::unsafe_arena_set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_release_orientation", (class osi3::Orientation3d * (osi3::StatePoint::*)()) &osi3::StatePoint::unsafe_arena_release_orientation, "C++: osi3::StatePoint::unsafe_arena_release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
	}
	std::cout << "B237_[void osi3::swap(class osi3::StatePoint &, class osi3::StatePoint &)] ";
	std::cout << "B238_[osi3::WavelengthData] ";
	{ // osi3::WavelengthData file: line:2026
		pybind11::class_<osi3::WavelengthData, std::shared_ptr<osi3::WavelengthData>, google::protobuf::Message> cl(M("osi3"), "WavelengthData", "");
		cl.def( pybind11::init( [](){ return new osi3::WavelengthData(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::WavelengthData const &o){ return new osi3::WavelengthData(o); } ) );
		cl.def("assign", (class osi3::WavelengthData & (osi3::WavelengthData::*)(const class osi3::WavelengthData &)) &osi3::WavelengthData::operator=, "C++: osi3::WavelengthData::operator=(const class osi3::WavelengthData &) --> class osi3::WavelengthData &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::WavelengthData::descriptor, "C++: osi3::WavelengthData::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::WavelengthData::GetDescriptor, "C++: osi3::WavelengthData::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::WavelengthData::GetReflection, "C++: osi3::WavelengthData::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::WavelengthData & (*)()) &osi3::WavelengthData::default_instance, "C++: osi3::WavelengthData::default_instance() --> const class osi3::WavelengthData &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::WavelengthData * (*)()) &osi3::WavelengthData::internal_default_instance, "C++: osi3::WavelengthData::internal_default_instance() --> const class osi3::WavelengthData *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::WavelengthData::*)(class osi3::WavelengthData *)) &osi3::WavelengthData::Swap, "C++: osi3::WavelengthData::Swap(class osi3::WavelengthData *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::WavelengthData::*)(class osi3::WavelengthData *)) &osi3::WavelengthData::UnsafeArenaSwap, "C++: osi3::WavelengthData::UnsafeArenaSwap(class osi3::WavelengthData *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::WavelengthData * (osi3::WavelengthData::*)() const) &osi3::WavelengthData::New, "C++: osi3::WavelengthData::New() const --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::WavelengthData * (osi3::WavelengthData::*)(class google::protobuf::Arena *) const) &osi3::WavelengthData::New, "C++: osi3::WavelengthData::New(class google::protobuf::Arena *) const --> class osi3::WavelengthData *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::WavelengthData::*)(const class google::protobuf::Message &)) &osi3::WavelengthData::CopyFrom, "C++: osi3::WavelengthData::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::WavelengthData::*)(const class google::protobuf::Message &)) &osi3::WavelengthData::MergeFrom, "C++: osi3::WavelengthData::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::WavelengthData::*)(const class osi3::WavelengthData &)) &osi3::WavelengthData::CopyFrom, "C++: osi3::WavelengthData::CopyFrom(const class osi3::WavelengthData &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::WavelengthData::*)(const class osi3::WavelengthData &)) &osi3::WavelengthData::MergeFrom, "C++: osi3::WavelengthData::MergeFrom(const class osi3::WavelengthData &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::WavelengthData::*)()) &osi3::WavelengthData::Clear, "C++: osi3::WavelengthData::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::WavelengthData::*)() const) &osi3::WavelengthData::IsInitialized, "C++: osi3::WavelengthData::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::WavelengthData::*)() const) &osi3::WavelengthData::ByteSizeLong, "C++: osi3::WavelengthData::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::WavelengthData::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::WavelengthData::_InternalParse, "C++: osi3::WavelengthData::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::WavelengthData::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::WavelengthData::_InternalSerialize, "C++: osi3::WavelengthData::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::WavelengthData::*)() const) &osi3::WavelengthData::GetCachedSize, "C++: osi3::WavelengthData::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::WavelengthData::*)() const) &osi3::WavelengthData::GetMetadata, "C++: osi3::WavelengthData::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_start", (void (osi3::WavelengthData::*)()) &osi3::WavelengthData::clear_start, "C++: osi3::WavelengthData::clear_start() --> void");
		cl.def("start", (double (osi3::WavelengthData::*)() const) &osi3::WavelengthData::start, "C++: osi3::WavelengthData::start() const --> double");
		cl.def("set_start", (void (osi3::WavelengthData::*)(double)) &osi3::WavelengthData::set_start, "C++: osi3::WavelengthData::set_start(double) --> void", pybind11::arg("value"));
		cl.def("clear_end", (void (osi3::WavelengthData::*)()) &osi3::WavelengthData::clear_end, "C++: osi3::WavelengthData::clear_end() --> void");
		cl.def("end", (double (osi3::WavelengthData::*)() const) &osi3::WavelengthData::end, "C++: osi3::WavelengthData::end() const --> double");
		cl.def("set_end", (void (osi3::WavelengthData::*)(double)) &osi3::WavelengthData::set_end, "C++: osi3::WavelengthData::set_end(double) --> void", pybind11::arg("value"));
		cl.def("clear_samples_number", (void (osi3::WavelengthData::*)()) &osi3::WavelengthData::clear_samples_number, "C++: osi3::WavelengthData::clear_samples_number() --> void");
		cl.def("samples_number", (double (osi3::WavelengthData::*)() const) &osi3::WavelengthData::samples_number, "C++: osi3::WavelengthData::samples_number() const --> double");
		cl.def("set_samples_number", (void (osi3::WavelengthData::*)(double)) &osi3::WavelengthData::set_samples_number, "C++: osi3::WavelengthData::set_samples_number(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_6.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_6(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B239_[osi3::TrafficSignValue_Unit] ";
	// osi3::TrafficSignValue_Unit file: line:93
	pybind11::enum_<osi3::TrafficSignValue_Unit>(M("osi3"), "TrafficSignValue_Unit", pybind11::arithmetic(), "")
		.value("TrafficSignValue_Unit_UNIT_UNKNOWN", osi3::TrafficSignValue_Unit_UNIT_UNKNOWN)
		.value("TrafficSignValue_Unit_UNIT_OTHER", osi3::TrafficSignValue_Unit_UNIT_OTHER)
		.value("TrafficSignValue_Unit_UNIT_NO_UNIT", osi3::TrafficSignValue_Unit_UNIT_NO_UNIT)
		.value("TrafficSignValue_Unit_UNIT_KILOMETER_PER_HOUR", osi3::TrafficSignValue_Unit_UNIT_KILOMETER_PER_HOUR)
		.value("TrafficSignValue_Unit_UNIT_MILE_PER_HOUR", osi3::TrafficSignValue_Unit_UNIT_MILE_PER_HOUR)
		.value("TrafficSignValue_Unit_UNIT_METER", osi3::TrafficSignValue_Unit_UNIT_METER)
		.value("TrafficSignValue_Unit_UNIT_KILOMETER", osi3::TrafficSignValue_Unit_UNIT_KILOMETER)
		.value("TrafficSignValue_Unit_UNIT_FEET", osi3::TrafficSignValue_Unit_UNIT_FEET)
		.value("TrafficSignValue_Unit_UNIT_MILE", osi3::TrafficSignValue_Unit_UNIT_MILE)
		.value("TrafficSignValue_Unit_UNIT_METRIC_TON", osi3::TrafficSignValue_Unit_UNIT_METRIC_TON)
		.value("TrafficSignValue_Unit_UNIT_LONG_TON", osi3::TrafficSignValue_Unit_UNIT_LONG_TON)
		.value("TrafficSignValue_Unit_UNIT_SHORT_TON", osi3::TrafficSignValue_Unit_UNIT_SHORT_TON)
		.value("TrafficSignValue_Unit_UNIT_MINUTES", osi3::TrafficSignValue_Unit_UNIT_MINUTES)
		.value("TrafficSignValue_Unit_UNIT_DAY", osi3::TrafficSignValue_Unit_UNIT_DAY)
		.value("TrafficSignValue_Unit_UNIT_PERCENTAGE", osi3::TrafficSignValue_Unit_UNIT_PERCENTAGE)
		.value("TrafficSignValue_Unit_TrafficSignValue_Unit_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSignValue_Unit_TrafficSignValue_Unit_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSignValue_Unit_TrafficSignValue_Unit_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSignValue_Unit_TrafficSignValue_Unit_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B240_[bool osi3::TrafficSignValue_Unit_IsValid(int)] ";
	std::cout << "B241_[const class google::protobuf::EnumDescriptor * osi3::TrafficSignValue_Unit_descriptor()] ";
	std::cout << "B242_[bool osi3::TrafficSignValue_Unit_Parse(const std::string &, enum osi3::TrafficSignValue_Unit *)] ";
	std::cout << "B243_[osi3::TrafficSign_MainSign_Classification_Type] ";
	// osi3::TrafficSign_MainSign_Classification_Type file: line:131
	pybind11::enum_<osi3::TrafficSign_MainSign_Classification_Type>(M("osi3"), "TrafficSign_MainSign_Classification_Type", pybind11::arithmetic(), "")
		.value("TrafficSign_MainSign_Classification_Type_TYPE_UNKNOWN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_UNKNOWN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OTHER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OTHER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DANGER_SPOT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DANGER_SPOT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ZEBRA_CROSSING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ZEBRA_CROSSING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FLIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FLIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CATTLE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CATTLE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_AMPHIBIANS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_AMPHIBIANS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FALLING_ROCKS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FALLING_ROCKS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SNOW_OR_ICE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SNOW_OR_ICE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_LOOSE_GRAVEL", osi3::TrafficSign_MainSign_Classification_Type_TYPE_LOOSE_GRAVEL)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_WATERSIDE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_WATERSIDE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CLEARANCE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CLEARANCE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOVABLE_BRIDGE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOVABLE_BRIDGE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_BEFORE_LEFT_NEXT_INTERSECTION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_BEFORE_LEFT_NEXT_INTERSECTION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TURN_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TURN_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TURN_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TURN_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DOUBLE_TURN_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DOUBLE_TURN_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DOUBLE_TURN_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DOUBLE_TURN_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HILL_DOWNWARDS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HILL_DOWNWARDS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HILL_UPWARDS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HILL_UPWARDS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_UNEVEN_ROAD", osi3::TrafficSign_MainSign_Classification_Type_TYPE_UNEVEN_ROAD)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROAD_SLIPPERY_WET_OR_DIRTY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROAD_SLIPPERY_WET_OR_DIRTY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDE_WINDS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDE_WINDS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROAD_NARROWING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROAD_WORKS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROAD_WORKS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_QUEUES", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_QUEUES)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TWO_WAY_TRAFFIC", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TWO_WAY_TRAFFIC)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ATTENTION_TRAFFIC_LIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ATTENTION_TRAFFIC_LIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CHILDREN_CROSSING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CHILDREN_CROSSING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CYCLE_ROUTE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CYCLE_ROUTE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DEER_CROSSING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DEER_CROSSING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_UNGATED_LEVEL_CROSSING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_UNGATED_LEVEL_CROSSING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_LEVEL_CROSSING_MARKER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_LEVEL_CROSSING_MARKER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_RAILWAY_TRAFFIC_PRIORITY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_RAILWAY_TRAFFIC_PRIORITY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_GIVE_WAY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_GIVE_WAY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_STOP", osi3::TrafficSign_MainSign_Classification_Type_TYPE_STOP)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_TO_OPPOSITE_DIRECTION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_TO_OPPOSITE_DIRECTION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_TO_OPPOSITE_DIRECTION_UPSIDE_DOWN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_TO_OPPOSITE_DIRECTION_UPSIDE_DOWN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_TURN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_TURN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_STRAIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_STRAIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_WAY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_WAY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_WAY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_WAY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_TURN_AND_STRAIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_RIGHT_TURN_AND_STRAIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_AND_STRAIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_AND_STRAIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_AND_RIGHT_TURN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_AND_RIGHT_TURN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_RIGHT_TURN_AND_STRAIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_LEFT_TURN_RIGHT_TURN_AND_STRAIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROUNDABOUT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROUNDABOUT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PASS_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PASS_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PASS_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PASS_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_OPEN_FOR_TRAFFIC", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_OPEN_FOR_TRAFFIC)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_CLOSED_FOR_TRAFFIC", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_CLOSED_FOR_TRAFFIC)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_CLOSING_FOR_TRAFFIC", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDE_LANE_CLOSING_FOR_TRAFFIC)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BUS_STOP", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BUS_STOP)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TAXI_STAND", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TAXI_STAND)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SHARED_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SHARED_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SEPARATED_LEFT_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SEPARATED_LEFT_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SEPARATED_RIGHT_ONLY", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PEDESTRIANS_SEPARATED_RIGHT_ONLY)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_ZONE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_ZONE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_ZONE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_ZONE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLE_ROAD_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLE_ROAD_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLE_ROAD_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLE_ROAD_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BUS_LANE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ALL_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ALL_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOTORIZED_MULTITRACK_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOTORIZED_MULTITRACK_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRUCKS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRUCKS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BICYCLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOTORCYCLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOTORCYCLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOPEDS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOPEDS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HORSE_RIDERS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HORSE_CARRIAGES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HORSE_CARRIAGES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CATTLE_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CATTLE_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_BUSES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_BUSES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CARS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CARS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CARS_TRAILERS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CARS_TRAILERS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRUCKS_TRAILERS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRUCKS_TRAILERS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRACTORS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRACTORS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIANS_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOTOR_VEHICLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOTOR_VEHICLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HAZARDOUS_GOODS_VEHICLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HAZARDOUS_GOODS_VEHICLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OVER_WEIGHT_VEHICLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OVER_WEIGHT_VEHICLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_AXLE_OVER_WEIGHT_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_AXLE_OVER_WEIGHT_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_WIDTH_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_WIDTH_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_HEIGHT_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_HEIGHT_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_LENGTH_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_VEHICLES_EXCESS_LENGTH_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DO_NOT_ENTER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DO_NOT_ENTER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SNOW_CHAINS_REQUIRED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SNOW_CHAINS_REQUIRED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_WATER_POLLUTANT_VEHICLES_PROHIBITED", osi3::TrafficSign_MainSign_Classification_Type_TYPE_WATER_POLLUTANT_VEHICLES_PROHIBITED)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ENVIRONMENTAL_ZONE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ENVIRONMENTAL_ZONE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ENVIRONMENTAL_ZONE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ENVIRONMENTAL_ZONE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_U_TURN_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_U_TURN_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_U_TURN_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_U_TURN_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_U_TURN_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_U_TURN_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_U_TURN_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRESCRIBED_U_TURN_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_DISTANCE_FOR_TRUCKS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_DISTANCE_FOR_TRUCKS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_ZONE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_ZONE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_ZONE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_ZONE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_SPEED_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_SPEED_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_FOR_TRUCKS_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_FOR_TRUCKS_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SPEED_LIMIT_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_SPEED_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MINIMUM_SPEED_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_FOR_TRUCKS_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OVERTAKING_BAN_FOR_TRUCKS_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ALL_RESTRICTIONS_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ALL_RESTRICTIONS_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_STOPPING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_STOPPING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING_ZONE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING_ZONE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING_ZONE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NO_PARKING_ZONE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_NEXT_INTERSECTION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_NEXT_INTERSECTION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_RIGHT_OF_WAY_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION_UPSIDE_DOWN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIORITY_OVER_OPPOSITE_DIRECTION_UPSIDE_DOWN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOWN_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOWN_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOWN_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOWN_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING_ZONE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING_ZONE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING_ZONE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CAR_PARKING_ZONE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_HALF_PARKING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_HALF_PARKING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_HALF_PARKING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_HALF_PARKING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PARKING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PARKING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PARKING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PARKING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_HALF_PARKING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_PARKING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_PARKING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_PARKING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SIDEWALK_PERPENDICULAR_PARKING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_LIVING_STREET_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_LIVING_STREET_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_LIVING_STREET_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_LIVING_STREET_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TUNNEL", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TUNNEL)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EMERGENCY_STOPPING_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EMERGENCY_STOPPING_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EMERGENCY_STOPPING_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EMERGENCY_STOPPING_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NAMED_HIGHWAY_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NAMED_HIGHWAY_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NAMED_EXPRESSWAY_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NAMED_EXPRESSWAY_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NAMED_ROAD_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NAMED_ROAD_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EXPRESSWAY_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_STREET", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ONEWAY_STREET)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CROSSING_GUARDS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CROSSING_GUARDS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DEADEND", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DEADEND)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DEADEND_EXCLUDING_DESIGNATED_ACTORS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DEADEND_EXCLUDING_DESIGNATED_ACTORS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FIRST_AID_STATION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FIRST_AID_STATION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_POLICE_STATION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_POLICE_STATION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TELEPHONE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TELEPHONE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FILLING_STATION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FILLING_STATION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HOTEL", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HOTEL)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_INN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_INN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_KIOSK", osi3::TrafficSign_MainSign_Classification_Type_TYPE_KIOSK)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOILET", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOILET)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CHAPEL", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CHAPEL)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_INFO", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_INFO)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_REPAIR_SERVICE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_REPAIR_SERVICE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_UNDERPASS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_UNDERPASS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_BRIDGE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PEDESTRIAN_BRIDGE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CAMPER_PLACE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CAMPER_PLACE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ADVISORY_SPEED_LIMIT_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ADVISORY_SPEED_LIMIT_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ADVISORY_SPEED_LIMIT_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ADVISORY_SPEED_LIMIT_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PLACE_NAME", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PLACE_NAME)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_ATTRACTION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_ATTRACTION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_ROUTE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_ROUTE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_AREA", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOURIST_AREA)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SHOULDER_NOT_PASSABLE_MOTOR_VEHICLES", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SHOULDER_NOT_PASSABLE_MOTOR_VEHICLES)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SHOULDER_UNSAFE_TRUCKS_TRACTORS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SHOULDER_UNSAFE_TRUCKS_TRACTORS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOLL_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOLL_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOLL_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOLL_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TOLL_ROAD", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TOLL_ROAD)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CUSTOMS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CUSTOMS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_INTERNATIONAL_BORDER_INFO", osi3::TrafficSign_MainSign_Classification_Type_TYPE_INTERNATIONAL_BORDER_INFO)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_STREETLIGHT_RED_BAND", osi3::TrafficSign_MainSign_Classification_Type_TYPE_STREETLIGHT_RED_BAND)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_ROUTE_NUMBER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_ROUTE_NUMBER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ROUTE_NUMBER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ROUTE_NUMBER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_INTERCHANGE_NUMBER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_INTERCHANGE_NUMBER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_EUROPEAN_ROUTE_NUMBER", osi3::TrafficSign_MainSign_Classification_Type_TYPE_EUROPEAN_ROUTE_NUMBER)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_DIRECTION_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_DIRECTION_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_DIRECTION_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_FEDERAL_HIGHWAY_DIRECTION_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIMARY_ROAD_DIRECTION_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIMARY_ROAD_DIRECTION_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PRIMARY_ROAD_DIRECTION_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PRIMARY_ROAD_DIRECTION_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SECONDARY_ROAD_DIRECTION_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SECONDARY_ROAD_DIRECTION_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_SECONDARY_ROAD_DIRECTION_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_SECONDARY_ROAD_DIRECTION_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_DESIGNATED_ACTORS_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_DESIGNATED_ACTORS_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_DESIGNATED_ACTORS_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_DESIGNATED_ACTORS_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROUTING_DESIGNATED_ACTORS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROUTING_DESIGNATED_ACTORS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_HIGHWAY_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_HIGHWAY_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_HIGHWAY_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_HIGHWAY_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_LOCAL_DESTINATION_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_LOCAL_DESTINATION_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_LOCAL_DESTINATION_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_TO_LOCAL_DESTINATION_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_CONSOLIDATED_DIRECTIONS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_CONSOLIDATED_DIRECTIONS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_STREET_NAME", osi3::TrafficSign_MainSign_Classification_Type_TYPE_STREET_NAME)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT_LANE_CONFIG", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT_LANE_CONFIG)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT_HIGHWAY_ENTRIES", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTION_PREANNOUNCEMENT_HIGHWAY_ENTRIES)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ANNOUNCEMENT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ANNOUNCEMENT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OTHER_ROAD_ANNOUNCEMENT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OTHER_ROAD_ANNOUNCEMENT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ANNOUNCEMENT_TRUCK_STOP", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_ANNOUNCEMENT_TRUCK_STOP)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_PREANNOUNCEMENT_DIRECTIONS", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_PREANNOUNCEMENT_DIRECTIONS)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_POLE_EXIT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_POLE_EXIT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_DISTANCE_BOARD", osi3::TrafficSign_MainSign_Classification_Type_TYPE_HIGHWAY_DISTANCE_BOARD)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_NUMBERED_DETOUR", osi3::TrafficSign_MainSign_Classification_Type_TYPE_NUMBERED_DETOUR)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_ROUTING_BOARD", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_ROUTING_BOARD)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OPTIONAL_DETOUR", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OPTIONAL_DETOUR)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_OPTIONAL_DETOUR_ROUTING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_OPTIONAL_DETOUR_ROUTING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROUTE_RECOMMENDATION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROUTE_RECOMMENDATION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ROUTE_RECOMMENDATION_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ROUTE_RECOMMENDATION_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_TRANSITION_LEFT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_TRANSITION_LEFT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_TRANSITION_RIGHT", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_TRANSITION_RIGHT)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_RIGHT_LANE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_RIGHT_LANE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LEFT_LANE_END", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LEFT_LANE_END)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_RIGHT_LANE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_RIGHT_LANE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LEFT_LANE_BEGIN", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LEFT_LANE_BEGIN)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_CONSOLIDATION", osi3::TrafficSign_MainSign_Classification_Type_TYPE_ANNOUNCE_LANE_CONSOLIDATION)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_CITY_BLOCK", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DETOUR_CITY_BLOCK)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_GATE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_GATE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_POLE_WARNING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_POLE_WARNING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_CONE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_CONE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_MOBILE_LANE_CLOSURE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_MOBILE_LANE_CLOSURE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_REFLECTOR_POST", osi3::TrafficSign_MainSign_Classification_Type_TYPE_REFLECTOR_POST)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_DIRECTIONAL_BOARD_WARNING", osi3::TrafficSign_MainSign_Classification_Type_TYPE_DIRECTIONAL_BOARD_WARNING)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_GUIDING_PLATE", osi3::TrafficSign_MainSign_Classification_Type_TYPE_GUIDING_PLATE)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_GUIDING_PLATE_WEDGES", osi3::TrafficSign_MainSign_Classification_Type_TYPE_GUIDING_PLATE_WEDGES)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_PARKING_HAZARD", osi3::TrafficSign_MainSign_Classification_Type_TYPE_PARKING_HAZARD)
		.value("TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_LIGHT_GREEN_ARROW", osi3::TrafficSign_MainSign_Classification_Type_TYPE_TRAFFIC_LIGHT_GREEN_ARROW)
		.value("TrafficSign_MainSign_Classification_Type_TrafficSign_MainSign_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_MainSign_Classification_Type_TrafficSign_MainSign_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_MainSign_Classification_Type_TrafficSign_MainSign_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_MainSign_Classification_Type_TrafficSign_MainSign_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

}


// File: unknown/unknown_7.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_7(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B244_[osi3::TrafficSign_MainSign_Classification_DirectionScope] ";
	// osi3::TrafficSign_MainSign_Classification_DirectionScope file: line:395
	pybind11::enum_<osi3::TrafficSign_MainSign_Classification_DirectionScope>(M("osi3"), "TrafficSign_MainSign_Classification_DirectionScope", pybind11::arithmetic(), "")
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_UNKNOWN", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_UNKNOWN)
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_OTHER", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_OTHER)
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_NO_DIRECTION", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_NO_DIRECTION)
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_LEFT", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_LEFT)
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_RIGHT", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_RIGHT)
		.value("TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_LEFT_RIGHT", osi3::TrafficSign_MainSign_Classification_DirectionScope_DIRECTION_SCOPE_LEFT_RIGHT)
		.value("TrafficSign_MainSign_Classification_DirectionScope_TrafficSign_MainSign_Classification_DirectionScope_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_MainSign_Classification_DirectionScope_TrafficSign_MainSign_Classification_DirectionScope_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_MainSign_Classification_DirectionScope_TrafficSign_MainSign_Classification_DirectionScope_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_MainSign_Classification_DirectionScope_TrafficSign_MainSign_Classification_DirectionScope_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B245_[bool osi3::TrafficSign_MainSign_Classification_DirectionScope_IsValid(int)] ";
	std::cout << "B246_[const class google::protobuf::EnumDescriptor * osi3::TrafficSign_MainSign_Classification_DirectionScope_descriptor()] ";
	std::cout << "B247_[bool osi3::TrafficSign_MainSign_Classification_DirectionScope_Parse(const std::string &, enum osi3::TrafficSign_MainSign_Classification_DirectionScope *)] ";
	std::cout << "B248_[osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction] ";
	// osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction file: line:424
	pybind11::enum_<osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction>(M("osi3"), "TrafficSign_SupplementarySign_Classification_Arrow_Direction", pybind11::arithmetic(), "")
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_UNKNOWN", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_UNKNOWN)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_OTHER", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_OTHER)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_NO_DIRECTION", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_NO_DIRECTION)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_0_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_0_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_45_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_45_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_45_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_45_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_90_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_90_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_90_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_90_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_135_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_135_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_135_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_135_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_180_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_DIRECT_180_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_45_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_45_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_45_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_45_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_90_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_90_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_90_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_90_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_135_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_135_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_135_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_135_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_180_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_180_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_180_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_TURN_180_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_0_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_0_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_45_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_45_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_45_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_45_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_90_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_90_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_90_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_90_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_135_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_135_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_135_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_135_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_180_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_CIRCLE_180_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_TO_TURN_0_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_TO_TURN_0_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_TO_TURN_0_DEG", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_TO_TURN_0_DEG)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_TO_TURN_90_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_TO_TURN_90_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_TO_TURN_90_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_TO_TURN_90_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_DRIVE_BACK_TO_TURN_90_DEG_RIGHT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_LEFT_DRIVE_BACK_TO_TURN_90_DEG_RIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_DRIVE_BACK_TO_TURN_90_DEG_LEFT", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_DIRECTION_KEEP_RIGHT_DRIVE_BACK_TO_TURN_90_DEG_LEFT)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_TrafficSign_SupplementarySign_Classification_Arrow_Direction_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_TrafficSign_SupplementarySign_Classification_Arrow_Direction_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_SupplementarySign_Classification_Arrow_Direction_TrafficSign_SupplementarySign_Classification_Arrow_Direction_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_TrafficSign_SupplementarySign_Classification_Arrow_Direction_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B249_[bool osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_IsValid(int)] ";
	std::cout << "B250_[const class google::protobuf::EnumDescriptor * osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_descriptor()] ";
	std::cout << "B251_[bool osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction_Parse(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction *)] ";
	std::cout << "B252_[osi3::TrafficSign_SupplementarySign_Classification_Type] ";
	// osi3::TrafficSign_SupplementarySign_Classification_Type file: line:480
	pybind11::enum_<osi3::TrafficSign_SupplementarySign_Classification_Type>(M("osi3"), "TrafficSign_SupplementarySign_Classification_Type", pybind11::arithmetic(), "")
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_UNKNOWN", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_UNKNOWN)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_OTHER", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_OTHER)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_NO_SIGN", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_NO_SIGN)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TEXT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TEXT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_SPACE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_SPACE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TIME", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TIME)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_ARROW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_ARROW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_CONSTRAINED_TO", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_CONSTRAINED_TO)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_EXCEPT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_EXCEPT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_VALID_FOR_DISTANCE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_VALID_FOR_DISTANCE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_FOUR_WAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_FOUR_WAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_LEFT_FOUR_WAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_LEFT_FOUR_WAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_THREE_WAY_STRAIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_THREE_WAY_STRAIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_THREE_WAY_SIDEWAYS", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_LEFT_THREE_WAY_SIDEWAYS)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_LEFT_THREE_WAY_STRAIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_LEFT_THREE_WAY_STRAIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_FOUR_WAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_FOUR_WAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_RIGHT_FOUR_WAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_RIGHT_FOUR_WAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_THREE_WAY_STRAIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_THREE_WAY_STRAIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_THREE_WAY_SIDEWAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_BOTTOM_RIGHT_THREE_WAY_SIDEWAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_RIGHT_THREE_WAY_STRAIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PRIORITY_ROAD_TOP_RIGHT_THREE_WAY_STRAIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_VALID_IN_DISTANCE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_VALID_IN_DISTANCE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_STOP_IN", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_STOP_IN)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_LEFT_ARROW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_LEFT_ARROW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_LEFT_BEND_ARROW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_LEFT_BEND_ARROW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_RIGHT_ARROW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_RIGHT_ARROW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_RIGHT_BEND_ARROW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_RIGHT_BEND_ARROW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_ACCIDENT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_ACCIDENT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_SNOW", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_SNOW)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_FOG", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_FOG)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_ROLLING_HIGHWAY_INFORMATION", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_ROLLING_HIGHWAY_INFORMATION)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_SERVICES", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_SERVICES)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TIME_RANGE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TIME_RANGE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PARKING_DISC_TIME_RESTRICTION", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PARKING_DISC_TIME_RESTRICTION)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_WEIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_WEIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_WET", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_WET)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_PARKING_CONSTRAINT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_PARKING_CONSTRAINT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_NO_WAITING_SIDE_STRIPES", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_NO_WAITING_SIDE_STRIPES)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_RAIN", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_RAIN)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_SNOW_RAIN", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_SNOW_RAIN)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_NIGHT", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_NIGHT)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_STOP_4_WAY", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_STOP_4_WAY)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TRUCK", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TRUCK)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TRACTORS_MAY_BE_PASSED", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TRACTORS_MAY_BE_PASSED)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_HAZARDOUS", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_HAZARDOUS)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_TRAILER", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_TRAILER)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_ZONE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_ZONE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_MOTORCYCLE", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_MOTORCYCLE)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_MOTORCYCLE_ALLOWED", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_MOTORCYCLE_ALLOWED)
		.value("TrafficSign_SupplementarySign_Classification_Type_TYPE_CAR", osi3::TrafficSign_SupplementarySign_Classification_Type_TYPE_CAR)
		.value("TrafficSign_SupplementarySign_Classification_Type_TrafficSign_SupplementarySign_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Type_TrafficSign_SupplementarySign_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_SupplementarySign_Classification_Type_TrafficSign_SupplementarySign_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Type_TrafficSign_SupplementarySign_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

}


// File: unknown/unknown_8.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_8(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B253_[osi3::TrafficSign_SupplementarySign_Classification_Actor] ";
	// osi3::TrafficSign_SupplementarySign_Classification_Actor file: line:552
	pybind11::enum_<osi3::TrafficSign_SupplementarySign_Classification_Actor>(M("osi3"), "TrafficSign_SupplementarySign_Classification_Actor", pybind11::arithmetic(), "")
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_UNKNOWN", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_UNKNOWN)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_OTHER", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_OTHER)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_NO_ACTOR", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_NO_ACTOR)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_AGRICULTURAL_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_AGRICULTURAL_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_BICYCLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_BICYCLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_BUSES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_BUSES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CAMPERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CAMPERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARAVANS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARAVANS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS_WITH_CARAVANS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS_WITH_CARAVANS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS_WITH_TRAILERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CARS_WITH_TRAILERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CATTLE", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CATTLE)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CHILDREN", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CHILDREN)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CONSTRUCTION_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_CONSTRUCTION_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_DELIVERY_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_DELIVERY_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_DISABLED_PERSONS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_DISABLED_PERSONS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_EBIKES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_EBIKES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_ELECTRIC_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_ELECTRIC_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_EMERGENCY_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_EMERGENCY_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_FERRY_USERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_FERRY_USERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_FORESTRY_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_FORESTRY_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HAZARDOUS_GOODS_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HAZARDOUS_GOODS_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HORSE_CARRIAGES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HORSE_CARRIAGES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HORSE_RIDERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_HORSE_RIDERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_INLINE_SKATERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_INLINE_SKATERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MEDICAL_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MEDICAL_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MILITARY_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MILITARY_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOPEDS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOPEDS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOTORCYCLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOTORCYCLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOTORIZED_MULTITRACK_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_MOTORIZED_MULTITRACK_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_OPERATIONAL_AND_UTILITY_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_OPERATIONAL_AND_UTILITY_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_PEDESTRIANS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_PEDESTRIANS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_PUBLIC_TRANSPORT_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_PUBLIC_TRANSPORT_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_RAILROAD_TRAFFIC", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_RAILROAD_TRAFFIC)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_RESIDENTS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_RESIDENTS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_SLURRY_TRANSPORT", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_SLURRY_TRANSPORT)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TAXIS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TAXIS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRACTORS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRACTORS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRAILERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRAILERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRAMS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRAMS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS_WITH_SEMITRAILERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS_WITH_SEMITRAILERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS_WITH_TRAILERS", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_TRUCKS_WITH_TRAILERS)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_GREEN_BADGES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_GREEN_BADGES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_RED_BADGES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_RED_BADGES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_YELLOW_BADGES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_VEHICLES_WITH_YELLOW_BADGES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_WATER_POLLUTANT_VEHICLES", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_WATER_POLLUTANT_VEHICLES)
		.value("TrafficSign_SupplementarySign_Classification_Actor_ACTOR_WINTER_SPORTSPEOPLE", osi3::TrafficSign_SupplementarySign_Classification_Actor_ACTOR_WINTER_SPORTSPEOPLE)
		.value("TrafficSign_SupplementarySign_Classification_Actor_TrafficSign_SupplementarySign_Classification_Actor_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Actor_TrafficSign_SupplementarySign_Classification_Actor_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_SupplementarySign_Classification_Actor_TrafficSign_SupplementarySign_Classification_Actor_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_SupplementarySign_Classification_Actor_TrafficSign_SupplementarySign_Classification_Actor_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B254_[bool osi3::TrafficSign_SupplementarySign_Classification_Actor_IsValid(int)] ";
	std::cout << "B255_[const class google::protobuf::EnumDescriptor * osi3::TrafficSign_SupplementarySign_Classification_Actor_descriptor()] ";
	std::cout << "B256_[bool osi3::TrafficSign_SupplementarySign_Classification_Actor_Parse(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Actor *)] ";
	std::cout << "B257_[osi3::TrafficSign_Variability] ";
	// osi3::TrafficSign_Variability file: line:623
	pybind11::enum_<osi3::TrafficSign_Variability>(M("osi3"), "TrafficSign_Variability", pybind11::arithmetic(), "")
		.value("TrafficSign_Variability_VARIABILITY_UNKNOWN", osi3::TrafficSign_Variability_VARIABILITY_UNKNOWN)
		.value("TrafficSign_Variability_VARIABILITY_OTHER", osi3::TrafficSign_Variability_VARIABILITY_OTHER)
		.value("TrafficSign_Variability_VARIABILITY_FIXED", osi3::TrafficSign_Variability_VARIABILITY_FIXED)
		.value("TrafficSign_Variability_VARIABILITY_VARIABLE", osi3::TrafficSign_Variability_VARIABILITY_VARIABLE)
		.value("TrafficSign_Variability_TrafficSign_Variability_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_Variability_TrafficSign_Variability_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficSign_Variability_TrafficSign_Variability_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficSign_Variability_TrafficSign_Variability_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B258_[bool osi3::TrafficSign_Variability_IsValid(int)] ";
	std::cout << "B259_[const class google::protobuf::EnumDescriptor * osi3::TrafficSign_Variability_descriptor()] ";
	std::cout << "B260_[bool osi3::TrafficSign_Variability_Parse(const std::string &, enum osi3::TrafficSign_Variability *)] ";
	std::cout << "B261_[osi3::TrafficSignValue] ";
	{ // osi3::TrafficSignValue file: line:652
		pybind11::class_<osi3::TrafficSignValue, std::shared_ptr<osi3::TrafficSignValue>, google::protobuf::Message> cl(M("osi3"), "TrafficSignValue", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSignValue(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSignValue const &o){ return new osi3::TrafficSignValue(o); } ) );
		cl.def("assign", (class osi3::TrafficSignValue & (osi3::TrafficSignValue::*)(const class osi3::TrafficSignValue &)) &osi3::TrafficSignValue::operator=, "C++: osi3::TrafficSignValue::operator=(const class osi3::TrafficSignValue &) --> class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSignValue::descriptor, "C++: osi3::TrafficSignValue::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSignValue::GetDescriptor, "C++: osi3::TrafficSignValue::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSignValue::GetReflection, "C++: osi3::TrafficSignValue::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSignValue & (*)()) &osi3::TrafficSignValue::default_instance, "C++: osi3::TrafficSignValue::default_instance() --> const class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSignValue * (*)()) &osi3::TrafficSignValue::internal_default_instance, "C++: osi3::TrafficSignValue::internal_default_instance() --> const class osi3::TrafficSignValue *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSignValue::*)(class osi3::TrafficSignValue *)) &osi3::TrafficSignValue::Swap, "C++: osi3::TrafficSignValue::Swap(class osi3::TrafficSignValue *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSignValue::*)(class osi3::TrafficSignValue *)) &osi3::TrafficSignValue::UnsafeArenaSwap, "C++: osi3::TrafficSignValue::UnsafeArenaSwap(class osi3::TrafficSignValue *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSignValue * (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::New, "C++: osi3::TrafficSignValue::New() const --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSignValue * (osi3::TrafficSignValue::*)(class google::protobuf::Arena *) const) &osi3::TrafficSignValue::New, "C++: osi3::TrafficSignValue::New(class google::protobuf::Arena *) const --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSignValue::*)(const class google::protobuf::Message &)) &osi3::TrafficSignValue::CopyFrom, "C++: osi3::TrafficSignValue::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSignValue::*)(const class google::protobuf::Message &)) &osi3::TrafficSignValue::MergeFrom, "C++: osi3::TrafficSignValue::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSignValue::*)(const class osi3::TrafficSignValue &)) &osi3::TrafficSignValue::CopyFrom, "C++: osi3::TrafficSignValue::CopyFrom(const class osi3::TrafficSignValue &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSignValue::*)(const class osi3::TrafficSignValue &)) &osi3::TrafficSignValue::MergeFrom, "C++: osi3::TrafficSignValue::MergeFrom(const class osi3::TrafficSignValue &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSignValue::*)()) &osi3::TrafficSignValue::Clear, "C++: osi3::TrafficSignValue::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::IsInitialized, "C++: osi3::TrafficSignValue::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::ByteSizeLong, "C++: osi3::TrafficSignValue::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSignValue::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSignValue::_InternalParse, "C++: osi3::TrafficSignValue::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSignValue::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSignValue::_InternalSerialize, "C++: osi3::TrafficSignValue::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::GetCachedSize, "C++: osi3::TrafficSignValue::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::GetMetadata, "C++: osi3::TrafficSignValue::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Unit_IsValid", (bool (*)(int)) &osi3::TrafficSignValue::Unit_IsValid, "C++: osi3::TrafficSignValue::Unit_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Unit_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSignValue::Unit_descriptor, "C++: osi3::TrafficSignValue::Unit_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Unit_Parse", (bool (*)(const std::string &, enum osi3::TrafficSignValue_Unit *)) &osi3::TrafficSignValue::Unit_Parse, "C++: osi3::TrafficSignValue::Unit_Parse(const std::string &, enum osi3::TrafficSignValue_Unit *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("clear_text", (void (osi3::TrafficSignValue::*)()) &osi3::TrafficSignValue::clear_text, "C++: osi3::TrafficSignValue::clear_text() --> void");
		cl.def("set_text", (void (osi3::TrafficSignValue::*)(const char *)) &osi3::TrafficSignValue::set_text, "C++: osi3::TrafficSignValue::set_text(const char *) --> void", pybind11::arg("value"));
		cl.def("set_text", (void (osi3::TrafficSignValue::*)(const char *, unsigned long)) &osi3::TrafficSignValue::set_text, "C++: osi3::TrafficSignValue::set_text(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("clear_value", (void (osi3::TrafficSignValue::*)()) &osi3::TrafficSignValue::clear_value, "C++: osi3::TrafficSignValue::clear_value() --> void");
		cl.def("value", (double (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::value, "C++: osi3::TrafficSignValue::value() const --> double");
		cl.def("set_value", (void (osi3::TrafficSignValue::*)(double)) &osi3::TrafficSignValue::set_value, "C++: osi3::TrafficSignValue::set_value(double) --> void", pybind11::arg("value"));
		cl.def("clear_value_unit", (void (osi3::TrafficSignValue::*)()) &osi3::TrafficSignValue::clear_value_unit, "C++: osi3::TrafficSignValue::clear_value_unit() --> void");
		cl.def("value_unit", (enum osi3::TrafficSignValue_Unit (osi3::TrafficSignValue::*)() const) &osi3::TrafficSignValue::value_unit, "C++: osi3::TrafficSignValue::value_unit() const --> enum osi3::TrafficSignValue_Unit");
		cl.def("set_value_unit", (void (osi3::TrafficSignValue::*)(enum osi3::TrafficSignValue_Unit)) &osi3::TrafficSignValue::set_value_unit, "C++: osi3::TrafficSignValue::set_value_unit(enum osi3::TrafficSignValue_Unit) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_9.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_9(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B262_[osi3::TrafficSign_MainSign_Classification] ";
	{ // osi3::TrafficSign_MainSign_Classification file: line:874
		pybind11::class_<osi3::TrafficSign_MainSign_Classification, std::shared_ptr<osi3::TrafficSign_MainSign_Classification>, google::protobuf::Message> cl(M("osi3"), "TrafficSign_MainSign_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign_MainSign_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign_MainSign_Classification const &o){ return new osi3::TrafficSign_MainSign_Classification(o); } ) );
		cl.def("assign", (class osi3::TrafficSign_MainSign_Classification & (osi3::TrafficSign_MainSign_Classification::*)(const class osi3::TrafficSign_MainSign_Classification &)) &osi3::TrafficSign_MainSign_Classification::operator=, "C++: osi3::TrafficSign_MainSign_Classification::operator=(const class osi3::TrafficSign_MainSign_Classification &) --> class osi3::TrafficSign_MainSign_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_MainSign_Classification::descriptor, "C++: osi3::TrafficSign_MainSign_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_MainSign_Classification::GetDescriptor, "C++: osi3::TrafficSign_MainSign_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign_MainSign_Classification::GetReflection, "C++: osi3::TrafficSign_MainSign_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign_MainSign_Classification & (*)()) &osi3::TrafficSign_MainSign_Classification::default_instance, "C++: osi3::TrafficSign_MainSign_Classification::default_instance() --> const class osi3::TrafficSign_MainSign_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign_MainSign_Classification * (*)()) &osi3::TrafficSign_MainSign_Classification::internal_default_instance, "C++: osi3::TrafficSign_MainSign_Classification::internal_default_instance() --> const class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign_MainSign_Classification::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::TrafficSign_MainSign_Classification::Swap, "C++: osi3::TrafficSign_MainSign_Classification::Swap(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign_MainSign_Classification::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::TrafficSign_MainSign_Classification::UnsafeArenaSwap, "C++: osi3::TrafficSign_MainSign_Classification::UnsafeArenaSwap(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign_MainSign_Classification * (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::New, "C++: osi3::TrafficSign_MainSign_Classification::New() const --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign_MainSign_Classification * (osi3::TrafficSign_MainSign_Classification::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign_MainSign_Classification::New, "C++: osi3::TrafficSign_MainSign_Classification::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_MainSign_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_MainSign_Classification::CopyFrom, "C++: osi3::TrafficSign_MainSign_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_MainSign_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_MainSign_Classification::MergeFrom, "C++: osi3::TrafficSign_MainSign_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_MainSign_Classification::*)(const class osi3::TrafficSign_MainSign_Classification &)) &osi3::TrafficSign_MainSign_Classification::CopyFrom, "C++: osi3::TrafficSign_MainSign_Classification::CopyFrom(const class osi3::TrafficSign_MainSign_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_MainSign_Classification::*)(const class osi3::TrafficSign_MainSign_Classification &)) &osi3::TrafficSign_MainSign_Classification::MergeFrom, "C++: osi3::TrafficSign_MainSign_Classification::MergeFrom(const class osi3::TrafficSign_MainSign_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::Clear, "C++: osi3::TrafficSign_MainSign_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::IsInitialized, "C++: osi3::TrafficSign_MainSign_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::ByteSizeLong, "C++: osi3::TrafficSign_MainSign_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign_MainSign_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign_MainSign_Classification::_InternalParse, "C++: osi3::TrafficSign_MainSign_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign_MainSign_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign_MainSign_Classification::_InternalSerialize, "C++: osi3::TrafficSign_MainSign_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::GetCachedSize, "C++: osi3::TrafficSign_MainSign_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::GetMetadata, "C++: osi3::TrafficSign_MainSign_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::TrafficSign_MainSign_Classification::Type_IsValid, "C++: osi3::TrafficSign_MainSign_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign_MainSign_Classification::Type_descriptor, "C++: osi3::TrafficSign_MainSign_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_MainSign_Classification_Type *)) &osi3::TrafficSign_MainSign_Classification::Type_Parse, "C++: osi3::TrafficSign_MainSign_Classification::Type_Parse(const std::string &, enum osi3::TrafficSign_MainSign_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("DirectionScope_IsValid", (bool (*)(int)) &osi3::TrafficSign_MainSign_Classification::DirectionScope_IsValid, "C++: osi3::TrafficSign_MainSign_Classification::DirectionScope_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("DirectionScope_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign_MainSign_Classification::DirectionScope_descriptor, "C++: osi3::TrafficSign_MainSign_Classification::DirectionScope_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("DirectionScope_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_MainSign_Classification_DirectionScope *)) &osi3::TrafficSign_MainSign_Classification::DirectionScope_Parse, "C++: osi3::TrafficSign_MainSign_Classification::DirectionScope_Parse(const std::string &, enum osi3::TrafficSign_MainSign_Classification_DirectionScope *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("assigned_lane_id_size", (int (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::assigned_lane_id_size, "C++: osi3::TrafficSign_MainSign_Classification::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficSign_MainSign_Classification::*)(int)) &osi3::TrafficSign_MainSign_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::TrafficSign_MainSign_Classification::*)(int) const) &osi3::TrafficSign_MainSign_Classification::assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::add_assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::assigned_lane_id, "C++: osi3::TrafficSign_MainSign_Classification::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("has_value", (bool (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::has_value, "C++: osi3::TrafficSign_MainSign_Classification::has_value() const --> bool");
		cl.def("clear_value", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_value, "C++: osi3::TrafficSign_MainSign_Classification::clear_value() --> void");
		cl.def("value", (const class osi3::TrafficSignValue & (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::value, "C++: osi3::TrafficSign_MainSign_Classification::value() const --> const class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic);
		cl.def("release_value", (class osi3::TrafficSignValue * (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::release_value, "C++: osi3::TrafficSign_MainSign_Classification::release_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("mutable_value", (class osi3::TrafficSignValue * (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::mutable_value, "C++: osi3::TrafficSign_MainSign_Classification::mutable_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_value", (void (osi3::TrafficSign_MainSign_Classification::*)(class osi3::TrafficSignValue *)) &osi3::TrafficSign_MainSign_Classification::set_allocated_value, "C++: osi3::TrafficSign_MainSign_Classification::set_allocated_value(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("unsafe_arena_set_allocated_value", (void (osi3::TrafficSign_MainSign_Classification::*)(class osi3::TrafficSignValue *)) &osi3::TrafficSign_MainSign_Classification::unsafe_arena_set_allocated_value, "C++: osi3::TrafficSign_MainSign_Classification::unsafe_arena_set_allocated_value(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("unsafe_arena_release_value", (class osi3::TrafficSignValue * (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::unsafe_arena_release_value, "C++: osi3::TrafficSign_MainSign_Classification::unsafe_arena_release_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("clear_variability", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_variability, "C++: osi3::TrafficSign_MainSign_Classification::clear_variability() --> void");
		cl.def("variability", (enum osi3::TrafficSign_Variability (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::variability, "C++: osi3::TrafficSign_MainSign_Classification::variability() const --> enum osi3::TrafficSign_Variability");
		cl.def("set_variability", (void (osi3::TrafficSign_MainSign_Classification::*)(enum osi3::TrafficSign_Variability)) &osi3::TrafficSign_MainSign_Classification::set_variability, "C++: osi3::TrafficSign_MainSign_Classification::set_variability(enum osi3::TrafficSign_Variability) --> void", pybind11::arg("value"));
		cl.def("clear_type", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_type, "C++: osi3::TrafficSign_MainSign_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::TrafficSign_MainSign_Classification_Type (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::type, "C++: osi3::TrafficSign_MainSign_Classification::type() const --> enum osi3::TrafficSign_MainSign_Classification_Type");
		cl.def("set_type", (void (osi3::TrafficSign_MainSign_Classification::*)(enum osi3::TrafficSign_MainSign_Classification_Type)) &osi3::TrafficSign_MainSign_Classification::set_type, "C++: osi3::TrafficSign_MainSign_Classification::set_type(enum osi3::TrafficSign_MainSign_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_direction_scope", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_direction_scope, "C++: osi3::TrafficSign_MainSign_Classification::clear_direction_scope() --> void");
		cl.def("direction_scope", (enum osi3::TrafficSign_MainSign_Classification_DirectionScope (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::direction_scope, "C++: osi3::TrafficSign_MainSign_Classification::direction_scope() const --> enum osi3::TrafficSign_MainSign_Classification_DirectionScope");
		cl.def("set_direction_scope", (void (osi3::TrafficSign_MainSign_Classification::*)(enum osi3::TrafficSign_MainSign_Classification_DirectionScope)) &osi3::TrafficSign_MainSign_Classification::set_direction_scope, "C++: osi3::TrafficSign_MainSign_Classification::set_direction_scope(enum osi3::TrafficSign_MainSign_Classification_DirectionScope) --> void", pybind11::arg("value"));
		cl.def("clear_vertically_mirrored", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_vertically_mirrored, "C++: osi3::TrafficSign_MainSign_Classification::clear_vertically_mirrored() --> void");
		cl.def("vertically_mirrored", (bool (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::vertically_mirrored, "C++: osi3::TrafficSign_MainSign_Classification::vertically_mirrored() const --> bool");
		cl.def("set_vertically_mirrored", (void (osi3::TrafficSign_MainSign_Classification::*)(bool)) &osi3::TrafficSign_MainSign_Classification::set_vertically_mirrored, "C++: osi3::TrafficSign_MainSign_Classification::set_vertically_mirrored(bool) --> void", pybind11::arg("value"));
		cl.def("clear_is_out_of_service", (void (osi3::TrafficSign_MainSign_Classification::*)()) &osi3::TrafficSign_MainSign_Classification::clear_is_out_of_service, "C++: osi3::TrafficSign_MainSign_Classification::clear_is_out_of_service() --> void");
		cl.def("is_out_of_service", (bool (osi3::TrafficSign_MainSign_Classification::*)() const) &osi3::TrafficSign_MainSign_Classification::is_out_of_service, "C++: osi3::TrafficSign_MainSign_Classification::is_out_of_service() const --> bool");
		cl.def("set_is_out_of_service", (void (osi3::TrafficSign_MainSign_Classification::*)(bool)) &osi3::TrafficSign_MainSign_Classification::set_is_out_of_service, "C++: osi3::TrafficSign_MainSign_Classification::set_is_out_of_service(bool) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_10.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_10(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B263_[osi3::TrafficSign_MainSign] ";
	{ // osi3::TrafficSign_MainSign file: line:1641
		pybind11::class_<osi3::TrafficSign_MainSign, std::shared_ptr<osi3::TrafficSign_MainSign>, google::protobuf::Message> cl(M("osi3"), "TrafficSign_MainSign", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign_MainSign(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign_MainSign const &o){ return new osi3::TrafficSign_MainSign(o); } ) );
		cl.def("assign", (class osi3::TrafficSign_MainSign & (osi3::TrafficSign_MainSign::*)(const class osi3::TrafficSign_MainSign &)) &osi3::TrafficSign_MainSign::operator=, "C++: osi3::TrafficSign_MainSign::operator=(const class osi3::TrafficSign_MainSign &) --> class osi3::TrafficSign_MainSign &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_MainSign::descriptor, "C++: osi3::TrafficSign_MainSign::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_MainSign::GetDescriptor, "C++: osi3::TrafficSign_MainSign::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign_MainSign::GetReflection, "C++: osi3::TrafficSign_MainSign::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign_MainSign & (*)()) &osi3::TrafficSign_MainSign::default_instance, "C++: osi3::TrafficSign_MainSign::default_instance() --> const class osi3::TrafficSign_MainSign &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign_MainSign * (*)()) &osi3::TrafficSign_MainSign::internal_default_instance, "C++: osi3::TrafficSign_MainSign::internal_default_instance() --> const class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign_MainSign::*)(class osi3::TrafficSign_MainSign *)) &osi3::TrafficSign_MainSign::Swap, "C++: osi3::TrafficSign_MainSign::Swap(class osi3::TrafficSign_MainSign *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign_MainSign::*)(class osi3::TrafficSign_MainSign *)) &osi3::TrafficSign_MainSign::UnsafeArenaSwap, "C++: osi3::TrafficSign_MainSign::UnsafeArenaSwap(class osi3::TrafficSign_MainSign *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign_MainSign * (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::New, "C++: osi3::TrafficSign_MainSign::New() const --> class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign_MainSign * (osi3::TrafficSign_MainSign::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign_MainSign::New, "C++: osi3::TrafficSign_MainSign::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_MainSign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_MainSign::CopyFrom, "C++: osi3::TrafficSign_MainSign::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_MainSign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_MainSign::MergeFrom, "C++: osi3::TrafficSign_MainSign::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_MainSign::*)(const class osi3::TrafficSign_MainSign &)) &osi3::TrafficSign_MainSign::CopyFrom, "C++: osi3::TrafficSign_MainSign::CopyFrom(const class osi3::TrafficSign_MainSign &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_MainSign::*)(const class osi3::TrafficSign_MainSign &)) &osi3::TrafficSign_MainSign::MergeFrom, "C++: osi3::TrafficSign_MainSign::MergeFrom(const class osi3::TrafficSign_MainSign &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::Clear, "C++: osi3::TrafficSign_MainSign::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::IsInitialized, "C++: osi3::TrafficSign_MainSign::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::ByteSizeLong, "C++: osi3::TrafficSign_MainSign::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign_MainSign::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign_MainSign::_InternalParse, "C++: osi3::TrafficSign_MainSign::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign_MainSign::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign_MainSign::_InternalSerialize, "C++: osi3::TrafficSign_MainSign::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::GetCachedSize, "C++: osi3::TrafficSign_MainSign::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::GetMetadata, "C++: osi3::TrafficSign_MainSign::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_model_reference", (void (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::clear_model_reference, "C++: osi3::TrafficSign_MainSign::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::TrafficSign_MainSign::*)(const char *)) &osi3::TrafficSign_MainSign::set_model_reference, "C++: osi3::TrafficSign_MainSign::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::TrafficSign_MainSign::*)(const char *, unsigned long)) &osi3::TrafficSign_MainSign::set_model_reference, "C++: osi3::TrafficSign_MainSign::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_base", (bool (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::has_base, "C++: osi3::TrafficSign_MainSign::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::clear_base, "C++: osi3::TrafficSign_MainSign::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::base, "C++: osi3::TrafficSign_MainSign::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::release_base, "C++: osi3::TrafficSign_MainSign::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::mutable_base, "C++: osi3::TrafficSign_MainSign::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::TrafficSign_MainSign::*)(class osi3::BaseStationary *)) &osi3::TrafficSign_MainSign::set_allocated_base, "C++: osi3::TrafficSign_MainSign::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::TrafficSign_MainSign::*)(class osi3::BaseStationary *)) &osi3::TrafficSign_MainSign::unsafe_arena_set_allocated_base, "C++: osi3::TrafficSign_MainSign::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::unsafe_arena_release_base, "C++: osi3::TrafficSign_MainSign::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::has_classification, "C++: osi3::TrafficSign_MainSign::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::clear_classification, "C++: osi3::TrafficSign_MainSign::clear_classification() --> void");
		cl.def("classification", (const class osi3::TrafficSign_MainSign_Classification & (osi3::TrafficSign_MainSign::*)() const) &osi3::TrafficSign_MainSign::classification, "C++: osi3::TrafficSign_MainSign::classification() const --> const class osi3::TrafficSign_MainSign_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::release_classification, "C++: osi3::TrafficSign_MainSign::release_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::mutable_classification, "C++: osi3::TrafficSign_MainSign::mutable_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::TrafficSign_MainSign::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::TrafficSign_MainSign::set_allocated_classification, "C++: osi3::TrafficSign_MainSign::set_allocated_classification(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::TrafficSign_MainSign::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::TrafficSign_MainSign::unsafe_arena_set_allocated_classification, "C++: osi3::TrafficSign_MainSign::unsafe_arena_set_allocated_classification(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::TrafficSign_MainSign::*)()) &osi3::TrafficSign_MainSign::unsafe_arena_release_classification, "C++: osi3::TrafficSign_MainSign::unsafe_arena_release_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B264_[void osi3::swap(class osi3::TrafficSign_MainSign &, class osi3::TrafficSign_MainSign &)] ";
	std::cout << "B265_[osi3::TrafficSign_SupplementarySign_Classification_Arrow] ";
	{ // osi3::TrafficSign_SupplementarySign_Classification_Arrow file: line:1827
		pybind11::class_<osi3::TrafficSign_SupplementarySign_Classification_Arrow, std::shared_ptr<osi3::TrafficSign_SupplementarySign_Classification_Arrow>, google::protobuf::Message> cl(M("osi3"), "TrafficSign_SupplementarySign_Classification_Arrow", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign_SupplementarySign_Classification_Arrow(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign_SupplementarySign_Classification_Arrow const &o){ return new osi3::TrafficSign_SupplementarySign_Classification_Arrow(o); } ) );
		cl.def("assign", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::operator=, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::operator=(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &) --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::descriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetDescriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetReflection, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::default_instance, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::default_instance() --> const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::internal_default_instance, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::internal_default_instance() --> const class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::Swap, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::Swap(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::UnsafeArenaSwap, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::UnsafeArenaSwap(class osi3::TrafficSign_SupplementarySign_Classification_Arrow *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::New, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::New() const --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::New, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::CopyFrom(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::MergeFrom(const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::Clear, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::IsInitialized, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::ByteSizeLong, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::_InternalParse, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::_InternalSerialize, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetCachedSize, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetMetadata, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Direction_IsValid", (bool (*)(int)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_IsValid, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Direction_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_descriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Direction_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction *)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_Parse, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::Direction_Parse(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("lane_id_size", (int (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id_size, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id_size() const --> int");
		cl.def("clear_lane_id", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::clear_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::clear_lane_id() --> void");
		cl.def("mutable_lane_id", (class osi3::Identifier * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(int)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("lane_id", (const class osi3::Identifier & (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_lane_id", (class osi3::Identifier * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::add_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::add_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("direction_size", (int (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction_size, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction_size() const --> int");
		cl.def("clear_direction", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::clear_direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::clear_direction() --> void");
		cl.def("direction", (enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction(int) const --> enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction", pybind11::arg("index"));
		cl.def("set_direction", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(int, enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::set_direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::set_direction(int, enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_direction", (void (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)(enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction)) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::add_direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::add_direction(enum osi3::TrafficSign_SupplementarySign_Classification_Arrow_Direction) --> void", pybind11::arg("value"));
		cl.def("direction", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)() const) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::direction() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_direction", (class google::protobuf::RepeatedField<google::protobuf::int32> * (osi3::TrafficSign_SupplementarySign_Classification_Arrow::*)()) &osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_direction, "C++: osi3::TrafficSign_SupplementarySign_Classification_Arrow::mutable_direction() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_11.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_11(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B266_[osi3::TrafficSign_SupplementarySign_Classification] ";
	{ // osi3::TrafficSign_SupplementarySign_Classification file: line:2085
		pybind11::class_<osi3::TrafficSign_SupplementarySign_Classification, std::shared_ptr<osi3::TrafficSign_SupplementarySign_Classification>, google::protobuf::Message> cl(M("osi3"), "TrafficSign_SupplementarySign_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign_SupplementarySign_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign_SupplementarySign_Classification const &o){ return new osi3::TrafficSign_SupplementarySign_Classification(o); } ) );
		cl.def("assign", (class osi3::TrafficSign_SupplementarySign_Classification & (osi3::TrafficSign_SupplementarySign_Classification::*)(const class osi3::TrafficSign_SupplementarySign_Classification &)) &osi3::TrafficSign_SupplementarySign_Classification::operator=, "C++: osi3::TrafficSign_SupplementarySign_Classification::operator=(const class osi3::TrafficSign_SupplementarySign_Classification &) --> class osi3::TrafficSign_SupplementarySign_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::descriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::GetDescriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::GetReflection, "C++: osi3::TrafficSign_SupplementarySign_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign_SupplementarySign_Classification & (*)()) &osi3::TrafficSign_SupplementarySign_Classification::default_instance, "C++: osi3::TrafficSign_SupplementarySign_Classification::default_instance() --> const class osi3::TrafficSign_SupplementarySign_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign_SupplementarySign_Classification * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::internal_default_instance, "C++: osi3::TrafficSign_SupplementarySign_Classification::internal_default_instance() --> const class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(class osi3::TrafficSign_SupplementarySign_Classification *)) &osi3::TrafficSign_SupplementarySign_Classification::Swap, "C++: osi3::TrafficSign_SupplementarySign_Classification::Swap(class osi3::TrafficSign_SupplementarySign_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(class osi3::TrafficSign_SupplementarySign_Classification *)) &osi3::TrafficSign_SupplementarySign_Classification::UnsafeArenaSwap, "C++: osi3::TrafficSign_SupplementarySign_Classification::UnsafeArenaSwap(class osi3::TrafficSign_SupplementarySign_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign_SupplementarySign_Classification * (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::New, "C++: osi3::TrafficSign_SupplementarySign_Classification::New() const --> class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign_SupplementarySign_Classification * (osi3::TrafficSign_SupplementarySign_Classification::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign_SupplementarySign_Classification::New, "C++: osi3::TrafficSign_SupplementarySign_Classification::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign_Classification::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign_Classification::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(const class osi3::TrafficSign_SupplementarySign_Classification &)) &osi3::TrafficSign_SupplementarySign_Classification::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification::CopyFrom(const class osi3::TrafficSign_SupplementarySign_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(const class osi3::TrafficSign_SupplementarySign_Classification &)) &osi3::TrafficSign_SupplementarySign_Classification::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign_Classification::MergeFrom(const class osi3::TrafficSign_SupplementarySign_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::Clear, "C++: osi3::TrafficSign_SupplementarySign_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::IsInitialized, "C++: osi3::TrafficSign_SupplementarySign_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::ByteSizeLong, "C++: osi3::TrafficSign_SupplementarySign_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign_SupplementarySign_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign_SupplementarySign_Classification::_InternalParse, "C++: osi3::TrafficSign_SupplementarySign_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign_SupplementarySign_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign_SupplementarySign_Classification::_InternalSerialize, "C++: osi3::TrafficSign_SupplementarySign_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::GetCachedSize, "C++: osi3::TrafficSign_SupplementarySign_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::GetMetadata, "C++: osi3::TrafficSign_SupplementarySign_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::TrafficSign_SupplementarySign_Classification::Type_IsValid, "C++: osi3::TrafficSign_SupplementarySign_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::Type_descriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Type *)) &osi3::TrafficSign_SupplementarySign_Classification::Type_Parse, "C++: osi3::TrafficSign_SupplementarySign_Classification::Type_Parse(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Actor_IsValid", (bool (*)(int)) &osi3::TrafficSign_SupplementarySign_Classification::Actor_IsValid, "C++: osi3::TrafficSign_SupplementarySign_Classification::Actor_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Actor_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign_SupplementarySign_Classification::Actor_descriptor, "C++: osi3::TrafficSign_SupplementarySign_Classification::Actor_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Actor_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Actor *)) &osi3::TrafficSign_SupplementarySign_Classification::Actor_Parse, "C++: osi3::TrafficSign_SupplementarySign_Classification::Actor_Parse(const std::string &, enum osi3::TrafficSign_SupplementarySign_Classification_Actor *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("value_size", (int (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::value_size, "C++: osi3::TrafficSign_SupplementarySign_Classification::value_size() const --> int");
		cl.def("clear_value", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_value, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_value() --> void");
		cl.def("mutable_value", (class osi3::TrafficSignValue * (osi3::TrafficSign_SupplementarySign_Classification::*)(int)) &osi3::TrafficSign_SupplementarySign_Classification::mutable_value, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_value(int) --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_value", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::mutable_value, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_value() --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> *", pybind11::return_value_policy::reference);
		cl.def("value", (const class osi3::TrafficSignValue & (osi3::TrafficSign_SupplementarySign_Classification::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification::value, "C++: osi3::TrafficSign_SupplementarySign_Classification::value(int) const --> const class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_value", (class osi3::TrafficSignValue * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::add_value, "C++: osi3::TrafficSign_SupplementarySign_Classification::add_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("value", (const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> & (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::value, "C++: osi3::TrafficSign_SupplementarySign_Classification::value() const --> const class google::protobuf::RepeatedPtrField<class osi3::TrafficSignValue> &", pybind11::return_value_policy::automatic);
		cl.def("assigned_lane_id_size", (int (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id_size, "C++: osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficSign_SupplementarySign_Classification::*)(int)) &osi3::TrafficSign_SupplementarySign_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::TrafficSign_SupplementarySign_Classification::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::add_assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id, "C++: osi3::TrafficSign_SupplementarySign_Classification::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("actor_size", (int (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::actor_size, "C++: osi3::TrafficSign_SupplementarySign_Classification::actor_size() const --> int");
		cl.def("clear_actor", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_actor() --> void");
		cl.def("actor", (enum osi3::TrafficSign_SupplementarySign_Classification_Actor (osi3::TrafficSign_SupplementarySign_Classification::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification::actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::actor(int) const --> enum osi3::TrafficSign_SupplementarySign_Classification_Actor", pybind11::arg("index"));
		cl.def("set_actor", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(int, enum osi3::TrafficSign_SupplementarySign_Classification_Actor)) &osi3::TrafficSign_SupplementarySign_Classification::set_actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::set_actor(int, enum osi3::TrafficSign_SupplementarySign_Classification_Actor) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_actor", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(enum osi3::TrafficSign_SupplementarySign_Classification_Actor)) &osi3::TrafficSign_SupplementarySign_Classification::add_actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::add_actor(enum osi3::TrafficSign_SupplementarySign_Classification_Actor) --> void", pybind11::arg("value"));
		cl.def("actor", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::actor() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_actor", (class google::protobuf::RepeatedField<google::protobuf::int32> * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::mutable_actor, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_actor() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("arrow_size", (int (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::arrow_size, "C++: osi3::TrafficSign_SupplementarySign_Classification::arrow_size() const --> int");
		cl.def("clear_arrow", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_arrow() --> void");
		cl.def("mutable_arrow", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (osi3::TrafficSign_SupplementarySign_Classification::*)(int)) &osi3::TrafficSign_SupplementarySign_Classification::mutable_arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_arrow(int) --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_arrow", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::mutable_arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::mutable_arrow() --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> *", pybind11::return_value_policy::reference);
		cl.def("arrow", (const class osi3::TrafficSign_SupplementarySign_Classification_Arrow & (osi3::TrafficSign_SupplementarySign_Classification::*)(int) const) &osi3::TrafficSign_SupplementarySign_Classification::arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::arrow(int) const --> const class osi3::TrafficSign_SupplementarySign_Classification_Arrow &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_arrow", (class osi3::TrafficSign_SupplementarySign_Classification_Arrow * (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::add_arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::add_arrow() --> class osi3::TrafficSign_SupplementarySign_Classification_Arrow *", pybind11::return_value_policy::reference);
		cl.def("arrow", (const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> & (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::arrow, "C++: osi3::TrafficSign_SupplementarySign_Classification::arrow() const --> const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign_Classification_Arrow> &", pybind11::return_value_policy::automatic);
		cl.def("clear_variability", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_variability, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_variability() --> void");
		cl.def("variability", (enum osi3::TrafficSign_Variability (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::variability, "C++: osi3::TrafficSign_SupplementarySign_Classification::variability() const --> enum osi3::TrafficSign_Variability");
		cl.def("set_variability", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(enum osi3::TrafficSign_Variability)) &osi3::TrafficSign_SupplementarySign_Classification::set_variability, "C++: osi3::TrafficSign_SupplementarySign_Classification::set_variability(enum osi3::TrafficSign_Variability) --> void", pybind11::arg("value"));
		cl.def("clear_type", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_type, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::TrafficSign_SupplementarySign_Classification_Type (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::type, "C++: osi3::TrafficSign_SupplementarySign_Classification::type() const --> enum osi3::TrafficSign_SupplementarySign_Classification_Type");
		cl.def("set_type", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(enum osi3::TrafficSign_SupplementarySign_Classification_Type)) &osi3::TrafficSign_SupplementarySign_Classification::set_type, "C++: osi3::TrafficSign_SupplementarySign_Classification::set_type(enum osi3::TrafficSign_SupplementarySign_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_is_out_of_service", (void (osi3::TrafficSign_SupplementarySign_Classification::*)()) &osi3::TrafficSign_SupplementarySign_Classification::clear_is_out_of_service, "C++: osi3::TrafficSign_SupplementarySign_Classification::clear_is_out_of_service() --> void");
		cl.def("is_out_of_service", (bool (osi3::TrafficSign_SupplementarySign_Classification::*)() const) &osi3::TrafficSign_SupplementarySign_Classification::is_out_of_service, "C++: osi3::TrafficSign_SupplementarySign_Classification::is_out_of_service() const --> bool");
		cl.def("set_is_out_of_service", (void (osi3::TrafficSign_SupplementarySign_Classification::*)(bool)) &osi3::TrafficSign_SupplementarySign_Classification::set_is_out_of_service, "C++: osi3::TrafficSign_SupplementarySign_Classification::set_is_out_of_service(bool) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_12.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_12(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B267_[osi3::TrafficSign_SupplementarySign] ";
	{ // osi3::TrafficSign_SupplementarySign file: line:2572
		pybind11::class_<osi3::TrafficSign_SupplementarySign, std::shared_ptr<osi3::TrafficSign_SupplementarySign>, google::protobuf::Message> cl(M("osi3"), "TrafficSign_SupplementarySign", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign_SupplementarySign(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign_SupplementarySign const &o){ return new osi3::TrafficSign_SupplementarySign(o); } ) );
		cl.def("assign", (class osi3::TrafficSign_SupplementarySign & (osi3::TrafficSign_SupplementarySign::*)(const class osi3::TrafficSign_SupplementarySign &)) &osi3::TrafficSign_SupplementarySign::operator=, "C++: osi3::TrafficSign_SupplementarySign::operator=(const class osi3::TrafficSign_SupplementarySign &) --> class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign::descriptor, "C++: osi3::TrafficSign_SupplementarySign::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign_SupplementarySign::GetDescriptor, "C++: osi3::TrafficSign_SupplementarySign::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign_SupplementarySign::GetReflection, "C++: osi3::TrafficSign_SupplementarySign::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign_SupplementarySign & (*)()) &osi3::TrafficSign_SupplementarySign::default_instance, "C++: osi3::TrafficSign_SupplementarySign::default_instance() --> const class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign_SupplementarySign * (*)()) &osi3::TrafficSign_SupplementarySign::internal_default_instance, "C++: osi3::TrafficSign_SupplementarySign::internal_default_instance() --> const class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::TrafficSign_SupplementarySign *)) &osi3::TrafficSign_SupplementarySign::Swap, "C++: osi3::TrafficSign_SupplementarySign::Swap(class osi3::TrafficSign_SupplementarySign *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::TrafficSign_SupplementarySign *)) &osi3::TrafficSign_SupplementarySign::UnsafeArenaSwap, "C++: osi3::TrafficSign_SupplementarySign::UnsafeArenaSwap(class osi3::TrafficSign_SupplementarySign *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign_SupplementarySign * (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::New, "C++: osi3::TrafficSign_SupplementarySign::New() const --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign_SupplementarySign * (osi3::TrafficSign_SupplementarySign::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign_SupplementarySign::New, "C++: osi3::TrafficSign_SupplementarySign::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign_SupplementarySign::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign_SupplementarySign::*)(const class osi3::TrafficSign_SupplementarySign &)) &osi3::TrafficSign_SupplementarySign::CopyFrom, "C++: osi3::TrafficSign_SupplementarySign::CopyFrom(const class osi3::TrafficSign_SupplementarySign &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign_SupplementarySign::*)(const class osi3::TrafficSign_SupplementarySign &)) &osi3::TrafficSign_SupplementarySign::MergeFrom, "C++: osi3::TrafficSign_SupplementarySign::MergeFrom(const class osi3::TrafficSign_SupplementarySign &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::Clear, "C++: osi3::TrafficSign_SupplementarySign::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::IsInitialized, "C++: osi3::TrafficSign_SupplementarySign::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::ByteSizeLong, "C++: osi3::TrafficSign_SupplementarySign::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign_SupplementarySign::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign_SupplementarySign::_InternalParse, "C++: osi3::TrafficSign_SupplementarySign::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign_SupplementarySign::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign_SupplementarySign::_InternalSerialize, "C++: osi3::TrafficSign_SupplementarySign::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::GetCachedSize, "C++: osi3::TrafficSign_SupplementarySign::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::GetMetadata, "C++: osi3::TrafficSign_SupplementarySign::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_model_reference", (void (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::clear_model_reference, "C++: osi3::TrafficSign_SupplementarySign::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::TrafficSign_SupplementarySign::*)(const char *)) &osi3::TrafficSign_SupplementarySign::set_model_reference, "C++: osi3::TrafficSign_SupplementarySign::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::TrafficSign_SupplementarySign::*)(const char *, unsigned long)) &osi3::TrafficSign_SupplementarySign::set_model_reference, "C++: osi3::TrafficSign_SupplementarySign::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_base", (bool (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::has_base, "C++: osi3::TrafficSign_SupplementarySign::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::clear_base, "C++: osi3::TrafficSign_SupplementarySign::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::base, "C++: osi3::TrafficSign_SupplementarySign::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::release_base, "C++: osi3::TrafficSign_SupplementarySign::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::mutable_base, "C++: osi3::TrafficSign_SupplementarySign::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::BaseStationary *)) &osi3::TrafficSign_SupplementarySign::set_allocated_base, "C++: osi3::TrafficSign_SupplementarySign::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::BaseStationary *)) &osi3::TrafficSign_SupplementarySign::unsafe_arena_set_allocated_base, "C++: osi3::TrafficSign_SupplementarySign::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::unsafe_arena_release_base, "C++: osi3::TrafficSign_SupplementarySign::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::has_classification, "C++: osi3::TrafficSign_SupplementarySign::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::clear_classification, "C++: osi3::TrafficSign_SupplementarySign::clear_classification() --> void");
		cl.def("classification", (const class osi3::TrafficSign_SupplementarySign_Classification & (osi3::TrafficSign_SupplementarySign::*)() const) &osi3::TrafficSign_SupplementarySign::classification, "C++: osi3::TrafficSign_SupplementarySign::classification() const --> const class osi3::TrafficSign_SupplementarySign_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::TrafficSign_SupplementarySign_Classification * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::release_classification, "C++: osi3::TrafficSign_SupplementarySign::release_classification() --> class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::TrafficSign_SupplementarySign_Classification * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::mutable_classification, "C++: osi3::TrafficSign_SupplementarySign::mutable_classification() --> class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::TrafficSign_SupplementarySign_Classification *)) &osi3::TrafficSign_SupplementarySign::set_allocated_classification, "C++: osi3::TrafficSign_SupplementarySign::set_allocated_classification(class osi3::TrafficSign_SupplementarySign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::TrafficSign_SupplementarySign::*)(class osi3::TrafficSign_SupplementarySign_Classification *)) &osi3::TrafficSign_SupplementarySign::unsafe_arena_set_allocated_classification, "C++: osi3::TrafficSign_SupplementarySign::unsafe_arena_set_allocated_classification(class osi3::TrafficSign_SupplementarySign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::TrafficSign_SupplementarySign_Classification * (osi3::TrafficSign_SupplementarySign::*)()) &osi3::TrafficSign_SupplementarySign::unsafe_arena_release_classification, "C++: osi3::TrafficSign_SupplementarySign::unsafe_arena_release_classification() --> class osi3::TrafficSign_SupplementarySign_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B268_[void osi3::swap(class osi3::TrafficSign_SupplementarySign &, class osi3::TrafficSign_SupplementarySign &)] ";
	std::cout << "B269_[osi3::TrafficSign] ";
	{ // osi3::TrafficSign file: line:2758
		pybind11::class_<osi3::TrafficSign, std::shared_ptr<osi3::TrafficSign>, google::protobuf::Message> cl(M("osi3"), "TrafficSign", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficSign(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficSign const &o){ return new osi3::TrafficSign(o); } ) );
		cl.def("assign", (class osi3::TrafficSign & (osi3::TrafficSign::*)(const class osi3::TrafficSign &)) &osi3::TrafficSign::operator=, "C++: osi3::TrafficSign::operator=(const class osi3::TrafficSign &) --> class osi3::TrafficSign &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign::descriptor, "C++: osi3::TrafficSign::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficSign::GetDescriptor, "C++: osi3::TrafficSign::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficSign::GetReflection, "C++: osi3::TrafficSign::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficSign & (*)()) &osi3::TrafficSign::default_instance, "C++: osi3::TrafficSign::default_instance() --> const class osi3::TrafficSign &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficSign * (*)()) &osi3::TrafficSign::internal_default_instance, "C++: osi3::TrafficSign::internal_default_instance() --> const class osi3::TrafficSign *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficSign::*)(class osi3::TrafficSign *)) &osi3::TrafficSign::Swap, "C++: osi3::TrafficSign::Swap(class osi3::TrafficSign *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficSign::*)(class osi3::TrafficSign *)) &osi3::TrafficSign::UnsafeArenaSwap, "C++: osi3::TrafficSign::UnsafeArenaSwap(class osi3::TrafficSign *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficSign * (osi3::TrafficSign::*)() const) &osi3::TrafficSign::New, "C++: osi3::TrafficSign::New() const --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficSign * (osi3::TrafficSign::*)(class google::protobuf::Arena *) const) &osi3::TrafficSign::New, "C++: osi3::TrafficSign::New(class google::protobuf::Arena *) const --> class osi3::TrafficSign *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficSign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign::CopyFrom, "C++: osi3::TrafficSign::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign::*)(const class google::protobuf::Message &)) &osi3::TrafficSign::MergeFrom, "C++: osi3::TrafficSign::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficSign::*)(const class osi3::TrafficSign &)) &osi3::TrafficSign::CopyFrom, "C++: osi3::TrafficSign::CopyFrom(const class osi3::TrafficSign &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficSign::*)(const class osi3::TrafficSign &)) &osi3::TrafficSign::MergeFrom, "C++: osi3::TrafficSign::MergeFrom(const class osi3::TrafficSign &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficSign::*)()) &osi3::TrafficSign::Clear, "C++: osi3::TrafficSign::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficSign::*)() const) &osi3::TrafficSign::IsInitialized, "C++: osi3::TrafficSign::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficSign::*)() const) &osi3::TrafficSign::ByteSizeLong, "C++: osi3::TrafficSign::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficSign::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficSign::_InternalParse, "C++: osi3::TrafficSign::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficSign::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficSign::_InternalSerialize, "C++: osi3::TrafficSign::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficSign::*)() const) &osi3::TrafficSign::GetCachedSize, "C++: osi3::TrafficSign::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficSign::*)() const) &osi3::TrafficSign::GetMetadata, "C++: osi3::TrafficSign::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Variability_IsValid", (bool (*)(int)) &osi3::TrafficSign::Variability_IsValid, "C++: osi3::TrafficSign::Variability_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Variability_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficSign::Variability_descriptor, "C++: osi3::TrafficSign::Variability_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Variability_Parse", (bool (*)(const std::string &, enum osi3::TrafficSign_Variability *)) &osi3::TrafficSign::Variability_Parse, "C++: osi3::TrafficSign::Variability_Parse(const std::string &, enum osi3::TrafficSign_Variability *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("supplementary_sign_size", (int (osi3::TrafficSign::*)() const) &osi3::TrafficSign::supplementary_sign_size, "C++: osi3::TrafficSign::supplementary_sign_size() const --> int");
		cl.def("clear_supplementary_sign", (void (osi3::TrafficSign::*)()) &osi3::TrafficSign::clear_supplementary_sign, "C++: osi3::TrafficSign::clear_supplementary_sign() --> void");
		cl.def("mutable_supplementary_sign", (class osi3::TrafficSign_SupplementarySign * (osi3::TrafficSign::*)(int)) &osi3::TrafficSign::mutable_supplementary_sign, "C++: osi3::TrafficSign::mutable_supplementary_sign(int) --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_supplementary_sign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> * (osi3::TrafficSign::*)()) &osi3::TrafficSign::mutable_supplementary_sign, "C++: osi3::TrafficSign::mutable_supplementary_sign() --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> *", pybind11::return_value_policy::reference);
		cl.def("supplementary_sign", (const class osi3::TrafficSign_SupplementarySign & (osi3::TrafficSign::*)(int) const) &osi3::TrafficSign::supplementary_sign, "C++: osi3::TrafficSign::supplementary_sign(int) const --> const class osi3::TrafficSign_SupplementarySign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_supplementary_sign", (class osi3::TrafficSign_SupplementarySign * (osi3::TrafficSign::*)()) &osi3::TrafficSign::add_supplementary_sign, "C++: osi3::TrafficSign::add_supplementary_sign() --> class osi3::TrafficSign_SupplementarySign *", pybind11::return_value_policy::reference);
		cl.def("supplementary_sign", (const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> & (osi3::TrafficSign::*)() const) &osi3::TrafficSign::supplementary_sign, "C++: osi3::TrafficSign::supplementary_sign() const --> const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign_SupplementarySign> &", pybind11::return_value_policy::automatic);
		cl.def("has_id", (bool (osi3::TrafficSign::*)() const) &osi3::TrafficSign::has_id, "C++: osi3::TrafficSign::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::TrafficSign::*)()) &osi3::TrafficSign::clear_id, "C++: osi3::TrafficSign::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::TrafficSign::*)() const) &osi3::TrafficSign::id, "C++: osi3::TrafficSign::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::TrafficSign::*)()) &osi3::TrafficSign::release_id, "C++: osi3::TrafficSign::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::TrafficSign::*)()) &osi3::TrafficSign::mutable_id, "C++: osi3::TrafficSign::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::TrafficSign::*)(class osi3::Identifier *)) &osi3::TrafficSign::set_allocated_id, "C++: osi3::TrafficSign::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::TrafficSign::*)(class osi3::Identifier *)) &osi3::TrafficSign::unsafe_arena_set_allocated_id, "C++: osi3::TrafficSign::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::TrafficSign::*)()) &osi3::TrafficSign::unsafe_arena_release_id, "C++: osi3::TrafficSign::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_main_sign", (bool (osi3::TrafficSign::*)() const) &osi3::TrafficSign::has_main_sign, "C++: osi3::TrafficSign::has_main_sign() const --> bool");
		cl.def("clear_main_sign", (void (osi3::TrafficSign::*)()) &osi3::TrafficSign::clear_main_sign, "C++: osi3::TrafficSign::clear_main_sign() --> void");
		cl.def("main_sign", (const class osi3::TrafficSign_MainSign & (osi3::TrafficSign::*)() const) &osi3::TrafficSign::main_sign, "C++: osi3::TrafficSign::main_sign() const --> const class osi3::TrafficSign_MainSign &", pybind11::return_value_policy::automatic);
		cl.def("release_main_sign", (class osi3::TrafficSign_MainSign * (osi3::TrafficSign::*)()) &osi3::TrafficSign::release_main_sign, "C++: osi3::TrafficSign::release_main_sign() --> class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::reference);
		cl.def("mutable_main_sign", (class osi3::TrafficSign_MainSign * (osi3::TrafficSign::*)()) &osi3::TrafficSign::mutable_main_sign, "C++: osi3::TrafficSign::mutable_main_sign() --> class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_main_sign", (void (osi3::TrafficSign::*)(class osi3::TrafficSign_MainSign *)) &osi3::TrafficSign::set_allocated_main_sign, "C++: osi3::TrafficSign::set_allocated_main_sign(class osi3::TrafficSign_MainSign *) --> void", pybind11::arg("main_sign"));
		cl.def("unsafe_arena_set_allocated_main_sign", (void (osi3::TrafficSign::*)(class osi3::TrafficSign_MainSign *)) &osi3::TrafficSign::unsafe_arena_set_allocated_main_sign, "C++: osi3::TrafficSign::unsafe_arena_set_allocated_main_sign(class osi3::TrafficSign_MainSign *) --> void", pybind11::arg("main_sign"));
		cl.def("unsafe_arena_release_main_sign", (class osi3::TrafficSign_MainSign * (osi3::TrafficSign::*)()) &osi3::TrafficSign::unsafe_arena_release_main_sign, "C++: osi3::TrafficSign::unsafe_arena_release_main_sign() --> class osi3::TrafficSign_MainSign *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_13.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_13(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B270_[osi3::StationaryObject_Classification_Type] ";
	// osi3::StationaryObject_Classification_Type file: line:97
	pybind11::enum_<osi3::StationaryObject_Classification_Type>(M("osi3"), "StationaryObject_Classification_Type", pybind11::arithmetic(), "")
		.value("StationaryObject_Classification_Type_TYPE_UNKNOWN", osi3::StationaryObject_Classification_Type_TYPE_UNKNOWN)
		.value("StationaryObject_Classification_Type_TYPE_OTHER", osi3::StationaryObject_Classification_Type_TYPE_OTHER)
		.value("StationaryObject_Classification_Type_TYPE_BRIDGE", osi3::StationaryObject_Classification_Type_TYPE_BRIDGE)
		.value("StationaryObject_Classification_Type_TYPE_BUILDING", osi3::StationaryObject_Classification_Type_TYPE_BUILDING)
		.value("StationaryObject_Classification_Type_TYPE_POLE", osi3::StationaryObject_Classification_Type_TYPE_POLE)
		.value("StationaryObject_Classification_Type_TYPE_PYLON", osi3::StationaryObject_Classification_Type_TYPE_PYLON)
		.value("StationaryObject_Classification_Type_TYPE_DELINEATOR", osi3::StationaryObject_Classification_Type_TYPE_DELINEATOR)
		.value("StationaryObject_Classification_Type_TYPE_TREE", osi3::StationaryObject_Classification_Type_TYPE_TREE)
		.value("StationaryObject_Classification_Type_TYPE_BARRIER", osi3::StationaryObject_Classification_Type_TYPE_BARRIER)
		.value("StationaryObject_Classification_Type_TYPE_VEGETATION", osi3::StationaryObject_Classification_Type_TYPE_VEGETATION)
		.value("StationaryObject_Classification_Type_TYPE_CURBSTONE", osi3::StationaryObject_Classification_Type_TYPE_CURBSTONE)
		.value("StationaryObject_Classification_Type_TYPE_WALL", osi3::StationaryObject_Classification_Type_TYPE_WALL)
		.value("StationaryObject_Classification_Type_TYPE_VERTICAL_STRUCTURE", osi3::StationaryObject_Classification_Type_TYPE_VERTICAL_STRUCTURE)
		.value("StationaryObject_Classification_Type_TYPE_RECTANGULAR_STRUCTURE", osi3::StationaryObject_Classification_Type_TYPE_RECTANGULAR_STRUCTURE)
		.value("StationaryObject_Classification_Type_TYPE_OVERHEAD_STRUCTURE", osi3::StationaryObject_Classification_Type_TYPE_OVERHEAD_STRUCTURE)
		.value("StationaryObject_Classification_Type_TYPE_REFLECTIVE_STRUCTURE", osi3::StationaryObject_Classification_Type_TYPE_REFLECTIVE_STRUCTURE)
		.value("StationaryObject_Classification_Type_TYPE_CONSTRUCTION_SITE_ELEMENT", osi3::StationaryObject_Classification_Type_TYPE_CONSTRUCTION_SITE_ELEMENT)
		.value("StationaryObject_Classification_Type_StationaryObject_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Type_StationaryObject_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("StationaryObject_Classification_Type_StationaryObject_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Type_StationaryObject_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B271_[bool osi3::StationaryObject_Classification_Type_IsValid(int)] ";
	std::cout << "B272_[const class google::protobuf::EnumDescriptor * osi3::StationaryObject_Classification_Type_descriptor()] ";
	std::cout << "B273_[bool osi3::StationaryObject_Classification_Type_Parse(const std::string &, enum osi3::StationaryObject_Classification_Type *)] ";
	std::cout << "B274_[osi3::StationaryObject_Classification_Material] ";
	// osi3::StationaryObject_Classification_Material file: line:137
	pybind11::enum_<osi3::StationaryObject_Classification_Material>(M("osi3"), "StationaryObject_Classification_Material", pybind11::arithmetic(), "")
		.value("StationaryObject_Classification_Material_MATERIAL_UNKNOWN", osi3::StationaryObject_Classification_Material_MATERIAL_UNKNOWN)
		.value("StationaryObject_Classification_Material_MATERIAL_OTHER", osi3::StationaryObject_Classification_Material_MATERIAL_OTHER)
		.value("StationaryObject_Classification_Material_MATERIAL_WOOD", osi3::StationaryObject_Classification_Material_MATERIAL_WOOD)
		.value("StationaryObject_Classification_Material_MATERIAL_PLASTIC", osi3::StationaryObject_Classification_Material_MATERIAL_PLASTIC)
		.value("StationaryObject_Classification_Material_MATERIAL_CONCRETE", osi3::StationaryObject_Classification_Material_MATERIAL_CONCRETE)
		.value("StationaryObject_Classification_Material_MATERIAL_METAL", osi3::StationaryObject_Classification_Material_MATERIAL_METAL)
		.value("StationaryObject_Classification_Material_MATERIAL_STONE", osi3::StationaryObject_Classification_Material_MATERIAL_STONE)
		.value("StationaryObject_Classification_Material_MATERIAL_GLAS", osi3::StationaryObject_Classification_Material_MATERIAL_GLAS)
		.value("StationaryObject_Classification_Material_MATERIAL_MUD", osi3::StationaryObject_Classification_Material_MATERIAL_MUD)
		.value("StationaryObject_Classification_Material_StationaryObject_Classification_Material_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Material_StationaryObject_Classification_Material_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("StationaryObject_Classification_Material_StationaryObject_Classification_Material_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Material_StationaryObject_Classification_Material_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B275_[bool osi3::StationaryObject_Classification_Material_IsValid(int)] ";
	std::cout << "B276_[const class google::protobuf::EnumDescriptor * osi3::StationaryObject_Classification_Material_descriptor()] ";
	std::cout << "B277_[bool osi3::StationaryObject_Classification_Material_Parse(const std::string &, enum osi3::StationaryObject_Classification_Material *)] ";
	std::cout << "B278_[osi3::StationaryObject_Classification_Density] ";
	// osi3::StationaryObject_Classification_Density file: line:169
	pybind11::enum_<osi3::StationaryObject_Classification_Density>(M("osi3"), "StationaryObject_Classification_Density", pybind11::arithmetic(), "")
		.value("StationaryObject_Classification_Density_DENSITY_UNKNOWN", osi3::StationaryObject_Classification_Density_DENSITY_UNKNOWN)
		.value("StationaryObject_Classification_Density_DENSITY_OTHER", osi3::StationaryObject_Classification_Density_DENSITY_OTHER)
		.value("StationaryObject_Classification_Density_DENSITY_SOLID", osi3::StationaryObject_Classification_Density_DENSITY_SOLID)
		.value("StationaryObject_Classification_Density_DENSITY_SMALL_MESH", osi3::StationaryObject_Classification_Density_DENSITY_SMALL_MESH)
		.value("StationaryObject_Classification_Density_DENSITY_MEDIAN_MESH", osi3::StationaryObject_Classification_Density_DENSITY_MEDIAN_MESH)
		.value("StationaryObject_Classification_Density_DENSITY_LARGE_MESH", osi3::StationaryObject_Classification_Density_DENSITY_LARGE_MESH)
		.value("StationaryObject_Classification_Density_DENSITY_OPEN", osi3::StationaryObject_Classification_Density_DENSITY_OPEN)
		.value("StationaryObject_Classification_Density_StationaryObject_Classification_Density_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Density_StationaryObject_Classification_Density_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("StationaryObject_Classification_Density_StationaryObject_Classification_Density_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Density_StationaryObject_Classification_Density_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B279_[bool osi3::StationaryObject_Classification_Density_IsValid(int)] ";
	std::cout << "B280_[const class google::protobuf::EnumDescriptor * osi3::StationaryObject_Classification_Density_descriptor()] ";
	std::cout << "B281_[bool osi3::StationaryObject_Classification_Density_Parse(const std::string &, enum osi3::StationaryObject_Classification_Density *)] ";
	std::cout << "B282_[osi3::StationaryObject_Classification_Color] ";
	// osi3::StationaryObject_Classification_Color file: line:199
	pybind11::enum_<osi3::StationaryObject_Classification_Color>(M("osi3"), "StationaryObject_Classification_Color", pybind11::arithmetic(), "")
		.value("StationaryObject_Classification_Color_COLOR_UNKNOWN", osi3::StationaryObject_Classification_Color_COLOR_UNKNOWN)
		.value("StationaryObject_Classification_Color_COLOR_OTHER", osi3::StationaryObject_Classification_Color_COLOR_OTHER)
		.value("StationaryObject_Classification_Color_COLOR_YELLOW", osi3::StationaryObject_Classification_Color_COLOR_YELLOW)
		.value("StationaryObject_Classification_Color_COLOR_GREEN", osi3::StationaryObject_Classification_Color_COLOR_GREEN)
		.value("StationaryObject_Classification_Color_COLOR_BLUE", osi3::StationaryObject_Classification_Color_COLOR_BLUE)
		.value("StationaryObject_Classification_Color_COLOR_VIOLET", osi3::StationaryObject_Classification_Color_COLOR_VIOLET)
		.value("StationaryObject_Classification_Color_COLOR_RED", osi3::StationaryObject_Classification_Color_COLOR_RED)
		.value("StationaryObject_Classification_Color_COLOR_ORANGE", osi3::StationaryObject_Classification_Color_COLOR_ORANGE)
		.value("StationaryObject_Classification_Color_COLOR_BLACK", osi3::StationaryObject_Classification_Color_COLOR_BLACK)
		.value("StationaryObject_Classification_Color_COLOR_GREY", osi3::StationaryObject_Classification_Color_COLOR_GREY)
		.value("StationaryObject_Classification_Color_COLOR_WHITE", osi3::StationaryObject_Classification_Color_COLOR_WHITE)
		.value("StationaryObject_Classification_Color_StationaryObject_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Color_StationaryObject_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("StationaryObject_Classification_Color_StationaryObject_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::StationaryObject_Classification_Color_StationaryObject_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B283_[bool osi3::StationaryObject_Classification_Color_IsValid(int)] ";
	std::cout << "B284_[const class google::protobuf::EnumDescriptor * osi3::StationaryObject_Classification_Color_descriptor()] ";
	std::cout << "B285_[bool osi3::StationaryObject_Classification_Color_Parse(const std::string &, enum osi3::StationaryObject_Classification_Color *)] ";
	std::cout << "B286_[osi3::MovingObject_VehicleClassification_LightState_IndicatorState] ";
	// osi3::MovingObject_VehicleClassification_LightState_IndicatorState file: line:233
	pybind11::enum_<osi3::MovingObject_VehicleClassification_LightState_IndicatorState>(M("osi3"), "MovingObject_VehicleClassification_LightState_IndicatorState", pybind11::arithmetic(), "")
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_UNKNOWN", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_UNKNOWN)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_OTHER", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_OTHER)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_OFF", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_OFF)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_LEFT", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_LEFT)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_RIGHT", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_RIGHT)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_WARNING", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_INDICATOR_STATE_WARNING)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_MovingObject_VehicleClassification_LightState_IndicatorState_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_MovingObject_VehicleClassification_LightState_IndicatorState_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("MovingObject_VehicleClassification_LightState_IndicatorState_MovingObject_VehicleClassification_LightState_IndicatorState_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_IndicatorState_MovingObject_VehicleClassification_LightState_IndicatorState_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B287_[bool osi3::MovingObject_VehicleClassification_LightState_IndicatorState_IsValid(int)] ";
	std::cout << "B288_[const class google::protobuf::EnumDescriptor * osi3::MovingObject_VehicleClassification_LightState_IndicatorState_descriptor()] ";
	std::cout << "B289_[bool osi3::MovingObject_VehicleClassification_LightState_IndicatorState_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState *)] ";
	std::cout << "B290_[osi3::MovingObject_VehicleClassification_LightState_GenericLightState] ";
	// osi3::MovingObject_VehicleClassification_LightState_GenericLightState file: line:262
	pybind11::enum_<osi3::MovingObject_VehicleClassification_LightState_GenericLightState>(M("osi3"), "MovingObject_VehicleClassification_LightState_GenericLightState", pybind11::arithmetic(), "")
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_UNKNOWN", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_UNKNOWN)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_OTHER", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_OTHER)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_OFF", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_OFF)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_ON", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_ON)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_BLUE", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_BLUE)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_BLUE_AND_RED", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_BLUE_AND_RED)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_AMBER", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_GENERIC_LIGHT_STATE_FLASHING_AMBER)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_MovingObject_VehicleClassification_LightState_GenericLightState_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_MovingObject_VehicleClassification_LightState_GenericLightState_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("MovingObject_VehicleClassification_LightState_GenericLightState_MovingObject_VehicleClassification_LightState_GenericLightState_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_GenericLightState_MovingObject_VehicleClassification_LightState_GenericLightState_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B291_[bool osi3::MovingObject_VehicleClassification_LightState_GenericLightState_IsValid(int)] ";
	std::cout << "B292_[const class google::protobuf::EnumDescriptor * osi3::MovingObject_VehicleClassification_LightState_GenericLightState_descriptor()] ";
	std::cout << "B293_[bool osi3::MovingObject_VehicleClassification_LightState_GenericLightState_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState *)] ";
	std::cout << "B294_[osi3::MovingObject_VehicleClassification_LightState_BrakeLightState] ";
	// osi3::MovingObject_VehicleClassification_LightState_BrakeLightState file: line:292
	pybind11::enum_<osi3::MovingObject_VehicleClassification_LightState_BrakeLightState>(M("osi3"), "MovingObject_VehicleClassification_LightState_BrakeLightState", pybind11::arithmetic(), "")
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_UNKNOWN", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_UNKNOWN)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_OTHER", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_OTHER)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_OFF", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_OFF)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_NORMAL", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_NORMAL)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_STRONG", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_BRAKE_LIGHT_STATE_STRONG)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_MovingObject_VehicleClassification_LightState_BrakeLightState_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_MovingObject_VehicleClassification_LightState_BrakeLightState_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("MovingObject_VehicleClassification_LightState_BrakeLightState_MovingObject_VehicleClassification_LightState_BrakeLightState_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_LightState_BrakeLightState_MovingObject_VehicleClassification_LightState_BrakeLightState_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

}


// File: unknown/unknown_14.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_14(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B295_[osi3::MovingObject_VehicleClassification_Type] ";
	// osi3::MovingObject_VehicleClassification_Type file: line:320
	pybind11::enum_<osi3::MovingObject_VehicleClassification_Type>(M("osi3"), "MovingObject_VehicleClassification_Type", pybind11::arithmetic(), "")
		.value("MovingObject_VehicleClassification_Type_TYPE_UNKNOWN", osi3::MovingObject_VehicleClassification_Type_TYPE_UNKNOWN)
		.value("MovingObject_VehicleClassification_Type_TYPE_OTHER", osi3::MovingObject_VehicleClassification_Type_TYPE_OTHER)
		.value("MovingObject_VehicleClassification_Type_TYPE_SMALL_CAR", osi3::MovingObject_VehicleClassification_Type_TYPE_SMALL_CAR)
		.value("MovingObject_VehicleClassification_Type_TYPE_COMPACT_CAR", osi3::MovingObject_VehicleClassification_Type_TYPE_COMPACT_CAR)
		.value("MovingObject_VehicleClassification_Type_TYPE_MEDIUM_CAR", osi3::MovingObject_VehicleClassification_Type_TYPE_MEDIUM_CAR)
		.value("MovingObject_VehicleClassification_Type_TYPE_LUXURY_CAR", osi3::MovingObject_VehicleClassification_Type_TYPE_LUXURY_CAR)
		.value("MovingObject_VehicleClassification_Type_TYPE_DELIVERY_VAN", osi3::MovingObject_VehicleClassification_Type_TYPE_DELIVERY_VAN)
		.value("MovingObject_VehicleClassification_Type_TYPE_HEAVY_TRUCK", osi3::MovingObject_VehicleClassification_Type_TYPE_HEAVY_TRUCK)
		.value("MovingObject_VehicleClassification_Type_TYPE_SEMITRAILER", osi3::MovingObject_VehicleClassification_Type_TYPE_SEMITRAILER)
		.value("MovingObject_VehicleClassification_Type_TYPE_TRAILER", osi3::MovingObject_VehicleClassification_Type_TYPE_TRAILER)
		.value("MovingObject_VehicleClassification_Type_TYPE_MOTORBIKE", osi3::MovingObject_VehicleClassification_Type_TYPE_MOTORBIKE)
		.value("MovingObject_VehicleClassification_Type_TYPE_BICYCLE", osi3::MovingObject_VehicleClassification_Type_TYPE_BICYCLE)
		.value("MovingObject_VehicleClassification_Type_TYPE_BUS", osi3::MovingObject_VehicleClassification_Type_TYPE_BUS)
		.value("MovingObject_VehicleClassification_Type_TYPE_TRAM", osi3::MovingObject_VehicleClassification_Type_TYPE_TRAM)
		.value("MovingObject_VehicleClassification_Type_TYPE_TRAIN", osi3::MovingObject_VehicleClassification_Type_TYPE_TRAIN)
		.value("MovingObject_VehicleClassification_Type_TYPE_WHEELCHAIR", osi3::MovingObject_VehicleClassification_Type_TYPE_WHEELCHAIR)
		.value("MovingObject_VehicleClassification_Type_MovingObject_VehicleClassification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_Type_MovingObject_VehicleClassification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("MovingObject_VehicleClassification_Type_MovingObject_VehicleClassification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::MovingObject_VehicleClassification_Type_MovingObject_VehicleClassification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B296_[bool osi3::MovingObject_VehicleClassification_Type_IsValid(int)] ";
	std::cout << "B297_[const class google::protobuf::EnumDescriptor * osi3::MovingObject_VehicleClassification_Type_descriptor()] ";
	std::cout << "B298_[bool osi3::MovingObject_VehicleClassification_Type_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_Type *)] ";
	std::cout << "B299_[osi3::MovingObject_Type] ";
	// osi3::MovingObject_Type file: line:359
	pybind11::enum_<osi3::MovingObject_Type>(M("osi3"), "MovingObject_Type", pybind11::arithmetic(), "")
		.value("MovingObject_Type_TYPE_UNKNOWN", osi3::MovingObject_Type_TYPE_UNKNOWN)
		.value("MovingObject_Type_TYPE_OTHER", osi3::MovingObject_Type_TYPE_OTHER)
		.value("MovingObject_Type_TYPE_VEHICLE", osi3::MovingObject_Type_TYPE_VEHICLE)
		.value("MovingObject_Type_TYPE_PEDESTRIAN", osi3::MovingObject_Type_TYPE_PEDESTRIAN)
		.value("MovingObject_Type_TYPE_ANIMAL", osi3::MovingObject_Type_TYPE_ANIMAL)
		.value("MovingObject_Type_MovingObject_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::MovingObject_Type_MovingObject_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("MovingObject_Type_MovingObject_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::MovingObject_Type_MovingObject_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B300_[bool osi3::MovingObject_Type_IsValid(int)] ";
	std::cout << "B301_[const class google::protobuf::EnumDescriptor * osi3::MovingObject_Type_descriptor()] ";
	std::cout << "B302_[bool osi3::MovingObject_Type_Parse(const std::string &, enum osi3::MovingObject_Type *)] ";
	std::cout << "B303_[osi3::StationaryObject_Classification] ";
	{ // osi3::StationaryObject_Classification file: line:389
		pybind11::class_<osi3::StationaryObject_Classification, std::shared_ptr<osi3::StationaryObject_Classification>, google::protobuf::Message> cl(M("osi3"), "StationaryObject_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::StationaryObject_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::StationaryObject_Classification const &o){ return new osi3::StationaryObject_Classification(o); } ) );
		cl.def("assign", (class osi3::StationaryObject_Classification & (osi3::StationaryObject_Classification::*)(const class osi3::StationaryObject_Classification &)) &osi3::StationaryObject_Classification::operator=, "C++: osi3::StationaryObject_Classification::operator=(const class osi3::StationaryObject_Classification &) --> class osi3::StationaryObject_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StationaryObject_Classification::descriptor, "C++: osi3::StationaryObject_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StationaryObject_Classification::GetDescriptor, "C++: osi3::StationaryObject_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::StationaryObject_Classification::GetReflection, "C++: osi3::StationaryObject_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::StationaryObject_Classification & (*)()) &osi3::StationaryObject_Classification::default_instance, "C++: osi3::StationaryObject_Classification::default_instance() --> const class osi3::StationaryObject_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::StationaryObject_Classification * (*)()) &osi3::StationaryObject_Classification::internal_default_instance, "C++: osi3::StationaryObject_Classification::internal_default_instance() --> const class osi3::StationaryObject_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::StationaryObject_Classification::*)(class osi3::StationaryObject_Classification *)) &osi3::StationaryObject_Classification::Swap, "C++: osi3::StationaryObject_Classification::Swap(class osi3::StationaryObject_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::StationaryObject_Classification::*)(class osi3::StationaryObject_Classification *)) &osi3::StationaryObject_Classification::UnsafeArenaSwap, "C++: osi3::StationaryObject_Classification::UnsafeArenaSwap(class osi3::StationaryObject_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::StationaryObject_Classification * (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::New, "C++: osi3::StationaryObject_Classification::New() const --> class osi3::StationaryObject_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::StationaryObject_Classification * (osi3::StationaryObject_Classification::*)(class google::protobuf::Arena *) const) &osi3::StationaryObject_Classification::New, "C++: osi3::StationaryObject_Classification::New(class google::protobuf::Arena *) const --> class osi3::StationaryObject_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::StationaryObject_Classification::*)(const class google::protobuf::Message &)) &osi3::StationaryObject_Classification::CopyFrom, "C++: osi3::StationaryObject_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StationaryObject_Classification::*)(const class google::protobuf::Message &)) &osi3::StationaryObject_Classification::MergeFrom, "C++: osi3::StationaryObject_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::StationaryObject_Classification::*)(const class osi3::StationaryObject_Classification &)) &osi3::StationaryObject_Classification::CopyFrom, "C++: osi3::StationaryObject_Classification::CopyFrom(const class osi3::StationaryObject_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StationaryObject_Classification::*)(const class osi3::StationaryObject_Classification &)) &osi3::StationaryObject_Classification::MergeFrom, "C++: osi3::StationaryObject_Classification::MergeFrom(const class osi3::StationaryObject_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::StationaryObject_Classification::*)()) &osi3::StationaryObject_Classification::Clear, "C++: osi3::StationaryObject_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::IsInitialized, "C++: osi3::StationaryObject_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::ByteSizeLong, "C++: osi3::StationaryObject_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::StationaryObject_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::StationaryObject_Classification::_InternalParse, "C++: osi3::StationaryObject_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::StationaryObject_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::StationaryObject_Classification::_InternalSerialize, "C++: osi3::StationaryObject_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::GetCachedSize, "C++: osi3::StationaryObject_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::GetMetadata, "C++: osi3::StationaryObject_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::StationaryObject_Classification::Type_IsValid, "C++: osi3::StationaryObject_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::StationaryObject_Classification::Type_descriptor, "C++: osi3::StationaryObject_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::StationaryObject_Classification_Type *)) &osi3::StationaryObject_Classification::Type_Parse, "C++: osi3::StationaryObject_Classification::Type_Parse(const std::string &, enum osi3::StationaryObject_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Material_IsValid", (bool (*)(int)) &osi3::StationaryObject_Classification::Material_IsValid, "C++: osi3::StationaryObject_Classification::Material_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Material_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::StationaryObject_Classification::Material_descriptor, "C++: osi3::StationaryObject_Classification::Material_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Material_Parse", (bool (*)(const std::string &, enum osi3::StationaryObject_Classification_Material *)) &osi3::StationaryObject_Classification::Material_Parse, "C++: osi3::StationaryObject_Classification::Material_Parse(const std::string &, enum osi3::StationaryObject_Classification_Material *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Density_IsValid", (bool (*)(int)) &osi3::StationaryObject_Classification::Density_IsValid, "C++: osi3::StationaryObject_Classification::Density_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Density_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::StationaryObject_Classification::Density_descriptor, "C++: osi3::StationaryObject_Classification::Density_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Density_Parse", (bool (*)(const std::string &, enum osi3::StationaryObject_Classification_Density *)) &osi3::StationaryObject_Classification::Density_Parse, "C++: osi3::StationaryObject_Classification::Density_Parse(const std::string &, enum osi3::StationaryObject_Classification_Density *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Color_IsValid", (bool (*)(int)) &osi3::StationaryObject_Classification::Color_IsValid, "C++: osi3::StationaryObject_Classification::Color_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Color_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::StationaryObject_Classification::Color_descriptor, "C++: osi3::StationaryObject_Classification::Color_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Color_Parse", (bool (*)(const std::string &, enum osi3::StationaryObject_Classification_Color *)) &osi3::StationaryObject_Classification::Color_Parse, "C++: osi3::StationaryObject_Classification::Color_Parse(const std::string &, enum osi3::StationaryObject_Classification_Color *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("clear_type", (void (osi3::StationaryObject_Classification::*)()) &osi3::StationaryObject_Classification::clear_type, "C++: osi3::StationaryObject_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::StationaryObject_Classification_Type (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::type, "C++: osi3::StationaryObject_Classification::type() const --> enum osi3::StationaryObject_Classification_Type");
		cl.def("set_type", (void (osi3::StationaryObject_Classification::*)(enum osi3::StationaryObject_Classification_Type)) &osi3::StationaryObject_Classification::set_type, "C++: osi3::StationaryObject_Classification::set_type(enum osi3::StationaryObject_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_material", (void (osi3::StationaryObject_Classification::*)()) &osi3::StationaryObject_Classification::clear_material, "C++: osi3::StationaryObject_Classification::clear_material() --> void");
		cl.def("material", (enum osi3::StationaryObject_Classification_Material (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::material, "C++: osi3::StationaryObject_Classification::material() const --> enum osi3::StationaryObject_Classification_Material");
		cl.def("set_material", (void (osi3::StationaryObject_Classification::*)(enum osi3::StationaryObject_Classification_Material)) &osi3::StationaryObject_Classification::set_material, "C++: osi3::StationaryObject_Classification::set_material(enum osi3::StationaryObject_Classification_Material) --> void", pybind11::arg("value"));
		cl.def("clear_density", (void (osi3::StationaryObject_Classification::*)()) &osi3::StationaryObject_Classification::clear_density, "C++: osi3::StationaryObject_Classification::clear_density() --> void");
		cl.def("density", (enum osi3::StationaryObject_Classification_Density (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::density, "C++: osi3::StationaryObject_Classification::density() const --> enum osi3::StationaryObject_Classification_Density");
		cl.def("set_density", (void (osi3::StationaryObject_Classification::*)(enum osi3::StationaryObject_Classification_Density)) &osi3::StationaryObject_Classification::set_density, "C++: osi3::StationaryObject_Classification::set_density(enum osi3::StationaryObject_Classification_Density) --> void", pybind11::arg("value"));
		cl.def("clear_color", (void (osi3::StationaryObject_Classification::*)()) &osi3::StationaryObject_Classification::clear_color, "C++: osi3::StationaryObject_Classification::clear_color() --> void");
		cl.def("color", (enum osi3::StationaryObject_Classification_Color (osi3::StationaryObject_Classification::*)() const) &osi3::StationaryObject_Classification::color, "C++: osi3::StationaryObject_Classification::color() const --> enum osi3::StationaryObject_Classification_Color");
		cl.def("set_color", (void (osi3::StationaryObject_Classification::*)(enum osi3::StationaryObject_Classification_Color)) &osi3::StationaryObject_Classification::set_color, "C++: osi3::StationaryObject_Classification::set_color(enum osi3::StationaryObject_Classification_Color) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_15.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_15(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B304_[osi3::StationaryObject] ";
	{ // osi3::StationaryObject file: line:751
		pybind11::class_<osi3::StationaryObject, std::shared_ptr<osi3::StationaryObject>, google::protobuf::Message> cl(M("osi3"), "StationaryObject", "");
		cl.def( pybind11::init( [](){ return new osi3::StationaryObject(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::StationaryObject const &o){ return new osi3::StationaryObject(o); } ) );
		cl.def("assign", (class osi3::StationaryObject & (osi3::StationaryObject::*)(const class osi3::StationaryObject &)) &osi3::StationaryObject::operator=, "C++: osi3::StationaryObject::operator=(const class osi3::StationaryObject &) --> class osi3::StationaryObject &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StationaryObject::descriptor, "C++: osi3::StationaryObject::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::StationaryObject::GetDescriptor, "C++: osi3::StationaryObject::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::StationaryObject::GetReflection, "C++: osi3::StationaryObject::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::StationaryObject & (*)()) &osi3::StationaryObject::default_instance, "C++: osi3::StationaryObject::default_instance() --> const class osi3::StationaryObject &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::StationaryObject * (*)()) &osi3::StationaryObject::internal_default_instance, "C++: osi3::StationaryObject::internal_default_instance() --> const class osi3::StationaryObject *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::StationaryObject::*)(class osi3::StationaryObject *)) &osi3::StationaryObject::Swap, "C++: osi3::StationaryObject::Swap(class osi3::StationaryObject *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::StationaryObject::*)(class osi3::StationaryObject *)) &osi3::StationaryObject::UnsafeArenaSwap, "C++: osi3::StationaryObject::UnsafeArenaSwap(class osi3::StationaryObject *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::StationaryObject * (osi3::StationaryObject::*)() const) &osi3::StationaryObject::New, "C++: osi3::StationaryObject::New() const --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::StationaryObject * (osi3::StationaryObject::*)(class google::protobuf::Arena *) const) &osi3::StationaryObject::New, "C++: osi3::StationaryObject::New(class google::protobuf::Arena *) const --> class osi3::StationaryObject *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::StationaryObject::*)(const class google::protobuf::Message &)) &osi3::StationaryObject::CopyFrom, "C++: osi3::StationaryObject::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StationaryObject::*)(const class google::protobuf::Message &)) &osi3::StationaryObject::MergeFrom, "C++: osi3::StationaryObject::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::StationaryObject::*)(const class osi3::StationaryObject &)) &osi3::StationaryObject::CopyFrom, "C++: osi3::StationaryObject::CopyFrom(const class osi3::StationaryObject &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::StationaryObject::*)(const class osi3::StationaryObject &)) &osi3::StationaryObject::MergeFrom, "C++: osi3::StationaryObject::MergeFrom(const class osi3::StationaryObject &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::StationaryObject::*)()) &osi3::StationaryObject::Clear, "C++: osi3::StationaryObject::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::StationaryObject::*)() const) &osi3::StationaryObject::IsInitialized, "C++: osi3::StationaryObject::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::StationaryObject::*)() const) &osi3::StationaryObject::ByteSizeLong, "C++: osi3::StationaryObject::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::StationaryObject::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::StationaryObject::_InternalParse, "C++: osi3::StationaryObject::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::StationaryObject::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::StationaryObject::_InternalSerialize, "C++: osi3::StationaryObject::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::StationaryObject::*)() const) &osi3::StationaryObject::GetCachedSize, "C++: osi3::StationaryObject::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::StationaryObject::*)() const) &osi3::StationaryObject::GetMetadata, "C++: osi3::StationaryObject::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_model_reference", (void (osi3::StationaryObject::*)()) &osi3::StationaryObject::clear_model_reference, "C++: osi3::StationaryObject::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::StationaryObject::*)(const char *)) &osi3::StationaryObject::set_model_reference, "C++: osi3::StationaryObject::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::StationaryObject::*)(const char *, unsigned long)) &osi3::StationaryObject::set_model_reference, "C++: osi3::StationaryObject::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_id", (bool (osi3::StationaryObject::*)() const) &osi3::StationaryObject::has_id, "C++: osi3::StationaryObject::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::StationaryObject::*)()) &osi3::StationaryObject::clear_id, "C++: osi3::StationaryObject::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::StationaryObject::*)() const) &osi3::StationaryObject::id, "C++: osi3::StationaryObject::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::StationaryObject::*)()) &osi3::StationaryObject::release_id, "C++: osi3::StationaryObject::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::StationaryObject::*)()) &osi3::StationaryObject::mutable_id, "C++: osi3::StationaryObject::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::StationaryObject::*)(class osi3::Identifier *)) &osi3::StationaryObject::set_allocated_id, "C++: osi3::StationaryObject::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::StationaryObject::*)(class osi3::Identifier *)) &osi3::StationaryObject::unsafe_arena_set_allocated_id, "C++: osi3::StationaryObject::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::StationaryObject::*)()) &osi3::StationaryObject::unsafe_arena_release_id, "C++: osi3::StationaryObject::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_base", (bool (osi3::StationaryObject::*)() const) &osi3::StationaryObject::has_base, "C++: osi3::StationaryObject::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::StationaryObject::*)()) &osi3::StationaryObject::clear_base, "C++: osi3::StationaryObject::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::StationaryObject::*)() const) &osi3::StationaryObject::base, "C++: osi3::StationaryObject::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::StationaryObject::*)()) &osi3::StationaryObject::release_base, "C++: osi3::StationaryObject::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::StationaryObject::*)()) &osi3::StationaryObject::mutable_base, "C++: osi3::StationaryObject::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::StationaryObject::*)(class osi3::BaseStationary *)) &osi3::StationaryObject::set_allocated_base, "C++: osi3::StationaryObject::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::StationaryObject::*)(class osi3::BaseStationary *)) &osi3::StationaryObject::unsafe_arena_set_allocated_base, "C++: osi3::StationaryObject::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::StationaryObject::*)()) &osi3::StationaryObject::unsafe_arena_release_base, "C++: osi3::StationaryObject::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::StationaryObject::*)() const) &osi3::StationaryObject::has_classification, "C++: osi3::StationaryObject::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::StationaryObject::*)()) &osi3::StationaryObject::clear_classification, "C++: osi3::StationaryObject::clear_classification() --> void");
		cl.def("classification", (const class osi3::StationaryObject_Classification & (osi3::StationaryObject::*)() const) &osi3::StationaryObject::classification, "C++: osi3::StationaryObject::classification() const --> const class osi3::StationaryObject_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::StationaryObject_Classification * (osi3::StationaryObject::*)()) &osi3::StationaryObject::release_classification, "C++: osi3::StationaryObject::release_classification() --> class osi3::StationaryObject_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::StationaryObject_Classification * (osi3::StationaryObject::*)()) &osi3::StationaryObject::mutable_classification, "C++: osi3::StationaryObject::mutable_classification() --> class osi3::StationaryObject_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::StationaryObject::*)(class osi3::StationaryObject_Classification *)) &osi3::StationaryObject::set_allocated_classification, "C++: osi3::StationaryObject::set_allocated_classification(class osi3::StationaryObject_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::StationaryObject::*)(class osi3::StationaryObject_Classification *)) &osi3::StationaryObject::unsafe_arena_set_allocated_classification, "C++: osi3::StationaryObject::unsafe_arena_set_allocated_classification(class osi3::StationaryObject_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::StationaryObject_Classification * (osi3::StationaryObject::*)()) &osi3::StationaryObject::unsafe_arena_release_classification, "C++: osi3::StationaryObject::unsafe_arena_release_classification() --> class osi3::StationaryObject_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B305_[void osi3::swap(class osi3::StationaryObject &, class osi3::StationaryObject &)] ";
	std::cout << "B306_[osi3::MovingObject_VehicleAttributes_WheelData] ";
	{ // osi3::MovingObject_VehicleAttributes_WheelData file: line:957
		pybind11::class_<osi3::MovingObject_VehicleAttributes_WheelData, std::shared_ptr<osi3::MovingObject_VehicleAttributes_WheelData>, google::protobuf::Message> cl(M("osi3"), "MovingObject_VehicleAttributes_WheelData", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject_VehicleAttributes_WheelData(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject_VehicleAttributes_WheelData const &o){ return new osi3::MovingObject_VehicleAttributes_WheelData(o); } ) );
		cl.def("assign", (class osi3::MovingObject_VehicleAttributes_WheelData & (osi3::MovingObject_VehicleAttributes_WheelData::*)(const class osi3::MovingObject_VehicleAttributes_WheelData &)) &osi3::MovingObject_VehicleAttributes_WheelData::operator=, "C++: osi3::MovingObject_VehicleAttributes_WheelData::operator=(const class osi3::MovingObject_VehicleAttributes_WheelData &) --> class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleAttributes_WheelData::descriptor, "C++: osi3::MovingObject_VehicleAttributes_WheelData::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleAttributes_WheelData::GetDescriptor, "C++: osi3::MovingObject_VehicleAttributes_WheelData::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject_VehicleAttributes_WheelData::GetReflection, "C++: osi3::MovingObject_VehicleAttributes_WheelData::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject_VehicleAttributes_WheelData & (*)()) &osi3::MovingObject_VehicleAttributes_WheelData::default_instance, "C++: osi3::MovingObject_VehicleAttributes_WheelData::default_instance() --> const class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject_VehicleAttributes_WheelData * (*)()) &osi3::MovingObject_VehicleAttributes_WheelData::internal_default_instance, "C++: osi3::MovingObject_VehicleAttributes_WheelData::internal_default_instance() --> const class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::MovingObject_VehicleAttributes_WheelData *)) &osi3::MovingObject_VehicleAttributes_WheelData::Swap, "C++: osi3::MovingObject_VehicleAttributes_WheelData::Swap(class osi3::MovingObject_VehicleAttributes_WheelData *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::MovingObject_VehicleAttributes_WheelData *)) &osi3::MovingObject_VehicleAttributes_WheelData::UnsafeArenaSwap, "C++: osi3::MovingObject_VehicleAttributes_WheelData::UnsafeArenaSwap(class osi3::MovingObject_VehicleAttributes_WheelData *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject_VehicleAttributes_WheelData * (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::New, "C++: osi3::MovingObject_VehicleAttributes_WheelData::New() const --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject_VehicleAttributes_WheelData * (osi3::MovingObject_VehicleAttributes_WheelData::*)(class google::protobuf::Arena *) const) &osi3::MovingObject_VehicleAttributes_WheelData::New, "C++: osi3::MovingObject_VehicleAttributes_WheelData::New(class google::protobuf::Arena *) const --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleAttributes_WheelData::CopyFrom, "C++: osi3::MovingObject_VehicleAttributes_WheelData::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleAttributes_WheelData::MergeFrom, "C++: osi3::MovingObject_VehicleAttributes_WheelData::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const class osi3::MovingObject_VehicleAttributes_WheelData &)) &osi3::MovingObject_VehicleAttributes_WheelData::CopyFrom, "C++: osi3::MovingObject_VehicleAttributes_WheelData::CopyFrom(const class osi3::MovingObject_VehicleAttributes_WheelData &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const class osi3::MovingObject_VehicleAttributes_WheelData &)) &osi3::MovingObject_VehicleAttributes_WheelData::MergeFrom, "C++: osi3::MovingObject_VehicleAttributes_WheelData::MergeFrom(const class osi3::MovingObject_VehicleAttributes_WheelData &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::Clear, "C++: osi3::MovingObject_VehicleAttributes_WheelData::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::IsInitialized, "C++: osi3::MovingObject_VehicleAttributes_WheelData::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::ByteSizeLong, "C++: osi3::MovingObject_VehicleAttributes_WheelData::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject_VehicleAttributes_WheelData::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject_VehicleAttributes_WheelData::_InternalParse, "C++: osi3::MovingObject_VehicleAttributes_WheelData::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject_VehicleAttributes_WheelData::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject_VehicleAttributes_WheelData::_InternalSerialize, "C++: osi3::MovingObject_VehicleAttributes_WheelData::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::GetCachedSize, "C++: osi3::MovingObject_VehicleAttributes_WheelData::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::GetMetadata, "C++: osi3::MovingObject_VehicleAttributes_WheelData::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_model_reference", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_model_reference, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const char *)) &osi3::MovingObject_VehicleAttributes_WheelData::set_model_reference, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(const char *, unsigned long)) &osi3::MovingObject_VehicleAttributes_WheelData::set_model_reference, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_position", (bool (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::has_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::release_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::mutable_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes_WheelData::set_allocated_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_set_allocated_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_release_position, "C++: osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_orientation", (bool (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::has_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::has_orientation() const --> bool");
		cl.def("clear_orientation", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_orientation() --> void");
		cl.def("orientation", (const class osi3::Orientation3d & (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::orientation() const --> const class osi3::Orientation3d &", pybind11::return_value_policy::automatic);
		cl.def("release_orientation", (class osi3::Orientation3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::release_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_orientation", (class osi3::Orientation3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::mutable_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::mutable_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_orientation", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::Orientation3d *)) &osi3::MovingObject_VehicleAttributes_WheelData::set_allocated_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_set_allocated_orientation", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(class osi3::Orientation3d *)) &osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_set_allocated_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_set_allocated_orientation(class osi3::Orientation3d *) --> void", pybind11::arg("orientation"));
		cl.def("unsafe_arena_release_orientation", (class osi3::Orientation3d * (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_release_orientation, "C++: osi3::MovingObject_VehicleAttributes_WheelData::unsafe_arena_release_orientation() --> class osi3::Orientation3d *", pybind11::return_value_policy::reference);
		cl.def("clear_axle", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_axle, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_axle() --> void");
		cl.def("axle", (unsigned int (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::axle, "C++: osi3::MovingObject_VehicleAttributes_WheelData::axle() const --> unsigned int");
		cl.def("set_axle", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(unsigned int)) &osi3::MovingObject_VehicleAttributes_WheelData::set_axle, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_axle(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_index", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_index, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_index() --> void");
		cl.def("index", (unsigned int (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::index, "C++: osi3::MovingObject_VehicleAttributes_WheelData::index() const --> unsigned int");
		cl.def("set_index", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(unsigned int)) &osi3::MovingObject_VehicleAttributes_WheelData::set_index, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_index(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_wheel_radius", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_wheel_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_wheel_radius() --> void");
		cl.def("wheel_radius", (double (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::wheel_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::wheel_radius() const --> double");
		cl.def("set_wheel_radius", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(double)) &osi3::MovingObject_VehicleAttributes_WheelData::set_wheel_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_wheel_radius(double) --> void", pybind11::arg("value"));
		cl.def("clear_rim_radius", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_rim_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_rim_radius() --> void");
		cl.def("rim_radius", (double (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::rim_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::rim_radius() const --> double");
		cl.def("set_rim_radius", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(double)) &osi3::MovingObject_VehicleAttributes_WheelData::set_rim_radius, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_rim_radius(double) --> void", pybind11::arg("value"));
		cl.def("clear_width", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_width, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_width() --> void");
		cl.def("width", (double (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::width, "C++: osi3::MovingObject_VehicleAttributes_WheelData::width() const --> double");
		cl.def("set_width", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(double)) &osi3::MovingObject_VehicleAttributes_WheelData::set_width, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_width(double) --> void", pybind11::arg("value"));
		cl.def("clear_rotation_rate", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)()) &osi3::MovingObject_VehicleAttributes_WheelData::clear_rotation_rate, "C++: osi3::MovingObject_VehicleAttributes_WheelData::clear_rotation_rate() --> void");
		cl.def("rotation_rate", (double (osi3::MovingObject_VehicleAttributes_WheelData::*)() const) &osi3::MovingObject_VehicleAttributes_WheelData::rotation_rate, "C++: osi3::MovingObject_VehicleAttributes_WheelData::rotation_rate() const --> double");
		cl.def("set_rotation_rate", (void (osi3::MovingObject_VehicleAttributes_WheelData::*)(double)) &osi3::MovingObject_VehicleAttributes_WheelData::set_rotation_rate, "C++: osi3::MovingObject_VehicleAttributes_WheelData::set_rotation_rate(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_16.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_16(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B307_[osi3::MovingObject_VehicleAttributes] ";
	{ // osi3::MovingObject_VehicleAttributes file: line:1207
		pybind11::class_<osi3::MovingObject_VehicleAttributes, std::shared_ptr<osi3::MovingObject_VehicleAttributes>, google::protobuf::Message> cl(M("osi3"), "MovingObject_VehicleAttributes", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject_VehicleAttributes(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject_VehicleAttributes const &o){ return new osi3::MovingObject_VehicleAttributes(o); } ) );
		cl.def("assign", (class osi3::MovingObject_VehicleAttributes & (osi3::MovingObject_VehicleAttributes::*)(const class osi3::MovingObject_VehicleAttributes &)) &osi3::MovingObject_VehicleAttributes::operator=, "C++: osi3::MovingObject_VehicleAttributes::operator=(const class osi3::MovingObject_VehicleAttributes &) --> class osi3::MovingObject_VehicleAttributes &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleAttributes::descriptor, "C++: osi3::MovingObject_VehicleAttributes::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleAttributes::GetDescriptor, "C++: osi3::MovingObject_VehicleAttributes::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject_VehicleAttributes::GetReflection, "C++: osi3::MovingObject_VehicleAttributes::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject_VehicleAttributes & (*)()) &osi3::MovingObject_VehicleAttributes::default_instance, "C++: osi3::MovingObject_VehicleAttributes::default_instance() --> const class osi3::MovingObject_VehicleAttributes &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject_VehicleAttributes * (*)()) &osi3::MovingObject_VehicleAttributes::internal_default_instance, "C++: osi3::MovingObject_VehicleAttributes::internal_default_instance() --> const class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::MovingObject_VehicleAttributes *)) &osi3::MovingObject_VehicleAttributes::Swap, "C++: osi3::MovingObject_VehicleAttributes::Swap(class osi3::MovingObject_VehicleAttributes *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::MovingObject_VehicleAttributes *)) &osi3::MovingObject_VehicleAttributes::UnsafeArenaSwap, "C++: osi3::MovingObject_VehicleAttributes::UnsafeArenaSwap(class osi3::MovingObject_VehicleAttributes *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject_VehicleAttributes * (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::New, "C++: osi3::MovingObject_VehicleAttributes::New() const --> class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject_VehicleAttributes * (osi3::MovingObject_VehicleAttributes::*)(class google::protobuf::Arena *) const) &osi3::MovingObject_VehicleAttributes::New, "C++: osi3::MovingObject_VehicleAttributes::New(class google::protobuf::Arena *) const --> class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleAttributes::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleAttributes::CopyFrom, "C++: osi3::MovingObject_VehicleAttributes::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleAttributes::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleAttributes::MergeFrom, "C++: osi3::MovingObject_VehicleAttributes::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleAttributes::*)(const class osi3::MovingObject_VehicleAttributes &)) &osi3::MovingObject_VehicleAttributes::CopyFrom, "C++: osi3::MovingObject_VehicleAttributes::CopyFrom(const class osi3::MovingObject_VehicleAttributes &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleAttributes::*)(const class osi3::MovingObject_VehicleAttributes &)) &osi3::MovingObject_VehicleAttributes::MergeFrom, "C++: osi3::MovingObject_VehicleAttributes::MergeFrom(const class osi3::MovingObject_VehicleAttributes &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::Clear, "C++: osi3::MovingObject_VehicleAttributes::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::IsInitialized, "C++: osi3::MovingObject_VehicleAttributes::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::ByteSizeLong, "C++: osi3::MovingObject_VehicleAttributes::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject_VehicleAttributes::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject_VehicleAttributes::_InternalParse, "C++: osi3::MovingObject_VehicleAttributes::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject_VehicleAttributes::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject_VehicleAttributes::_InternalSerialize, "C++: osi3::MovingObject_VehicleAttributes::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::GetCachedSize, "C++: osi3::MovingObject_VehicleAttributes::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::GetMetadata, "C++: osi3::MovingObject_VehicleAttributes::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("wheel_data_size", (int (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::wheel_data_size, "C++: osi3::MovingObject_VehicleAttributes::wheel_data_size() const --> int");
		cl.def("clear_wheel_data", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_wheel_data, "C++: osi3::MovingObject_VehicleAttributes::clear_wheel_data() --> void");
		cl.def("mutable_wheel_data", (class osi3::MovingObject_VehicleAttributes_WheelData * (osi3::MovingObject_VehicleAttributes::*)(int)) &osi3::MovingObject_VehicleAttributes::mutable_wheel_data, "C++: osi3::MovingObject_VehicleAttributes::mutable_wheel_data(int) --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_wheel_data", (class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::mutable_wheel_data, "C++: osi3::MovingObject_VehicleAttributes::mutable_wheel_data() --> class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> *", pybind11::return_value_policy::reference);
		cl.def("wheel_data", (const class osi3::MovingObject_VehicleAttributes_WheelData & (osi3::MovingObject_VehicleAttributes::*)(int) const) &osi3::MovingObject_VehicleAttributes::wheel_data, "C++: osi3::MovingObject_VehicleAttributes::wheel_data(int) const --> const class osi3::MovingObject_VehicleAttributes_WheelData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_wheel_data", (class osi3::MovingObject_VehicleAttributes_WheelData * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::add_wheel_data, "C++: osi3::MovingObject_VehicleAttributes::add_wheel_data() --> class osi3::MovingObject_VehicleAttributes_WheelData *", pybind11::return_value_policy::reference);
		cl.def("wheel_data", (const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> & (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::wheel_data, "C++: osi3::MovingObject_VehicleAttributes::wheel_data() const --> const class google::protobuf::RepeatedPtrField<class osi3::MovingObject_VehicleAttributes_WheelData> &", pybind11::return_value_policy::automatic);
		cl.def("has_driver_id", (bool (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::has_driver_id, "C++: osi3::MovingObject_VehicleAttributes::has_driver_id() const --> bool");
		cl.def("clear_driver_id", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_driver_id, "C++: osi3::MovingObject_VehicleAttributes::clear_driver_id() --> void");
		cl.def("driver_id", (const class osi3::Identifier & (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::driver_id, "C++: osi3::MovingObject_VehicleAttributes::driver_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_driver_id", (class osi3::Identifier * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::release_driver_id, "C++: osi3::MovingObject_VehicleAttributes::release_driver_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_driver_id", (class osi3::Identifier * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::mutable_driver_id, "C++: osi3::MovingObject_VehicleAttributes::mutable_driver_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_driver_id", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Identifier *)) &osi3::MovingObject_VehicleAttributes::set_allocated_driver_id, "C++: osi3::MovingObject_VehicleAttributes::set_allocated_driver_id(class osi3::Identifier *) --> void", pybind11::arg("driver_id"));
		cl.def("unsafe_arena_set_allocated_driver_id", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Identifier *)) &osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_driver_id, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_driver_id(class osi3::Identifier *) --> void", pybind11::arg("driver_id"));
		cl.def("unsafe_arena_release_driver_id", (class osi3::Identifier * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::unsafe_arena_release_driver_id, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_release_driver_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_bbcenter_to_rear", (bool (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::has_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::has_bbcenter_to_rear() const --> bool");
		cl.def("clear_bbcenter_to_rear", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::clear_bbcenter_to_rear() --> void");
		cl.def("bbcenter_to_rear", (const class osi3::Vector3d & (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::bbcenter_to_rear() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_bbcenter_to_rear", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::release_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::release_bbcenter_to_rear() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_bbcenter_to_rear", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::mutable_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::mutable_bbcenter_to_rear() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_bbcenter_to_rear", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes::set_allocated_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::set_allocated_bbcenter_to_rear(class osi3::Vector3d *) --> void", pybind11::arg("bbcenter_to_rear"));
		cl.def("unsafe_arena_set_allocated_bbcenter_to_rear", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_bbcenter_to_rear(class osi3::Vector3d *) --> void", pybind11::arg("bbcenter_to_rear"));
		cl.def("unsafe_arena_release_bbcenter_to_rear", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::unsafe_arena_release_bbcenter_to_rear, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_release_bbcenter_to_rear() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_bbcenter_to_front", (bool (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::has_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::has_bbcenter_to_front() const --> bool");
		cl.def("clear_bbcenter_to_front", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::clear_bbcenter_to_front() --> void");
		cl.def("bbcenter_to_front", (const class osi3::Vector3d & (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::bbcenter_to_front() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_bbcenter_to_front", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::release_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::release_bbcenter_to_front() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_bbcenter_to_front", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::mutable_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::mutable_bbcenter_to_front() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_bbcenter_to_front", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes::set_allocated_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::set_allocated_bbcenter_to_front(class osi3::Vector3d *) --> void", pybind11::arg("bbcenter_to_front"));
		cl.def("unsafe_arena_set_allocated_bbcenter_to_front", (void (osi3::MovingObject_VehicleAttributes::*)(class osi3::Vector3d *)) &osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_set_allocated_bbcenter_to_front(class osi3::Vector3d *) --> void", pybind11::arg("bbcenter_to_front"));
		cl.def("unsafe_arena_release_bbcenter_to_front", (class osi3::Vector3d * (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::unsafe_arena_release_bbcenter_to_front, "C++: osi3::MovingObject_VehicleAttributes::unsafe_arena_release_bbcenter_to_front() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("clear_radius_wheel", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_radius_wheel, "C++: osi3::MovingObject_VehicleAttributes::clear_radius_wheel() --> void");
		cl.def("radius_wheel", (double (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::radius_wheel, "C++: osi3::MovingObject_VehicleAttributes::radius_wheel() const --> double");
		cl.def("set_radius_wheel", (void (osi3::MovingObject_VehicleAttributes::*)(double)) &osi3::MovingObject_VehicleAttributes::set_radius_wheel, "C++: osi3::MovingObject_VehicleAttributes::set_radius_wheel(double) --> void", pybind11::arg("value"));
		cl.def("clear_ground_clearance", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_ground_clearance, "C++: osi3::MovingObject_VehicleAttributes::clear_ground_clearance() --> void");
		cl.def("ground_clearance", (double (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::ground_clearance, "C++: osi3::MovingObject_VehicleAttributes::ground_clearance() const --> double");
		cl.def("set_ground_clearance", (void (osi3::MovingObject_VehicleAttributes::*)(double)) &osi3::MovingObject_VehicleAttributes::set_ground_clearance, "C++: osi3::MovingObject_VehicleAttributes::set_ground_clearance(double) --> void", pybind11::arg("value"));
		cl.def("clear_steering_wheel_angle", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_steering_wheel_angle, "C++: osi3::MovingObject_VehicleAttributes::clear_steering_wheel_angle() --> void");
		cl.def("steering_wheel_angle", (double (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::steering_wheel_angle, "C++: osi3::MovingObject_VehicleAttributes::steering_wheel_angle() const --> double");
		cl.def("set_steering_wheel_angle", (void (osi3::MovingObject_VehicleAttributes::*)(double)) &osi3::MovingObject_VehicleAttributes::set_steering_wheel_angle, "C++: osi3::MovingObject_VehicleAttributes::set_steering_wheel_angle(double) --> void", pybind11::arg("value"));
		cl.def("clear_number_wheels", (void (osi3::MovingObject_VehicleAttributes::*)()) &osi3::MovingObject_VehicleAttributes::clear_number_wheels, "C++: osi3::MovingObject_VehicleAttributes::clear_number_wheels() --> void");
		cl.def("number_wheels", (unsigned int (osi3::MovingObject_VehicleAttributes::*)() const) &osi3::MovingObject_VehicleAttributes::number_wheels, "C++: osi3::MovingObject_VehicleAttributes::number_wheels() const --> unsigned int");
		cl.def("set_number_wheels", (void (osi3::MovingObject_VehicleAttributes::*)(unsigned int)) &osi3::MovingObject_VehicleAttributes::set_number_wheels, "C++: osi3::MovingObject_VehicleAttributes::set_number_wheels(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_17.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_17(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B308_[osi3::MovingObject_MovingObjectClassification] ";
	{ // osi3::MovingObject_MovingObjectClassification file: line:1459
		pybind11::class_<osi3::MovingObject_MovingObjectClassification, std::shared_ptr<osi3::MovingObject_MovingObjectClassification>, google::protobuf::Message> cl(M("osi3"), "MovingObject_MovingObjectClassification", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject_MovingObjectClassification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject_MovingObjectClassification const &o){ return new osi3::MovingObject_MovingObjectClassification(o); } ) );
		cl.def("assign", (class osi3::MovingObject_MovingObjectClassification & (osi3::MovingObject_MovingObjectClassification::*)(const class osi3::MovingObject_MovingObjectClassification &)) &osi3::MovingObject_MovingObjectClassification::operator=, "C++: osi3::MovingObject_MovingObjectClassification::operator=(const class osi3::MovingObject_MovingObjectClassification &) --> class osi3::MovingObject_MovingObjectClassification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_MovingObjectClassification::descriptor, "C++: osi3::MovingObject_MovingObjectClassification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_MovingObjectClassification::GetDescriptor, "C++: osi3::MovingObject_MovingObjectClassification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject_MovingObjectClassification::GetReflection, "C++: osi3::MovingObject_MovingObjectClassification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject_MovingObjectClassification & (*)()) &osi3::MovingObject_MovingObjectClassification::default_instance, "C++: osi3::MovingObject_MovingObjectClassification::default_instance() --> const class osi3::MovingObject_MovingObjectClassification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject_MovingObjectClassification * (*)()) &osi3::MovingObject_MovingObjectClassification::internal_default_instance, "C++: osi3::MovingObject_MovingObjectClassification::internal_default_instance() --> const class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject_MovingObjectClassification::*)(class osi3::MovingObject_MovingObjectClassification *)) &osi3::MovingObject_MovingObjectClassification::Swap, "C++: osi3::MovingObject_MovingObjectClassification::Swap(class osi3::MovingObject_MovingObjectClassification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject_MovingObjectClassification::*)(class osi3::MovingObject_MovingObjectClassification *)) &osi3::MovingObject_MovingObjectClassification::UnsafeArenaSwap, "C++: osi3::MovingObject_MovingObjectClassification::UnsafeArenaSwap(class osi3::MovingObject_MovingObjectClassification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject_MovingObjectClassification * (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::New, "C++: osi3::MovingObject_MovingObjectClassification::New() const --> class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject_MovingObjectClassification * (osi3::MovingObject_MovingObjectClassification::*)(class google::protobuf::Arena *) const) &osi3::MovingObject_MovingObjectClassification::New, "C++: osi3::MovingObject_MovingObjectClassification::New(class google::protobuf::Arena *) const --> class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject_MovingObjectClassification::*)(const class google::protobuf::Message &)) &osi3::MovingObject_MovingObjectClassification::CopyFrom, "C++: osi3::MovingObject_MovingObjectClassification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_MovingObjectClassification::*)(const class google::protobuf::Message &)) &osi3::MovingObject_MovingObjectClassification::MergeFrom, "C++: osi3::MovingObject_MovingObjectClassification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject_MovingObjectClassification::*)(const class osi3::MovingObject_MovingObjectClassification &)) &osi3::MovingObject_MovingObjectClassification::CopyFrom, "C++: osi3::MovingObject_MovingObjectClassification::CopyFrom(const class osi3::MovingObject_MovingObjectClassification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_MovingObjectClassification::*)(const class osi3::MovingObject_MovingObjectClassification &)) &osi3::MovingObject_MovingObjectClassification::MergeFrom, "C++: osi3::MovingObject_MovingObjectClassification::MergeFrom(const class osi3::MovingObject_MovingObjectClassification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::Clear, "C++: osi3::MovingObject_MovingObjectClassification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::IsInitialized, "C++: osi3::MovingObject_MovingObjectClassification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::ByteSizeLong, "C++: osi3::MovingObject_MovingObjectClassification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject_MovingObjectClassification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject_MovingObjectClassification::_InternalParse, "C++: osi3::MovingObject_MovingObjectClassification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject_MovingObjectClassification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject_MovingObjectClassification::_InternalSerialize, "C++: osi3::MovingObject_MovingObjectClassification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::GetCachedSize, "C++: osi3::MovingObject_MovingObjectClassification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::GetMetadata, "C++: osi3::MovingObject_MovingObjectClassification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("assigned_lane_id_size", (int (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_id_size, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::clear_assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::MovingObject_MovingObjectClassification::*)(int)) &osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::MovingObject_MovingObjectClassification::*)(int) const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::add_assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_id, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("assigned_lane_percentage_size", (int (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage_size, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage_size() const --> int");
		cl.def("clear_assigned_lane_percentage", (void (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::clear_assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::clear_assigned_lane_percentage() --> void");
		cl.def("assigned_lane_percentage", (double (osi3::MovingObject_MovingObjectClassification::*)(int) const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage(int) const --> double", pybind11::arg("index"));
		cl.def("set_assigned_lane_percentage", (void (osi3::MovingObject_MovingObjectClassification::*)(int, double)) &osi3::MovingObject_MovingObjectClassification::set_assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::set_assigned_lane_percentage(int, double) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_assigned_lane_percentage", (void (osi3::MovingObject_MovingObjectClassification::*)(double)) &osi3::MovingObject_MovingObjectClassification::add_assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::add_assigned_lane_percentage(double) --> void", pybind11::arg("value"));
		cl.def("assigned_lane_percentage", (const class google::protobuf::RepeatedField<double> & (osi3::MovingObject_MovingObjectClassification::*)() const) &osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::assigned_lane_percentage() const --> const class google::protobuf::RepeatedField<double> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_assigned_lane_percentage", (class google::protobuf::RepeatedField<double> * (osi3::MovingObject_MovingObjectClassification::*)()) &osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_percentage, "C++: osi3::MovingObject_MovingObjectClassification::mutable_assigned_lane_percentage() --> class google::protobuf::RepeatedField<double> *", pybind11::return_value_policy::reference);
	}
	std::cout << "B309_[void osi3::swap(class osi3::MovingObject_MovingObjectClassification &, class osi3::MovingObject_MovingObjectClassification &)] ";
	std::cout << "B310_[osi3::MovingObject_VehicleClassification_LightState] ";
	{ // osi3::MovingObject_VehicleClassification_LightState file: line:1630
		pybind11::class_<osi3::MovingObject_VehicleClassification_LightState, std::shared_ptr<osi3::MovingObject_VehicleClassification_LightState>, google::protobuf::Message> cl(M("osi3"), "MovingObject_VehicleClassification_LightState", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject_VehicleClassification_LightState(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject_VehicleClassification_LightState const &o){ return new osi3::MovingObject_VehicleClassification_LightState(o); } ) );
		cl.def("assign", (class osi3::MovingObject_VehicleClassification_LightState & (osi3::MovingObject_VehicleClassification_LightState::*)(const class osi3::MovingObject_VehicleClassification_LightState &)) &osi3::MovingObject_VehicleClassification_LightState::operator=, "C++: osi3::MovingObject_VehicleClassification_LightState::operator=(const class osi3::MovingObject_VehicleClassification_LightState &) --> class osi3::MovingObject_VehicleClassification_LightState &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleClassification_LightState::descriptor, "C++: osi3::MovingObject_VehicleClassification_LightState::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleClassification_LightState::GetDescriptor, "C++: osi3::MovingObject_VehicleClassification_LightState::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject_VehicleClassification_LightState::GetReflection, "C++: osi3::MovingObject_VehicleClassification_LightState::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject_VehicleClassification_LightState & (*)()) &osi3::MovingObject_VehicleClassification_LightState::default_instance, "C++: osi3::MovingObject_VehicleClassification_LightState::default_instance() --> const class osi3::MovingObject_VehicleClassification_LightState &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject_VehicleClassification_LightState * (*)()) &osi3::MovingObject_VehicleClassification_LightState::internal_default_instance, "C++: osi3::MovingObject_VehicleClassification_LightState::internal_default_instance() --> const class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject_VehicleClassification_LightState::*)(class osi3::MovingObject_VehicleClassification_LightState *)) &osi3::MovingObject_VehicleClassification_LightState::Swap, "C++: osi3::MovingObject_VehicleClassification_LightState::Swap(class osi3::MovingObject_VehicleClassification_LightState *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject_VehicleClassification_LightState::*)(class osi3::MovingObject_VehicleClassification_LightState *)) &osi3::MovingObject_VehicleClassification_LightState::UnsafeArenaSwap, "C++: osi3::MovingObject_VehicleClassification_LightState::UnsafeArenaSwap(class osi3::MovingObject_VehicleClassification_LightState *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject_VehicleClassification_LightState * (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::New, "C++: osi3::MovingObject_VehicleClassification_LightState::New() const --> class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject_VehicleClassification_LightState * (osi3::MovingObject_VehicleClassification_LightState::*)(class google::protobuf::Arena *) const) &osi3::MovingObject_VehicleClassification_LightState::New, "C++: osi3::MovingObject_VehicleClassification_LightState::New(class google::protobuf::Arena *) const --> class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleClassification_LightState::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleClassification_LightState::CopyFrom, "C++: osi3::MovingObject_VehicleClassification_LightState::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleClassification_LightState::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleClassification_LightState::MergeFrom, "C++: osi3::MovingObject_VehicleClassification_LightState::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleClassification_LightState::*)(const class osi3::MovingObject_VehicleClassification_LightState &)) &osi3::MovingObject_VehicleClassification_LightState::CopyFrom, "C++: osi3::MovingObject_VehicleClassification_LightState::CopyFrom(const class osi3::MovingObject_VehicleClassification_LightState &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleClassification_LightState::*)(const class osi3::MovingObject_VehicleClassification_LightState &)) &osi3::MovingObject_VehicleClassification_LightState::MergeFrom, "C++: osi3::MovingObject_VehicleClassification_LightState::MergeFrom(const class osi3::MovingObject_VehicleClassification_LightState &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::Clear, "C++: osi3::MovingObject_VehicleClassification_LightState::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::IsInitialized, "C++: osi3::MovingObject_VehicleClassification_LightState::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::ByteSizeLong, "C++: osi3::MovingObject_VehicleClassification_LightState::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject_VehicleClassification_LightState::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject_VehicleClassification_LightState::_InternalParse, "C++: osi3::MovingObject_VehicleClassification_LightState::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject_VehicleClassification_LightState::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject_VehicleClassification_LightState::_InternalSerialize, "C++: osi3::MovingObject_VehicleClassification_LightState::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::GetCachedSize, "C++: osi3::MovingObject_VehicleClassification_LightState::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::GetMetadata, "C++: osi3::MovingObject_VehicleClassification_LightState::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("IndicatorState_IsValid", (bool (*)(int)) &osi3::MovingObject_VehicleClassification_LightState::IndicatorState_IsValid, "C++: osi3::MovingObject_VehicleClassification_LightState::IndicatorState_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("IndicatorState_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::MovingObject_VehicleClassification_LightState::IndicatorState_descriptor, "C++: osi3::MovingObject_VehicleClassification_LightState::IndicatorState_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("IndicatorState_Parse", (bool (*)(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState *)) &osi3::MovingObject_VehicleClassification_LightState::IndicatorState_Parse, "C++: osi3::MovingObject_VehicleClassification_LightState::IndicatorState_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("GenericLightState_IsValid", (bool (*)(int)) &osi3::MovingObject_VehicleClassification_LightState::GenericLightState_IsValid, "C++: osi3::MovingObject_VehicleClassification_LightState::GenericLightState_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("GenericLightState_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::MovingObject_VehicleClassification_LightState::GenericLightState_descriptor, "C++: osi3::MovingObject_VehicleClassification_LightState::GenericLightState_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GenericLightState_Parse", (bool (*)(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState *)) &osi3::MovingObject_VehicleClassification_LightState::GenericLightState_Parse, "C++: osi3::MovingObject_VehicleClassification_LightState::GenericLightState_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("BrakeLightState_IsValid", (bool (*)(int)) &osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_IsValid, "C++: osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("BrakeLightState_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_descriptor, "C++: osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("BrakeLightState_Parse", (bool (*)(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState *)) &osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_Parse, "C++: osi3::MovingObject_VehicleClassification_LightState::BrakeLightState_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("clear_indicator_state", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_indicator_state, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_indicator_state() --> void");
		cl.def("indicator_state", (enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::indicator_state, "C++: osi3::MovingObject_VehicleClassification_LightState::indicator_state() const --> enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState");
		cl.def("set_indicator_state", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState)) &osi3::MovingObject_VehicleClassification_LightState::set_indicator_state, "C++: osi3::MovingObject_VehicleClassification_LightState::set_indicator_state(enum osi3::MovingObject_VehicleClassification_LightState_IndicatorState) --> void", pybind11::arg("value"));
		cl.def("clear_front_fog_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_front_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_front_fog_light() --> void");
		cl.def("front_fog_light", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::front_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::front_fog_light() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_front_fog_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_front_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::set_front_fog_light(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_rear_fog_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_rear_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_rear_fog_light() --> void");
		cl.def("rear_fog_light", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::rear_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::rear_fog_light() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_rear_fog_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_rear_fog_light, "C++: osi3::MovingObject_VehicleClassification_LightState::set_rear_fog_light(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_head_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_head_light, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_head_light() --> void");
		cl.def("head_light", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::head_light, "C++: osi3::MovingObject_VehicleClassification_LightState::head_light() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_head_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_head_light, "C++: osi3::MovingObject_VehicleClassification_LightState::set_head_light(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_high_beam", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_high_beam, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_high_beam() --> void");
		cl.def("high_beam", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::high_beam, "C++: osi3::MovingObject_VehicleClassification_LightState::high_beam() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_high_beam", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_high_beam, "C++: osi3::MovingObject_VehicleClassification_LightState::set_high_beam(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_reversing_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_reversing_light, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_reversing_light() --> void");
		cl.def("reversing_light", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::reversing_light, "C++: osi3::MovingObject_VehicleClassification_LightState::reversing_light() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_reversing_light", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_reversing_light, "C++: osi3::MovingObject_VehicleClassification_LightState::set_reversing_light(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_brake_light_state", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_brake_light_state, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_brake_light_state() --> void");
		cl.def("brake_light_state", (enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::brake_light_state, "C++: osi3::MovingObject_VehicleClassification_LightState::brake_light_state() const --> enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState");
		cl.def("set_brake_light_state", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_brake_light_state, "C++: osi3::MovingObject_VehicleClassification_LightState::set_brake_light_state(enum osi3::MovingObject_VehicleClassification_LightState_BrakeLightState) --> void", pybind11::arg("value"));
		cl.def("clear_license_plate_illumination_rear", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_license_plate_illumination_rear, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_license_plate_illumination_rear() --> void");
		cl.def("license_plate_illumination_rear", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::license_plate_illumination_rear, "C++: osi3::MovingObject_VehicleClassification_LightState::license_plate_illumination_rear() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_license_plate_illumination_rear", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_license_plate_illumination_rear, "C++: osi3::MovingObject_VehicleClassification_LightState::set_license_plate_illumination_rear(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_emergency_vehicle_illumination", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_emergency_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_emergency_vehicle_illumination() --> void");
		cl.def("emergency_vehicle_illumination", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::emergency_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::emergency_vehicle_illumination() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_emergency_vehicle_illumination", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_emergency_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::set_emergency_vehicle_illumination(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
		cl.def("clear_service_vehicle_illumination", (void (osi3::MovingObject_VehicleClassification_LightState::*)()) &osi3::MovingObject_VehicleClassification_LightState::clear_service_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::clear_service_vehicle_illumination() --> void");
		cl.def("service_vehicle_illumination", (enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState (osi3::MovingObject_VehicleClassification_LightState::*)() const) &osi3::MovingObject_VehicleClassification_LightState::service_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::service_vehicle_illumination() const --> enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState");
		cl.def("set_service_vehicle_illumination", (void (osi3::MovingObject_VehicleClassification_LightState::*)(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState)) &osi3::MovingObject_VehicleClassification_LightState::set_service_vehicle_illumination, "C++: osi3::MovingObject_VehicleClassification_LightState::set_service_vehicle_illumination(enum osi3::MovingObject_VehicleClassification_LightState_GenericLightState) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_18.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_18(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B311_[osi3::MovingObject_VehicleClassification] ";
	{ // osi3::MovingObject_VehicleClassification file: line:1980
		pybind11::class_<osi3::MovingObject_VehicleClassification, std::shared_ptr<osi3::MovingObject_VehicleClassification>, google::protobuf::Message> cl(M("osi3"), "MovingObject_VehicleClassification", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject_VehicleClassification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject_VehicleClassification const &o){ return new osi3::MovingObject_VehicleClassification(o); } ) );
		cl.def("assign", (class osi3::MovingObject_VehicleClassification & (osi3::MovingObject_VehicleClassification::*)(const class osi3::MovingObject_VehicleClassification &)) &osi3::MovingObject_VehicleClassification::operator=, "C++: osi3::MovingObject_VehicleClassification::operator=(const class osi3::MovingObject_VehicleClassification &) --> class osi3::MovingObject_VehicleClassification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleClassification::descriptor, "C++: osi3::MovingObject_VehicleClassification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject_VehicleClassification::GetDescriptor, "C++: osi3::MovingObject_VehicleClassification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject_VehicleClassification::GetReflection, "C++: osi3::MovingObject_VehicleClassification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject_VehicleClassification & (*)()) &osi3::MovingObject_VehicleClassification::default_instance, "C++: osi3::MovingObject_VehicleClassification::default_instance() --> const class osi3::MovingObject_VehicleClassification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject_VehicleClassification * (*)()) &osi3::MovingObject_VehicleClassification::internal_default_instance, "C++: osi3::MovingObject_VehicleClassification::internal_default_instance() --> const class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::MovingObject_VehicleClassification *)) &osi3::MovingObject_VehicleClassification::Swap, "C++: osi3::MovingObject_VehicleClassification::Swap(class osi3::MovingObject_VehicleClassification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::MovingObject_VehicleClassification *)) &osi3::MovingObject_VehicleClassification::UnsafeArenaSwap, "C++: osi3::MovingObject_VehicleClassification::UnsafeArenaSwap(class osi3::MovingObject_VehicleClassification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject_VehicleClassification * (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::New, "C++: osi3::MovingObject_VehicleClassification::New() const --> class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject_VehicleClassification * (osi3::MovingObject_VehicleClassification::*)(class google::protobuf::Arena *) const) &osi3::MovingObject_VehicleClassification::New, "C++: osi3::MovingObject_VehicleClassification::New(class google::protobuf::Arena *) const --> class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleClassification::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleClassification::CopyFrom, "C++: osi3::MovingObject_VehicleClassification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleClassification::*)(const class google::protobuf::Message &)) &osi3::MovingObject_VehicleClassification::MergeFrom, "C++: osi3::MovingObject_VehicleClassification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject_VehicleClassification::*)(const class osi3::MovingObject_VehicleClassification &)) &osi3::MovingObject_VehicleClassification::CopyFrom, "C++: osi3::MovingObject_VehicleClassification::CopyFrom(const class osi3::MovingObject_VehicleClassification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject_VehicleClassification::*)(const class osi3::MovingObject_VehicleClassification &)) &osi3::MovingObject_VehicleClassification::MergeFrom, "C++: osi3::MovingObject_VehicleClassification::MergeFrom(const class osi3::MovingObject_VehicleClassification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::Clear, "C++: osi3::MovingObject_VehicleClassification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::IsInitialized, "C++: osi3::MovingObject_VehicleClassification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::ByteSizeLong, "C++: osi3::MovingObject_VehicleClassification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject_VehicleClassification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject_VehicleClassification::_InternalParse, "C++: osi3::MovingObject_VehicleClassification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject_VehicleClassification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject_VehicleClassification::_InternalSerialize, "C++: osi3::MovingObject_VehicleClassification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::GetCachedSize, "C++: osi3::MovingObject_VehicleClassification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::GetMetadata, "C++: osi3::MovingObject_VehicleClassification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::MovingObject_VehicleClassification::Type_IsValid, "C++: osi3::MovingObject_VehicleClassification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::MovingObject_VehicleClassification::Type_descriptor, "C++: osi3::MovingObject_VehicleClassification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::MovingObject_VehicleClassification_Type *)) &osi3::MovingObject_VehicleClassification::Type_Parse, "C++: osi3::MovingObject_VehicleClassification::Type_Parse(const std::string &, enum osi3::MovingObject_VehicleClassification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("has_light_state", (bool (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::has_light_state, "C++: osi3::MovingObject_VehicleClassification::has_light_state() const --> bool");
		cl.def("clear_light_state", (void (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::clear_light_state, "C++: osi3::MovingObject_VehicleClassification::clear_light_state() --> void");
		cl.def("light_state", (const class osi3::MovingObject_VehicleClassification_LightState & (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::light_state, "C++: osi3::MovingObject_VehicleClassification::light_state() const --> const class osi3::MovingObject_VehicleClassification_LightState &", pybind11::return_value_policy::automatic);
		cl.def("release_light_state", (class osi3::MovingObject_VehicleClassification_LightState * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::release_light_state, "C++: osi3::MovingObject_VehicleClassification::release_light_state() --> class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::reference);
		cl.def("mutable_light_state", (class osi3::MovingObject_VehicleClassification_LightState * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::mutable_light_state, "C++: osi3::MovingObject_VehicleClassification::mutable_light_state() --> class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_light_state", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::MovingObject_VehicleClassification_LightState *)) &osi3::MovingObject_VehicleClassification::set_allocated_light_state, "C++: osi3::MovingObject_VehicleClassification::set_allocated_light_state(class osi3::MovingObject_VehicleClassification_LightState *) --> void", pybind11::arg("light_state"));
		cl.def("unsafe_arena_set_allocated_light_state", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::MovingObject_VehicleClassification_LightState *)) &osi3::MovingObject_VehicleClassification::unsafe_arena_set_allocated_light_state, "C++: osi3::MovingObject_VehicleClassification::unsafe_arena_set_allocated_light_state(class osi3::MovingObject_VehicleClassification_LightState *) --> void", pybind11::arg("light_state"));
		cl.def("unsafe_arena_release_light_state", (class osi3::MovingObject_VehicleClassification_LightState * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::unsafe_arena_release_light_state, "C++: osi3::MovingObject_VehicleClassification::unsafe_arena_release_light_state() --> class osi3::MovingObject_VehicleClassification_LightState *", pybind11::return_value_policy::reference);
		cl.def("has_trailer_id", (bool (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::has_trailer_id, "C++: osi3::MovingObject_VehicleClassification::has_trailer_id() const --> bool");
		cl.def("clear_trailer_id", (void (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::clear_trailer_id, "C++: osi3::MovingObject_VehicleClassification::clear_trailer_id() --> void");
		cl.def("trailer_id", (const class osi3::Identifier & (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::trailer_id, "C++: osi3::MovingObject_VehicleClassification::trailer_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_trailer_id", (class osi3::Identifier * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::release_trailer_id, "C++: osi3::MovingObject_VehicleClassification::release_trailer_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_trailer_id", (class osi3::Identifier * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::mutable_trailer_id, "C++: osi3::MovingObject_VehicleClassification::mutable_trailer_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_trailer_id", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::Identifier *)) &osi3::MovingObject_VehicleClassification::set_allocated_trailer_id, "C++: osi3::MovingObject_VehicleClassification::set_allocated_trailer_id(class osi3::Identifier *) --> void", pybind11::arg("trailer_id"));
		cl.def("unsafe_arena_set_allocated_trailer_id", (void (osi3::MovingObject_VehicleClassification::*)(class osi3::Identifier *)) &osi3::MovingObject_VehicleClassification::unsafe_arena_set_allocated_trailer_id, "C++: osi3::MovingObject_VehicleClassification::unsafe_arena_set_allocated_trailer_id(class osi3::Identifier *) --> void", pybind11::arg("trailer_id"));
		cl.def("unsafe_arena_release_trailer_id", (class osi3::Identifier * (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::unsafe_arena_release_trailer_id, "C++: osi3::MovingObject_VehicleClassification::unsafe_arena_release_trailer_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("clear_type", (void (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::clear_type, "C++: osi3::MovingObject_VehicleClassification::clear_type() --> void");
		cl.def("type", (enum osi3::MovingObject_VehicleClassification_Type (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::type, "C++: osi3::MovingObject_VehicleClassification::type() const --> enum osi3::MovingObject_VehicleClassification_Type");
		cl.def("set_type", (void (osi3::MovingObject_VehicleClassification::*)(enum osi3::MovingObject_VehicleClassification_Type)) &osi3::MovingObject_VehicleClassification::set_type, "C++: osi3::MovingObject_VehicleClassification::set_type(enum osi3::MovingObject_VehicleClassification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_has_trailer", (void (osi3::MovingObject_VehicleClassification::*)()) &osi3::MovingObject_VehicleClassification::clear_has_trailer, "C++: osi3::MovingObject_VehicleClassification::clear_has_trailer() --> void");
		cl.def("has_trailer", (bool (osi3::MovingObject_VehicleClassification::*)() const) &osi3::MovingObject_VehicleClassification::has_trailer, "C++: osi3::MovingObject_VehicleClassification::has_trailer() const --> bool");
		cl.def("set_has_trailer", (void (osi3::MovingObject_VehicleClassification::*)(bool)) &osi3::MovingObject_VehicleClassification::set_has_trailer, "C++: osi3::MovingObject_VehicleClassification::set_has_trailer(bool) --> void", pybind11::arg("value"));
	}
	std::cout << "B312_[void osi3::swap(class osi3::MovingObject_VehicleClassification &, class osi3::MovingObject_VehicleClassification &)] ";
	std::cout << "B313_[osi3::MovingObject] ";
	{ // osi3::MovingObject file: line:2228
		pybind11::class_<osi3::MovingObject, std::shared_ptr<osi3::MovingObject>, google::protobuf::Message> cl(M("osi3"), "MovingObject", "");
		cl.def( pybind11::init( [](){ return new osi3::MovingObject(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::MovingObject const &o){ return new osi3::MovingObject(o); } ) );
		cl.def("assign", (class osi3::MovingObject & (osi3::MovingObject::*)(const class osi3::MovingObject &)) &osi3::MovingObject::operator=, "C++: osi3::MovingObject::operator=(const class osi3::MovingObject &) --> class osi3::MovingObject &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject::descriptor, "C++: osi3::MovingObject::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::MovingObject::GetDescriptor, "C++: osi3::MovingObject::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::MovingObject::GetReflection, "C++: osi3::MovingObject::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::MovingObject & (*)()) &osi3::MovingObject::default_instance, "C++: osi3::MovingObject::default_instance() --> const class osi3::MovingObject &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::MovingObject * (*)()) &osi3::MovingObject::internal_default_instance, "C++: osi3::MovingObject::internal_default_instance() --> const class osi3::MovingObject *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::MovingObject::*)(class osi3::MovingObject *)) &osi3::MovingObject::Swap, "C++: osi3::MovingObject::Swap(class osi3::MovingObject *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::MovingObject::*)(class osi3::MovingObject *)) &osi3::MovingObject::UnsafeArenaSwap, "C++: osi3::MovingObject::UnsafeArenaSwap(class osi3::MovingObject *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::MovingObject * (osi3::MovingObject::*)() const) &osi3::MovingObject::New, "C++: osi3::MovingObject::New() const --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::MovingObject * (osi3::MovingObject::*)(class google::protobuf::Arena *) const) &osi3::MovingObject::New, "C++: osi3::MovingObject::New(class google::protobuf::Arena *) const --> class osi3::MovingObject *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::MovingObject::*)(const class google::protobuf::Message &)) &osi3::MovingObject::CopyFrom, "C++: osi3::MovingObject::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject::*)(const class google::protobuf::Message &)) &osi3::MovingObject::MergeFrom, "C++: osi3::MovingObject::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::MovingObject::*)(const class osi3::MovingObject &)) &osi3::MovingObject::CopyFrom, "C++: osi3::MovingObject::CopyFrom(const class osi3::MovingObject &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::MovingObject::*)(const class osi3::MovingObject &)) &osi3::MovingObject::MergeFrom, "C++: osi3::MovingObject::MergeFrom(const class osi3::MovingObject &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::MovingObject::*)()) &osi3::MovingObject::Clear, "C++: osi3::MovingObject::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::IsInitialized, "C++: osi3::MovingObject::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::MovingObject::*)() const) &osi3::MovingObject::ByteSizeLong, "C++: osi3::MovingObject::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::MovingObject::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::MovingObject::_InternalParse, "C++: osi3::MovingObject::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::MovingObject::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::MovingObject::_InternalSerialize, "C++: osi3::MovingObject::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::MovingObject::*)() const) &osi3::MovingObject::GetCachedSize, "C++: osi3::MovingObject::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::MovingObject::*)() const) &osi3::MovingObject::GetMetadata, "C++: osi3::MovingObject::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::MovingObject::Type_IsValid, "C++: osi3::MovingObject::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::MovingObject::Type_descriptor, "C++: osi3::MovingObject::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::MovingObject_Type *)) &osi3::MovingObject::Type_Parse, "C++: osi3::MovingObject::Type_Parse(const std::string &, enum osi3::MovingObject_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("assigned_lane_id_size", (int (osi3::MovingObject::*)() const) &osi3::MovingObject::assigned_lane_id_size, "C++: osi3::MovingObject::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_assigned_lane_id, "C++: osi3::MovingObject::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::MovingObject::*)(int)) &osi3::MovingObject::mutable_assigned_lane_id, "C++: osi3::MovingObject::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_assigned_lane_id, "C++: osi3::MovingObject::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::MovingObject::*)(int) const) &osi3::MovingObject::assigned_lane_id, "C++: osi3::MovingObject::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::MovingObject::*)()) &osi3::MovingObject::add_assigned_lane_id, "C++: osi3::MovingObject::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::MovingObject::*)() const) &osi3::MovingObject::assigned_lane_id, "C++: osi3::MovingObject::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("future_trajectory_size", (int (osi3::MovingObject::*)() const) &osi3::MovingObject::future_trajectory_size, "C++: osi3::MovingObject::future_trajectory_size() const --> int");
		cl.def("clear_future_trajectory", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_future_trajectory, "C++: osi3::MovingObject::clear_future_trajectory() --> void");
		cl.def("mutable_future_trajectory", (class osi3::StatePoint * (osi3::MovingObject::*)(int)) &osi3::MovingObject::mutable_future_trajectory, "C++: osi3::MovingObject::mutable_future_trajectory(int) --> class osi3::StatePoint *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_future_trajectory", (class google::protobuf::RepeatedPtrField<class osi3::StatePoint> * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_future_trajectory, "C++: osi3::MovingObject::mutable_future_trajectory() --> class google::protobuf::RepeatedPtrField<class osi3::StatePoint> *", pybind11::return_value_policy::reference);
		cl.def("future_trajectory", (const class osi3::StatePoint & (osi3::MovingObject::*)(int) const) &osi3::MovingObject::future_trajectory, "C++: osi3::MovingObject::future_trajectory(int) const --> const class osi3::StatePoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_future_trajectory", (class osi3::StatePoint * (osi3::MovingObject::*)()) &osi3::MovingObject::add_future_trajectory, "C++: osi3::MovingObject::add_future_trajectory() --> class osi3::StatePoint *", pybind11::return_value_policy::reference);
		cl.def("future_trajectory", (const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> & (osi3::MovingObject::*)() const) &osi3::MovingObject::future_trajectory, "C++: osi3::MovingObject::future_trajectory() const --> const class google::protobuf::RepeatedPtrField<class osi3::StatePoint> &", pybind11::return_value_policy::automatic);
		cl.def("clear_model_reference", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_model_reference, "C++: osi3::MovingObject::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::MovingObject::*)(const char *)) &osi3::MovingObject::set_model_reference, "C++: osi3::MovingObject::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::MovingObject::*)(const char *, unsigned long)) &osi3::MovingObject::set_model_reference, "C++: osi3::MovingObject::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_id", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::has_id, "C++: osi3::MovingObject::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_id, "C++: osi3::MovingObject::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::MovingObject::*)() const) &osi3::MovingObject::id, "C++: osi3::MovingObject::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::MovingObject::*)()) &osi3::MovingObject::release_id, "C++: osi3::MovingObject::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_id, "C++: osi3::MovingObject::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::MovingObject::*)(class osi3::Identifier *)) &osi3::MovingObject::set_allocated_id, "C++: osi3::MovingObject::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::MovingObject::*)(class osi3::Identifier *)) &osi3::MovingObject::unsafe_arena_set_allocated_id, "C++: osi3::MovingObject::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::MovingObject::*)()) &osi3::MovingObject::unsafe_arena_release_id, "C++: osi3::MovingObject::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_base", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::has_base, "C++: osi3::MovingObject::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_base, "C++: osi3::MovingObject::clear_base() --> void");
		cl.def("base", (const class osi3::BaseMoving & (osi3::MovingObject::*)() const) &osi3::MovingObject::base, "C++: osi3::MovingObject::base() const --> const class osi3::BaseMoving &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseMoving * (osi3::MovingObject::*)()) &osi3::MovingObject::release_base, "C++: osi3::MovingObject::release_base() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseMoving * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_base, "C++: osi3::MovingObject::mutable_base() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::MovingObject::*)(class osi3::BaseMoving *)) &osi3::MovingObject::set_allocated_base, "C++: osi3::MovingObject::set_allocated_base(class osi3::BaseMoving *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::MovingObject::*)(class osi3::BaseMoving *)) &osi3::MovingObject::unsafe_arena_set_allocated_base, "C++: osi3::MovingObject::unsafe_arena_set_allocated_base(class osi3::BaseMoving *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseMoving * (osi3::MovingObject::*)()) &osi3::MovingObject::unsafe_arena_release_base, "C++: osi3::MovingObject::unsafe_arena_release_base() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("has_vehicle_attributes", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::has_vehicle_attributes, "C++: osi3::MovingObject::has_vehicle_attributes() const --> bool");
		cl.def("clear_vehicle_attributes", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_vehicle_attributes, "C++: osi3::MovingObject::clear_vehicle_attributes() --> void");
		cl.def("vehicle_attributes", (const class osi3::MovingObject_VehicleAttributes & (osi3::MovingObject::*)() const) &osi3::MovingObject::vehicle_attributes, "C++: osi3::MovingObject::vehicle_attributes() const --> const class osi3::MovingObject_VehicleAttributes &", pybind11::return_value_policy::automatic);
		cl.def("release_vehicle_attributes", (class osi3::MovingObject_VehicleAttributes * (osi3::MovingObject::*)()) &osi3::MovingObject::release_vehicle_attributes, "C++: osi3::MovingObject::release_vehicle_attributes() --> class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::reference);
		cl.def("mutable_vehicle_attributes", (class osi3::MovingObject_VehicleAttributes * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_vehicle_attributes, "C++: osi3::MovingObject::mutable_vehicle_attributes() --> class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_vehicle_attributes", (void (osi3::MovingObject::*)(class osi3::MovingObject_VehicleAttributes *)) &osi3::MovingObject::set_allocated_vehicle_attributes, "C++: osi3::MovingObject::set_allocated_vehicle_attributes(class osi3::MovingObject_VehicleAttributes *) --> void", pybind11::arg("vehicle_attributes"));
		cl.def("unsafe_arena_set_allocated_vehicle_attributes", (void (osi3::MovingObject::*)(class osi3::MovingObject_VehicleAttributes *)) &osi3::MovingObject::unsafe_arena_set_allocated_vehicle_attributes, "C++: osi3::MovingObject::unsafe_arena_set_allocated_vehicle_attributes(class osi3::MovingObject_VehicleAttributes *) --> void", pybind11::arg("vehicle_attributes"));
		cl.def("unsafe_arena_release_vehicle_attributes", (class osi3::MovingObject_VehicleAttributes * (osi3::MovingObject::*)()) &osi3::MovingObject::unsafe_arena_release_vehicle_attributes, "C++: osi3::MovingObject::unsafe_arena_release_vehicle_attributes() --> class osi3::MovingObject_VehicleAttributes *", pybind11::return_value_policy::reference);
		cl.def("has_vehicle_classification", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::has_vehicle_classification, "C++: osi3::MovingObject::has_vehicle_classification() const --> bool");
		cl.def("clear_vehicle_classification", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_vehicle_classification, "C++: osi3::MovingObject::clear_vehicle_classification() --> void");
		cl.def("vehicle_classification", (const class osi3::MovingObject_VehicleClassification & (osi3::MovingObject::*)() const) &osi3::MovingObject::vehicle_classification, "C++: osi3::MovingObject::vehicle_classification() const --> const class osi3::MovingObject_VehicleClassification &", pybind11::return_value_policy::automatic);
		cl.def("release_vehicle_classification", (class osi3::MovingObject_VehicleClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::release_vehicle_classification, "C++: osi3::MovingObject::release_vehicle_classification() --> class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::reference);
		cl.def("mutable_vehicle_classification", (class osi3::MovingObject_VehicleClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_vehicle_classification, "C++: osi3::MovingObject::mutable_vehicle_classification() --> class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_vehicle_classification", (void (osi3::MovingObject::*)(class osi3::MovingObject_VehicleClassification *)) &osi3::MovingObject::set_allocated_vehicle_classification, "C++: osi3::MovingObject::set_allocated_vehicle_classification(class osi3::MovingObject_VehicleClassification *) --> void", pybind11::arg("vehicle_classification"));
		cl.def("unsafe_arena_set_allocated_vehicle_classification", (void (osi3::MovingObject::*)(class osi3::MovingObject_VehicleClassification *)) &osi3::MovingObject::unsafe_arena_set_allocated_vehicle_classification, "C++: osi3::MovingObject::unsafe_arena_set_allocated_vehicle_classification(class osi3::MovingObject_VehicleClassification *) --> void", pybind11::arg("vehicle_classification"));
		cl.def("unsafe_arena_release_vehicle_classification", (class osi3::MovingObject_VehicleClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::unsafe_arena_release_vehicle_classification, "C++: osi3::MovingObject::unsafe_arena_release_vehicle_classification() --> class osi3::MovingObject_VehicleClassification *", pybind11::return_value_policy::reference);
		cl.def("has_moving_object_classification", (bool (osi3::MovingObject::*)() const) &osi3::MovingObject::has_moving_object_classification, "C++: osi3::MovingObject::has_moving_object_classification() const --> bool");
		cl.def("clear_moving_object_classification", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_moving_object_classification, "C++: osi3::MovingObject::clear_moving_object_classification() --> void");
		cl.def("moving_object_classification", (const class osi3::MovingObject_MovingObjectClassification & (osi3::MovingObject::*)() const) &osi3::MovingObject::moving_object_classification, "C++: osi3::MovingObject::moving_object_classification() const --> const class osi3::MovingObject_MovingObjectClassification &", pybind11::return_value_policy::automatic);
		cl.def("release_moving_object_classification", (class osi3::MovingObject_MovingObjectClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::release_moving_object_classification, "C++: osi3::MovingObject::release_moving_object_classification() --> class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::reference);
		cl.def("mutable_moving_object_classification", (class osi3::MovingObject_MovingObjectClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::mutable_moving_object_classification, "C++: osi3::MovingObject::mutable_moving_object_classification() --> class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_moving_object_classification", (void (osi3::MovingObject::*)(class osi3::MovingObject_MovingObjectClassification *)) &osi3::MovingObject::set_allocated_moving_object_classification, "C++: osi3::MovingObject::set_allocated_moving_object_classification(class osi3::MovingObject_MovingObjectClassification *) --> void", pybind11::arg("moving_object_classification"));
		cl.def("unsafe_arena_set_allocated_moving_object_classification", (void (osi3::MovingObject::*)(class osi3::MovingObject_MovingObjectClassification *)) &osi3::MovingObject::unsafe_arena_set_allocated_moving_object_classification, "C++: osi3::MovingObject::unsafe_arena_set_allocated_moving_object_classification(class osi3::MovingObject_MovingObjectClassification *) --> void", pybind11::arg("moving_object_classification"));
		cl.def("unsafe_arena_release_moving_object_classification", (class osi3::MovingObject_MovingObjectClassification * (osi3::MovingObject::*)()) &osi3::MovingObject::unsafe_arena_release_moving_object_classification, "C++: osi3::MovingObject::unsafe_arena_release_moving_object_classification() --> class osi3::MovingObject_MovingObjectClassification *", pybind11::return_value_policy::reference);
		cl.def("clear_type", (void (osi3::MovingObject::*)()) &osi3::MovingObject::clear_type, "C++: osi3::MovingObject::clear_type() --> void");
		cl.def("type", (enum osi3::MovingObject_Type (osi3::MovingObject::*)() const) &osi3::MovingObject::type, "C++: osi3::MovingObject::type() const --> enum osi3::MovingObject_Type");
		cl.def("set_type", (void (osi3::MovingObject::*)(enum osi3::MovingObject_Type)) &osi3::MovingObject::set_type, "C++: osi3::MovingObject::set_type(enum osi3::MovingObject_Type) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_19.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_19(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B314_[osi3::DetectedItemHeader_MeasurementState] ";
	// osi3::DetectedItemHeader_MeasurementState file: line:87
	pybind11::enum_<osi3::DetectedItemHeader_MeasurementState>(M("osi3"), "DetectedItemHeader_MeasurementState", pybind11::arithmetic(), "")
		.value("DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_UNKNOWN", osi3::DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_UNKNOWN)
		.value("DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_OTHER", osi3::DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_OTHER)
		.value("DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_MEASURED", osi3::DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_MEASURED)
		.value("DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_PREDICTED", osi3::DetectedItemHeader_MeasurementState_MEASUREMENT_STATE_PREDICTED)
		.value("DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::DetectedItemHeader_MeasurementState_DetectedItemHeader_MeasurementState_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B315_[bool osi3::DetectedItemHeader_MeasurementState_IsValid(int)] ";
	std::cout << "B316_[const class google::protobuf::EnumDescriptor * osi3::DetectedItemHeader_MeasurementState_descriptor()] ";
	std::cout << "B317_[bool osi3::DetectedItemHeader_MeasurementState_Parse(const std::string &, enum osi3::DetectedItemHeader_MeasurementState *)] ";
	std::cout << "B318_[osi3::DetectedMovingObject_ReferencePoint] ";
	std::cout << "B319_[bool osi3::DetectedMovingObject_ReferencePoint_IsValid(int)] ";
	std::cout << "B320_[const class google::protobuf::EnumDescriptor * osi3::DetectedMovingObject_ReferencePoint_descriptor()] ";
	std::cout << "B321_[bool osi3::DetectedMovingObject_ReferencePoint_Parse(const std::string &, enum osi3::DetectedMovingObject_ReferencePoint *)] ";
	std::cout << "B322_[osi3::DetectedMovingObject_MovementState] ";
	std::cout << "B323_[bool osi3::DetectedMovingObject_MovementState_IsValid(int)] ";
	std::cout << "B324_[const class google::protobuf::EnumDescriptor * osi3::DetectedMovingObject_MovementState_descriptor()] ";
	std::cout << "B325_[bool osi3::DetectedMovingObject_MovementState_Parse(const std::string &, enum osi3::DetectedMovingObject_MovementState *)] ";
	std::cout << "B326_[osi3::DetectedItemHeader] ";
	{ // osi3::DetectedItemHeader file: line:178
		pybind11::class_<osi3::DetectedItemHeader, std::shared_ptr<osi3::DetectedItemHeader>, google::protobuf::Message> cl(M("osi3"), "DetectedItemHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::DetectedItemHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::DetectedItemHeader const &o){ return new osi3::DetectedItemHeader(o); } ) );
		cl.def("assign", (class osi3::DetectedItemHeader & (osi3::DetectedItemHeader::*)(const class osi3::DetectedItemHeader &)) &osi3::DetectedItemHeader::operator=, "C++: osi3::DetectedItemHeader::operator=(const class osi3::DetectedItemHeader &) --> class osi3::DetectedItemHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedItemHeader::descriptor, "C++: osi3::DetectedItemHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedItemHeader::GetDescriptor, "C++: osi3::DetectedItemHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::DetectedItemHeader::GetReflection, "C++: osi3::DetectedItemHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::DetectedItemHeader & (*)()) &osi3::DetectedItemHeader::default_instance, "C++: osi3::DetectedItemHeader::default_instance() --> const class osi3::DetectedItemHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::DetectedItemHeader * (*)()) &osi3::DetectedItemHeader::internal_default_instance, "C++: osi3::DetectedItemHeader::internal_default_instance() --> const class osi3::DetectedItemHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::DetectedItemHeader::*)(class osi3::DetectedItemHeader *)) &osi3::DetectedItemHeader::Swap, "C++: osi3::DetectedItemHeader::Swap(class osi3::DetectedItemHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::DetectedItemHeader::*)(class osi3::DetectedItemHeader *)) &osi3::DetectedItemHeader::UnsafeArenaSwap, "C++: osi3::DetectedItemHeader::UnsafeArenaSwap(class osi3::DetectedItemHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::DetectedItemHeader * (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::New, "C++: osi3::DetectedItemHeader::New() const --> class osi3::DetectedItemHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::DetectedItemHeader * (osi3::DetectedItemHeader::*)(class google::protobuf::Arena *) const) &osi3::DetectedItemHeader::New, "C++: osi3::DetectedItemHeader::New(class google::protobuf::Arena *) const --> class osi3::DetectedItemHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::DetectedItemHeader::*)(const class google::protobuf::Message &)) &osi3::DetectedItemHeader::CopyFrom, "C++: osi3::DetectedItemHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedItemHeader::*)(const class google::protobuf::Message &)) &osi3::DetectedItemHeader::MergeFrom, "C++: osi3::DetectedItemHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::DetectedItemHeader::*)(const class osi3::DetectedItemHeader &)) &osi3::DetectedItemHeader::CopyFrom, "C++: osi3::DetectedItemHeader::CopyFrom(const class osi3::DetectedItemHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedItemHeader::*)(const class osi3::DetectedItemHeader &)) &osi3::DetectedItemHeader::MergeFrom, "C++: osi3::DetectedItemHeader::MergeFrom(const class osi3::DetectedItemHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::Clear, "C++: osi3::DetectedItemHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::IsInitialized, "C++: osi3::DetectedItemHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::ByteSizeLong, "C++: osi3::DetectedItemHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::DetectedItemHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::DetectedItemHeader::_InternalParse, "C++: osi3::DetectedItemHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::DetectedItemHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::DetectedItemHeader::_InternalSerialize, "C++: osi3::DetectedItemHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::GetCachedSize, "C++: osi3::DetectedItemHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::GetMetadata, "C++: osi3::DetectedItemHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("MeasurementState_IsValid", (bool (*)(int)) &osi3::DetectedItemHeader::MeasurementState_IsValid, "C++: osi3::DetectedItemHeader::MeasurementState_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("MeasurementState_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::DetectedItemHeader::MeasurementState_descriptor, "C++: osi3::DetectedItemHeader::MeasurementState_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("MeasurementState_Parse", (bool (*)(const std::string &, enum osi3::DetectedItemHeader_MeasurementState *)) &osi3::DetectedItemHeader::MeasurementState_Parse, "C++: osi3::DetectedItemHeader::MeasurementState_Parse(const std::string &, enum osi3::DetectedItemHeader_MeasurementState *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("ground_truth_id_size", (int (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::ground_truth_id_size, "C++: osi3::DetectedItemHeader::ground_truth_id_size() const --> int");
		cl.def("clear_ground_truth_id", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_ground_truth_id, "C++: osi3::DetectedItemHeader::clear_ground_truth_id() --> void");
		cl.def("mutable_ground_truth_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)(int)) &osi3::DetectedItemHeader::mutable_ground_truth_id, "C++: osi3::DetectedItemHeader::mutable_ground_truth_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_ground_truth_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::mutable_ground_truth_id, "C++: osi3::DetectedItemHeader::mutable_ground_truth_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("ground_truth_id", (const class osi3::Identifier & (osi3::DetectedItemHeader::*)(int) const) &osi3::DetectedItemHeader::ground_truth_id, "C++: osi3::DetectedItemHeader::ground_truth_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_ground_truth_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::add_ground_truth_id, "C++: osi3::DetectedItemHeader::add_ground_truth_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("ground_truth_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::ground_truth_id, "C++: osi3::DetectedItemHeader::ground_truth_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("sensor_id_size", (int (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::sensor_id_size, "C++: osi3::DetectedItemHeader::sensor_id_size() const --> int");
		cl.def("clear_sensor_id", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_sensor_id, "C++: osi3::DetectedItemHeader::clear_sensor_id() --> void");
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)(int)) &osi3::DetectedItemHeader::mutable_sensor_id, "C++: osi3::DetectedItemHeader::mutable_sensor_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_sensor_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::mutable_sensor_id, "C++: osi3::DetectedItemHeader::mutable_sensor_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::DetectedItemHeader::*)(int) const) &osi3::DetectedItemHeader::sensor_id, "C++: osi3::DetectedItemHeader::sensor_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_sensor_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::add_sensor_id, "C++: osi3::DetectedItemHeader::add_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("sensor_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::sensor_id, "C++: osi3::DetectedItemHeader::sensor_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("has_tracking_id", (bool (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::has_tracking_id, "C++: osi3::DetectedItemHeader::has_tracking_id() const --> bool");
		cl.def("clear_tracking_id", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_tracking_id, "C++: osi3::DetectedItemHeader::clear_tracking_id() --> void");
		cl.def("tracking_id", (const class osi3::Identifier & (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::tracking_id, "C++: osi3::DetectedItemHeader::tracking_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_tracking_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::release_tracking_id, "C++: osi3::DetectedItemHeader::release_tracking_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_tracking_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::mutable_tracking_id, "C++: osi3::DetectedItemHeader::mutable_tracking_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_tracking_id", (void (osi3::DetectedItemHeader::*)(class osi3::Identifier *)) &osi3::DetectedItemHeader::set_allocated_tracking_id, "C++: osi3::DetectedItemHeader::set_allocated_tracking_id(class osi3::Identifier *) --> void", pybind11::arg("tracking_id"));
		cl.def("unsafe_arena_set_allocated_tracking_id", (void (osi3::DetectedItemHeader::*)(class osi3::Identifier *)) &osi3::DetectedItemHeader::unsafe_arena_set_allocated_tracking_id, "C++: osi3::DetectedItemHeader::unsafe_arena_set_allocated_tracking_id(class osi3::Identifier *) --> void", pybind11::arg("tracking_id"));
		cl.def("unsafe_arena_release_tracking_id", (class osi3::Identifier * (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::unsafe_arena_release_tracking_id, "C++: osi3::DetectedItemHeader::unsafe_arena_release_tracking_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("clear_existence_probability", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_existence_probability, "C++: osi3::DetectedItemHeader::clear_existence_probability() --> void");
		cl.def("existence_probability", (double (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::existence_probability, "C++: osi3::DetectedItemHeader::existence_probability() const --> double");
		cl.def("set_existence_probability", (void (osi3::DetectedItemHeader::*)(double)) &osi3::DetectedItemHeader::set_existence_probability, "C++: osi3::DetectedItemHeader::set_existence_probability(double) --> void", pybind11::arg("value"));
		cl.def("clear_age", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_age, "C++: osi3::DetectedItemHeader::clear_age() --> void");
		cl.def("age", (double (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::age, "C++: osi3::DetectedItemHeader::age() const --> double");
		cl.def("set_age", (void (osi3::DetectedItemHeader::*)(double)) &osi3::DetectedItemHeader::set_age, "C++: osi3::DetectedItemHeader::set_age(double) --> void", pybind11::arg("value"));
		cl.def("clear_measurement_state", (void (osi3::DetectedItemHeader::*)()) &osi3::DetectedItemHeader::clear_measurement_state, "C++: osi3::DetectedItemHeader::clear_measurement_state() --> void");
		cl.def("measurement_state", (enum osi3::DetectedItemHeader_MeasurementState (osi3::DetectedItemHeader::*)() const) &osi3::DetectedItemHeader::measurement_state, "C++: osi3::DetectedItemHeader::measurement_state() const --> enum osi3::DetectedItemHeader_MeasurementState");
		cl.def("set_measurement_state", (void (osi3::DetectedItemHeader::*)(enum osi3::DetectedItemHeader_MeasurementState)) &osi3::DetectedItemHeader::set_measurement_state, "C++: osi3::DetectedItemHeader::set_measurement_state(enum osi3::DetectedItemHeader_MeasurementState) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_20.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_20(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B327_[osi3::DetectedTrafficSign_DetectedMainSign_Geometry] ";
	// osi3::DetectedTrafficSign_DetectedMainSign_Geometry file: line:87
	pybind11::enum_<osi3::DetectedTrafficSign_DetectedMainSign_Geometry>(M("osi3"), "DetectedTrafficSign_DetectedMainSign_Geometry", pybind11::arithmetic(), "")
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_UNKNOWN", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_UNKNOWN)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OTHER", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OTHER)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_CIRCLE", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_CIRCLE)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_TOP", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_TOP)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_DOWN", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_TRIANGLE_DOWN)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_SQUARE", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_SQUARE)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_POLE", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_POLE)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_RECTANGLE", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_RECTANGLE)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_PLATE", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_PLATE)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_DIAMOND", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_DIAMOND)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_LEFT", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_LEFT)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_RIGHT", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_ARROW_RIGHT)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OCTAGON", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_GEOMETRY_OCTAGON)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::DetectedTrafficSign_DetectedMainSign_Geometry_DetectedTrafficSign_DetectedMainSign_Geometry_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B328_[bool osi3::DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(int)] ";
	std::cout << "B329_[const class google::protobuf::EnumDescriptor * osi3::DetectedTrafficSign_DetectedMainSign_Geometry_descriptor()] ";
	std::cout << "B330_[bool osi3::DetectedTrafficSign_DetectedMainSign_Geometry_Parse(const std::string &, enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry *)] ";
	std::cout << "B331_[osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign] ";
	{ // osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign file: line:125
		pybind11::class_<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign, std::shared_ptr<osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign>, google::protobuf::Message> cl(M("osi3"), "DetectedTrafficSign_DetectedMainSign_CandidateMainSign", "");
		cl.def( pybind11::init( [](){ return new osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign const &o){ return new osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign(o); } ) );
		cl.def("assign", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::operator=, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::operator=(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &) --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::descriptor, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetDescriptor, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetReflection, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance() --> const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::internal_default_instance, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::internal_default_instance() --> const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Swap, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Swap(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::UnsafeArenaSwap, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::UnsafeArenaSwap(class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New() const --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(class google::protobuf::Arena *) const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New(class google::protobuf::Arena *) const --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const class google::protobuf::Message &)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const class google::protobuf::Message &)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Clear, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::IsInitialized, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::ByteSizeLong, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::_InternalParse, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::_InternalSerialize, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetCachedSize, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetMetadata, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_classification", (bool (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::has_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_classification() --> void");
		cl.def("classification", (const class osi3::TrafficSign_MainSign_Classification & (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::classification() const --> const class osi3::TrafficSign_MainSign_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::release_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::release_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::mutable_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::mutable_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_allocated_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_allocated_classification(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(class osi3::TrafficSign_MainSign_Classification *)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::unsafe_arena_set_allocated_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::unsafe_arena_set_allocated_classification(class osi3::TrafficSign_MainSign_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::TrafficSign_MainSign_Classification * (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::unsafe_arena_release_classification, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::unsafe_arena_release_classification() --> class osi3::TrafficSign_MainSign_Classification *", pybind11::return_value_policy::reference);
		cl.def("clear_probability", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_probability, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_probability() --> void");
		cl.def("probability", (double (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::probability, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::probability() const --> double");
		cl.def("set_probability", (void (osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::*)(double)) &osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_probability, "C++: osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_probability(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_21.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_21(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B332_[osi3::DetectedTrafficSign_DetectedMainSign] ";
	{ // osi3::DetectedTrafficSign_DetectedMainSign file: line:282
		pybind11::class_<osi3::DetectedTrafficSign_DetectedMainSign, std::shared_ptr<osi3::DetectedTrafficSign_DetectedMainSign>, google::protobuf::Message> cl(M("osi3"), "DetectedTrafficSign_DetectedMainSign", "");
		cl.def( pybind11::init( [](){ return new osi3::DetectedTrafficSign_DetectedMainSign(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::DetectedTrafficSign_DetectedMainSign const &o){ return new osi3::DetectedTrafficSign_DetectedMainSign(o); } ) );
		cl.def("assign", (class osi3::DetectedTrafficSign_DetectedMainSign & (osi3::DetectedTrafficSign_DetectedMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign::operator=, "C++: osi3::DetectedTrafficSign_DetectedMainSign::operator=(const class osi3::DetectedTrafficSign_DetectedMainSign &) --> class osi3::DetectedTrafficSign_DetectedMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::descriptor, "C++: osi3::DetectedTrafficSign_DetectedMainSign::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::GetDescriptor, "C++: osi3::DetectedTrafficSign_DetectedMainSign::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::GetReflection, "C++: osi3::DetectedTrafficSign_DetectedMainSign::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::DetectedTrafficSign_DetectedMainSign & (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::default_instance, "C++: osi3::DetectedTrafficSign_DetectedMainSign::default_instance() --> const class osi3::DetectedTrafficSign_DetectedMainSign &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::DetectedTrafficSign_DetectedMainSign * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::internal_default_instance, "C++: osi3::DetectedTrafficSign_DetectedMainSign::internal_default_instance() --> const class osi3::DetectedTrafficSign_DetectedMainSign *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::DetectedTrafficSign_DetectedMainSign *)) &osi3::DetectedTrafficSign_DetectedMainSign::Swap, "C++: osi3::DetectedTrafficSign_DetectedMainSign::Swap(class osi3::DetectedTrafficSign_DetectedMainSign *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::DetectedTrafficSign_DetectedMainSign *)) &osi3::DetectedTrafficSign_DetectedMainSign::UnsafeArenaSwap, "C++: osi3::DetectedTrafficSign_DetectedMainSign::UnsafeArenaSwap(class osi3::DetectedTrafficSign_DetectedMainSign *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::DetectedTrafficSign_DetectedMainSign * (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::New, "C++: osi3::DetectedTrafficSign_DetectedMainSign::New() const --> class osi3::DetectedTrafficSign_DetectedMainSign *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::DetectedTrafficSign_DetectedMainSign * (osi3::DetectedTrafficSign_DetectedMainSign::*)(class google::protobuf::Arena *) const) &osi3::DetectedTrafficSign_DetectedMainSign::New, "C++: osi3::DetectedTrafficSign_DetectedMainSign::New(class google::protobuf::Arena *) const --> class osi3::DetectedTrafficSign_DetectedMainSign *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(const class google::protobuf::Message &)) &osi3::DetectedTrafficSign_DetectedMainSign::CopyFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(const class google::protobuf::Message &)) &osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign::CopyFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign::CopyFrom(const class osi3::DetectedTrafficSign_DetectedMainSign &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(const class osi3::DetectedTrafficSign_DetectedMainSign &)) &osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom, "C++: osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom(const class osi3::DetectedTrafficSign_DetectedMainSign &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::Clear, "C++: osi3::DetectedTrafficSign_DetectedMainSign::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::IsInitialized, "C++: osi3::DetectedTrafficSign_DetectedMainSign::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::ByteSizeLong, "C++: osi3::DetectedTrafficSign_DetectedMainSign::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::DetectedTrafficSign_DetectedMainSign::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::DetectedTrafficSign_DetectedMainSign::_InternalParse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::DetectedTrafficSign_DetectedMainSign::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::DetectedTrafficSign_DetectedMainSign::_InternalSerialize, "C++: osi3::DetectedTrafficSign_DetectedMainSign::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::GetCachedSize, "C++: osi3::DetectedTrafficSign_DetectedMainSign::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::GetMetadata, "C++: osi3::DetectedTrafficSign_DetectedMainSign::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Geometry_IsValid", (bool (*)(int)) &osi3::DetectedTrafficSign_DetectedMainSign::Geometry_IsValid, "C++: osi3::DetectedTrafficSign_DetectedMainSign::Geometry_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Geometry_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::DetectedTrafficSign_DetectedMainSign::Geometry_descriptor, "C++: osi3::DetectedTrafficSign_DetectedMainSign::Geometry_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Geometry_Parse", (bool (*)(const std::string &, enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry *)) &osi3::DetectedTrafficSign_DetectedMainSign::Geometry_Parse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::Geometry_Parse(const std::string &, enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("candidate_size", (int (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::candidate_size, "C++: osi3::DetectedTrafficSign_DetectedMainSign::candidate_size() const --> int");
		cl.def("clear_candidate", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::clear_candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::clear_candidate() --> void");
		cl.def("mutable_candidate", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (osi3::DetectedTrafficSign_DetectedMainSign::*)(int)) &osi3::DetectedTrafficSign_DetectedMainSign::mutable_candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::mutable_candidate(int) --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_candidate", (class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::mutable_candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::mutable_candidate() --> class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> *", pybind11::return_value_policy::reference);
		cl.def("candidate", (const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign & (osi3::DetectedTrafficSign_DetectedMainSign::*)(int) const) &osi3::DetectedTrafficSign_DetectedMainSign::candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::candidate(int) const --> const class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_candidate", (class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::add_candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::add_candidate() --> class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign *", pybind11::return_value_policy::reference);
		cl.def("candidate", (const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> & (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::candidate, "C++: osi3::DetectedTrafficSign_DetectedMainSign::candidate() const --> const class google::protobuf::RepeatedPtrField<class osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign> &", pybind11::return_value_policy::automatic);
		cl.def("has_base", (bool (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::has_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::clear_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::release_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::mutable_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::BaseStationary *)) &osi3::DetectedTrafficSign_DetectedMainSign::set_allocated_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::BaseStationary *)) &osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_set_allocated_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_release_base, "C++: osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_base_rmse", (bool (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::has_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::has_base_rmse() const --> bool");
		cl.def("clear_base_rmse", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::clear_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::clear_base_rmse() --> void");
		cl.def("base_rmse", (const class osi3::BaseStationary & (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::base_rmse() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base_rmse", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::release_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::release_base_rmse() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base_rmse", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::mutable_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::mutable_base_rmse() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base_rmse", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::BaseStationary *)) &osi3::DetectedTrafficSign_DetectedMainSign::set_allocated_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::set_allocated_base_rmse(class osi3::BaseStationary *) --> void", pybind11::arg("base_rmse"));
		cl.def("unsafe_arena_set_allocated_base_rmse", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(class osi3::BaseStationary *)) &osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_set_allocated_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_set_allocated_base_rmse(class osi3::BaseStationary *) --> void", pybind11::arg("base_rmse"));
		cl.def("unsafe_arena_release_base_rmse", (class osi3::BaseStationary * (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_release_base_rmse, "C++: osi3::DetectedTrafficSign_DetectedMainSign::unsafe_arena_release_base_rmse() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("clear_geometry", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)()) &osi3::DetectedTrafficSign_DetectedMainSign::clear_geometry, "C++: osi3::DetectedTrafficSign_DetectedMainSign::clear_geometry() --> void");
		cl.def("geometry", (enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry (osi3::DetectedTrafficSign_DetectedMainSign::*)() const) &osi3::DetectedTrafficSign_DetectedMainSign::geometry, "C++: osi3::DetectedTrafficSign_DetectedMainSign::geometry() const --> enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry");
		cl.def("set_geometry", (void (osi3::DetectedTrafficSign_DetectedMainSign::*)(enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry)) &osi3::DetectedTrafficSign_DetectedMainSign::set_geometry, "C++: osi3::DetectedTrafficSign_DetectedMainSign::set_geometry(enum osi3::DetectedTrafficSign_DetectedMainSign_Geometry) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_22.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_22(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B333_[osi3::TrafficLight_Classification_Color] ";
	// osi3::TrafficLight_Classification_Color file: line:73
	pybind11::enum_<osi3::TrafficLight_Classification_Color>(M("osi3"), "TrafficLight_Classification_Color", pybind11::arithmetic(), "")
		.value("TrafficLight_Classification_Color_COLOR_UNKNOWN", osi3::TrafficLight_Classification_Color_COLOR_UNKNOWN)
		.value("TrafficLight_Classification_Color_COLOR_OTHER", osi3::TrafficLight_Classification_Color_COLOR_OTHER)
		.value("TrafficLight_Classification_Color_COLOR_RED", osi3::TrafficLight_Classification_Color_COLOR_RED)
		.value("TrafficLight_Classification_Color_COLOR_YELLOW", osi3::TrafficLight_Classification_Color_COLOR_YELLOW)
		.value("TrafficLight_Classification_Color_COLOR_GREEN", osi3::TrafficLight_Classification_Color_COLOR_GREEN)
		.value("TrafficLight_Classification_Color_COLOR_BLUE", osi3::TrafficLight_Classification_Color_COLOR_BLUE)
		.value("TrafficLight_Classification_Color_COLOR_WHITE", osi3::TrafficLight_Classification_Color_COLOR_WHITE)
		.value("TrafficLight_Classification_Color_TrafficLight_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Color_TrafficLight_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficLight_Classification_Color_TrafficLight_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Color_TrafficLight_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B334_[bool osi3::TrafficLight_Classification_Color_IsValid(int)] ";
	std::cout << "B335_[const class google::protobuf::EnumDescriptor * osi3::TrafficLight_Classification_Color_descriptor()] ";
	std::cout << "B336_[bool osi3::TrafficLight_Classification_Color_Parse(const std::string &, enum osi3::TrafficLight_Classification_Color *)] ";
	std::cout << "B337_[osi3::TrafficLight_Classification_Icon] ";
	// osi3::TrafficLight_Classification_Icon file: line:103
	pybind11::enum_<osi3::TrafficLight_Classification_Icon>(M("osi3"), "TrafficLight_Classification_Icon", pybind11::arithmetic(), "")
		.value("TrafficLight_Classification_Icon_ICON_UNKNOWN", osi3::TrafficLight_Classification_Icon_ICON_UNKNOWN)
		.value("TrafficLight_Classification_Icon_ICON_OTHER", osi3::TrafficLight_Classification_Icon_ICON_OTHER)
		.value("TrafficLight_Classification_Icon_ICON_NONE", osi3::TrafficLight_Classification_Icon_ICON_NONE)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD", osi3::TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_LEFT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_LEFT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_DIAG_LEFT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_DIAG_LEFT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD_LEFT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD_LEFT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_RIGHT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_RIGHT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_DIAG_RIGHT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_DIAG_RIGHT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD_RIGHT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_STRAIGHT_AHEAD_RIGHT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_LEFT_RIGHT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_LEFT_RIGHT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_DOWN", osi3::TrafficLight_Classification_Icon_ICON_ARROW_DOWN)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_DOWN_LEFT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_DOWN_LEFT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_DOWN_RIGHT", osi3::TrafficLight_Classification_Icon_ICON_ARROW_DOWN_RIGHT)
		.value("TrafficLight_Classification_Icon_ICON_ARROW_CROSS", osi3::TrafficLight_Classification_Icon_ICON_ARROW_CROSS)
		.value("TrafficLight_Classification_Icon_ICON_PEDESTRIAN", osi3::TrafficLight_Classification_Icon_ICON_PEDESTRIAN)
		.value("TrafficLight_Classification_Icon_ICON_WALK", osi3::TrafficLight_Classification_Icon_ICON_WALK)
		.value("TrafficLight_Classification_Icon_ICON_DONT_WALK", osi3::TrafficLight_Classification_Icon_ICON_DONT_WALK)
		.value("TrafficLight_Classification_Icon_ICON_BICYCLE", osi3::TrafficLight_Classification_Icon_ICON_BICYCLE)
		.value("TrafficLight_Classification_Icon_ICON_PEDESTRIAN_AND_BICYCLE", osi3::TrafficLight_Classification_Icon_ICON_PEDESTRIAN_AND_BICYCLE)
		.value("TrafficLight_Classification_Icon_ICON_COUNTDOWN_SECONDS", osi3::TrafficLight_Classification_Icon_ICON_COUNTDOWN_SECONDS)
		.value("TrafficLight_Classification_Icon_ICON_COUNTDOWN_PERCENT", osi3::TrafficLight_Classification_Icon_ICON_COUNTDOWN_PERCENT)
		.value("TrafficLight_Classification_Icon_ICON_TRAM", osi3::TrafficLight_Classification_Icon_ICON_TRAM)
		.value("TrafficLight_Classification_Icon_ICON_BUS", osi3::TrafficLight_Classification_Icon_ICON_BUS)
		.value("TrafficLight_Classification_Icon_ICON_BUS_AND_TRAM", osi3::TrafficLight_Classification_Icon_ICON_BUS_AND_TRAM)
		.value("TrafficLight_Classification_Icon_TrafficLight_Classification_Icon_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Icon_TrafficLight_Classification_Icon_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficLight_Classification_Icon_TrafficLight_Classification_Icon_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Icon_TrafficLight_Classification_Icon_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B338_[bool osi3::TrafficLight_Classification_Icon_IsValid(int)] ";
	std::cout << "B339_[const class google::protobuf::EnumDescriptor * osi3::TrafficLight_Classification_Icon_descriptor()] ";
	std::cout << "B340_[bool osi3::TrafficLight_Classification_Icon_Parse(const std::string &, enum osi3::TrafficLight_Classification_Icon *)] ";
	std::cout << "B341_[osi3::TrafficLight_Classification_Mode] ";
	// osi3::TrafficLight_Classification_Mode file: line:151
	pybind11::enum_<osi3::TrafficLight_Classification_Mode>(M("osi3"), "TrafficLight_Classification_Mode", pybind11::arithmetic(), "")
		.value("TrafficLight_Classification_Mode_MODE_UNKNOWN", osi3::TrafficLight_Classification_Mode_MODE_UNKNOWN)
		.value("TrafficLight_Classification_Mode_MODE_OTHER", osi3::TrafficLight_Classification_Mode_MODE_OTHER)
		.value("TrafficLight_Classification_Mode_MODE_OFF", osi3::TrafficLight_Classification_Mode_MODE_OFF)
		.value("TrafficLight_Classification_Mode_MODE_CONSTANT", osi3::TrafficLight_Classification_Mode_MODE_CONSTANT)
		.value("TrafficLight_Classification_Mode_MODE_FLASHING", osi3::TrafficLight_Classification_Mode_MODE_FLASHING)
		.value("TrafficLight_Classification_Mode_MODE_COUNTING", osi3::TrafficLight_Classification_Mode_MODE_COUNTING)
		.value("TrafficLight_Classification_Mode_TrafficLight_Classification_Mode_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Mode_TrafficLight_Classification_Mode_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("TrafficLight_Classification_Mode_TrafficLight_Classification_Mode_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::TrafficLight_Classification_Mode_TrafficLight_Classification_Mode_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B342_[bool osi3::TrafficLight_Classification_Mode_IsValid(int)] ";
	std::cout << "B343_[const class google::protobuf::EnumDescriptor * osi3::TrafficLight_Classification_Mode_descriptor()] ";
	std::cout << "B344_[bool osi3::TrafficLight_Classification_Mode_Parse(const std::string &, enum osi3::TrafficLight_Classification_Mode *)] ";
	std::cout << "B345_[osi3::TrafficLight_Classification] ";
	{ // osi3::TrafficLight_Classification file: line:182
		pybind11::class_<osi3::TrafficLight_Classification, std::shared_ptr<osi3::TrafficLight_Classification>, google::protobuf::Message> cl(M("osi3"), "TrafficLight_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficLight_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficLight_Classification const &o){ return new osi3::TrafficLight_Classification(o); } ) );
		cl.def("assign", (class osi3::TrafficLight_Classification & (osi3::TrafficLight_Classification::*)(const class osi3::TrafficLight_Classification &)) &osi3::TrafficLight_Classification::operator=, "C++: osi3::TrafficLight_Classification::operator=(const class osi3::TrafficLight_Classification &) --> class osi3::TrafficLight_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficLight_Classification::descriptor, "C++: osi3::TrafficLight_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficLight_Classification::GetDescriptor, "C++: osi3::TrafficLight_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficLight_Classification::GetReflection, "C++: osi3::TrafficLight_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficLight_Classification & (*)()) &osi3::TrafficLight_Classification::default_instance, "C++: osi3::TrafficLight_Classification::default_instance() --> const class osi3::TrafficLight_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficLight_Classification * (*)()) &osi3::TrafficLight_Classification::internal_default_instance, "C++: osi3::TrafficLight_Classification::internal_default_instance() --> const class osi3::TrafficLight_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficLight_Classification::*)(class osi3::TrafficLight_Classification *)) &osi3::TrafficLight_Classification::Swap, "C++: osi3::TrafficLight_Classification::Swap(class osi3::TrafficLight_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficLight_Classification::*)(class osi3::TrafficLight_Classification *)) &osi3::TrafficLight_Classification::UnsafeArenaSwap, "C++: osi3::TrafficLight_Classification::UnsafeArenaSwap(class osi3::TrafficLight_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficLight_Classification * (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::New, "C++: osi3::TrafficLight_Classification::New() const --> class osi3::TrafficLight_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficLight_Classification * (osi3::TrafficLight_Classification::*)(class google::protobuf::Arena *) const) &osi3::TrafficLight_Classification::New, "C++: osi3::TrafficLight_Classification::New(class google::protobuf::Arena *) const --> class osi3::TrafficLight_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficLight_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficLight_Classification::CopyFrom, "C++: osi3::TrafficLight_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficLight_Classification::*)(const class google::protobuf::Message &)) &osi3::TrafficLight_Classification::MergeFrom, "C++: osi3::TrafficLight_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficLight_Classification::*)(const class osi3::TrafficLight_Classification &)) &osi3::TrafficLight_Classification::CopyFrom, "C++: osi3::TrafficLight_Classification::CopyFrom(const class osi3::TrafficLight_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficLight_Classification::*)(const class osi3::TrafficLight_Classification &)) &osi3::TrafficLight_Classification::MergeFrom, "C++: osi3::TrafficLight_Classification::MergeFrom(const class osi3::TrafficLight_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::Clear, "C++: osi3::TrafficLight_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::IsInitialized, "C++: osi3::TrafficLight_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::ByteSizeLong, "C++: osi3::TrafficLight_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficLight_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficLight_Classification::_InternalParse, "C++: osi3::TrafficLight_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficLight_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficLight_Classification::_InternalSerialize, "C++: osi3::TrafficLight_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::GetCachedSize, "C++: osi3::TrafficLight_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::GetMetadata, "C++: osi3::TrafficLight_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Color_IsValid", (bool (*)(int)) &osi3::TrafficLight_Classification::Color_IsValid, "C++: osi3::TrafficLight_Classification::Color_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Color_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficLight_Classification::Color_descriptor, "C++: osi3::TrafficLight_Classification::Color_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Color_Parse", (bool (*)(const std::string &, enum osi3::TrafficLight_Classification_Color *)) &osi3::TrafficLight_Classification::Color_Parse, "C++: osi3::TrafficLight_Classification::Color_Parse(const std::string &, enum osi3::TrafficLight_Classification_Color *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Icon_IsValid", (bool (*)(int)) &osi3::TrafficLight_Classification::Icon_IsValid, "C++: osi3::TrafficLight_Classification::Icon_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Icon_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficLight_Classification::Icon_descriptor, "C++: osi3::TrafficLight_Classification::Icon_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Icon_Parse", (bool (*)(const std::string &, enum osi3::TrafficLight_Classification_Icon *)) &osi3::TrafficLight_Classification::Icon_Parse, "C++: osi3::TrafficLight_Classification::Icon_Parse(const std::string &, enum osi3::TrafficLight_Classification_Icon *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Mode_IsValid", (bool (*)(int)) &osi3::TrafficLight_Classification::Mode_IsValid, "C++: osi3::TrafficLight_Classification::Mode_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Mode_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::TrafficLight_Classification::Mode_descriptor, "C++: osi3::TrafficLight_Classification::Mode_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Mode_Parse", (bool (*)(const std::string &, enum osi3::TrafficLight_Classification_Mode *)) &osi3::TrafficLight_Classification::Mode_Parse, "C++: osi3::TrafficLight_Classification::Mode_Parse(const std::string &, enum osi3::TrafficLight_Classification_Mode *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("assigned_lane_id_size", (int (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::assigned_lane_id_size, "C++: osi3::TrafficLight_Classification::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_assigned_lane_id, "C++: osi3::TrafficLight_Classification::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficLight_Classification::*)(int)) &osi3::TrafficLight_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficLight_Classification::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::mutable_assigned_lane_id, "C++: osi3::TrafficLight_Classification::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::TrafficLight_Classification::*)(int) const) &osi3::TrafficLight_Classification::assigned_lane_id, "C++: osi3::TrafficLight_Classification::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::add_assigned_lane_id, "C++: osi3::TrafficLight_Classification::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::assigned_lane_id, "C++: osi3::TrafficLight_Classification::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("clear_color", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_color, "C++: osi3::TrafficLight_Classification::clear_color() --> void");
		cl.def("color", (enum osi3::TrafficLight_Classification_Color (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::color, "C++: osi3::TrafficLight_Classification::color() const --> enum osi3::TrafficLight_Classification_Color");
		cl.def("set_color", (void (osi3::TrafficLight_Classification::*)(enum osi3::TrafficLight_Classification_Color)) &osi3::TrafficLight_Classification::set_color, "C++: osi3::TrafficLight_Classification::set_color(enum osi3::TrafficLight_Classification_Color) --> void", pybind11::arg("value"));
		cl.def("clear_icon", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_icon, "C++: osi3::TrafficLight_Classification::clear_icon() --> void");
		cl.def("icon", (enum osi3::TrafficLight_Classification_Icon (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::icon, "C++: osi3::TrafficLight_Classification::icon() const --> enum osi3::TrafficLight_Classification_Icon");
		cl.def("set_icon", (void (osi3::TrafficLight_Classification::*)(enum osi3::TrafficLight_Classification_Icon)) &osi3::TrafficLight_Classification::set_icon, "C++: osi3::TrafficLight_Classification::set_icon(enum osi3::TrafficLight_Classification_Icon) --> void", pybind11::arg("value"));
		cl.def("clear_counter", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_counter, "C++: osi3::TrafficLight_Classification::clear_counter() --> void");
		cl.def("counter", (double (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::counter, "C++: osi3::TrafficLight_Classification::counter() const --> double");
		cl.def("set_counter", (void (osi3::TrafficLight_Classification::*)(double)) &osi3::TrafficLight_Classification::set_counter, "C++: osi3::TrafficLight_Classification::set_counter(double) --> void", pybind11::arg("value"));
		cl.def("clear_mode", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_mode, "C++: osi3::TrafficLight_Classification::clear_mode() --> void");
		cl.def("mode", (enum osi3::TrafficLight_Classification_Mode (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::mode, "C++: osi3::TrafficLight_Classification::mode() const --> enum osi3::TrafficLight_Classification_Mode");
		cl.def("set_mode", (void (osi3::TrafficLight_Classification::*)(enum osi3::TrafficLight_Classification_Mode)) &osi3::TrafficLight_Classification::set_mode, "C++: osi3::TrafficLight_Classification::set_mode(enum osi3::TrafficLight_Classification_Mode) --> void", pybind11::arg("value"));
		cl.def("clear_is_out_of_service", (void (osi3::TrafficLight_Classification::*)()) &osi3::TrafficLight_Classification::clear_is_out_of_service, "C++: osi3::TrafficLight_Classification::clear_is_out_of_service() --> void");
		cl.def("is_out_of_service", (bool (osi3::TrafficLight_Classification::*)() const) &osi3::TrafficLight_Classification::is_out_of_service, "C++: osi3::TrafficLight_Classification::is_out_of_service() const --> bool");
		cl.def("set_is_out_of_service", (void (osi3::TrafficLight_Classification::*)(bool)) &osi3::TrafficLight_Classification::set_is_out_of_service, "C++: osi3::TrafficLight_Classification::set_is_out_of_service(bool) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_23.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_23(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B346_[osi3::TrafficLight] ";
	{ // osi3::TrafficLight file: line:537
		pybind11::class_<osi3::TrafficLight, std::shared_ptr<osi3::TrafficLight>, google::protobuf::Message> cl(M("osi3"), "TrafficLight", "");
		cl.def( pybind11::init( [](){ return new osi3::TrafficLight(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::TrafficLight const &o){ return new osi3::TrafficLight(o); } ) );
		cl.def("assign", (class osi3::TrafficLight & (osi3::TrafficLight::*)(const class osi3::TrafficLight &)) &osi3::TrafficLight::operator=, "C++: osi3::TrafficLight::operator=(const class osi3::TrafficLight &) --> class osi3::TrafficLight &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficLight::descriptor, "C++: osi3::TrafficLight::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::TrafficLight::GetDescriptor, "C++: osi3::TrafficLight::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::TrafficLight::GetReflection, "C++: osi3::TrafficLight::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::TrafficLight & (*)()) &osi3::TrafficLight::default_instance, "C++: osi3::TrafficLight::default_instance() --> const class osi3::TrafficLight &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::TrafficLight * (*)()) &osi3::TrafficLight::internal_default_instance, "C++: osi3::TrafficLight::internal_default_instance() --> const class osi3::TrafficLight *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::TrafficLight::*)(class osi3::TrafficLight *)) &osi3::TrafficLight::Swap, "C++: osi3::TrafficLight::Swap(class osi3::TrafficLight *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::TrafficLight::*)(class osi3::TrafficLight *)) &osi3::TrafficLight::UnsafeArenaSwap, "C++: osi3::TrafficLight::UnsafeArenaSwap(class osi3::TrafficLight *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::TrafficLight * (osi3::TrafficLight::*)() const) &osi3::TrafficLight::New, "C++: osi3::TrafficLight::New() const --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::TrafficLight * (osi3::TrafficLight::*)(class google::protobuf::Arena *) const) &osi3::TrafficLight::New, "C++: osi3::TrafficLight::New(class google::protobuf::Arena *) const --> class osi3::TrafficLight *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::TrafficLight::*)(const class google::protobuf::Message &)) &osi3::TrafficLight::CopyFrom, "C++: osi3::TrafficLight::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficLight::*)(const class google::protobuf::Message &)) &osi3::TrafficLight::MergeFrom, "C++: osi3::TrafficLight::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::TrafficLight::*)(const class osi3::TrafficLight &)) &osi3::TrafficLight::CopyFrom, "C++: osi3::TrafficLight::CopyFrom(const class osi3::TrafficLight &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::TrafficLight::*)(const class osi3::TrafficLight &)) &osi3::TrafficLight::MergeFrom, "C++: osi3::TrafficLight::MergeFrom(const class osi3::TrafficLight &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::TrafficLight::*)()) &osi3::TrafficLight::Clear, "C++: osi3::TrafficLight::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::TrafficLight::*)() const) &osi3::TrafficLight::IsInitialized, "C++: osi3::TrafficLight::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::TrafficLight::*)() const) &osi3::TrafficLight::ByteSizeLong, "C++: osi3::TrafficLight::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::TrafficLight::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::TrafficLight::_InternalParse, "C++: osi3::TrafficLight::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::TrafficLight::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::TrafficLight::_InternalSerialize, "C++: osi3::TrafficLight::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::TrafficLight::*)() const) &osi3::TrafficLight::GetCachedSize, "C++: osi3::TrafficLight::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::TrafficLight::*)() const) &osi3::TrafficLight::GetMetadata, "C++: osi3::TrafficLight::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_model_reference", (void (osi3::TrafficLight::*)()) &osi3::TrafficLight::clear_model_reference, "C++: osi3::TrafficLight::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::TrafficLight::*)(const char *)) &osi3::TrafficLight::set_model_reference, "C++: osi3::TrafficLight::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::TrafficLight::*)(const char *, unsigned long)) &osi3::TrafficLight::set_model_reference, "C++: osi3::TrafficLight::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_id", (bool (osi3::TrafficLight::*)() const) &osi3::TrafficLight::has_id, "C++: osi3::TrafficLight::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::TrafficLight::*)()) &osi3::TrafficLight::clear_id, "C++: osi3::TrafficLight::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::TrafficLight::*)() const) &osi3::TrafficLight::id, "C++: osi3::TrafficLight::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::TrafficLight::*)()) &osi3::TrafficLight::release_id, "C++: osi3::TrafficLight::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::TrafficLight::*)()) &osi3::TrafficLight::mutable_id, "C++: osi3::TrafficLight::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::TrafficLight::*)(class osi3::Identifier *)) &osi3::TrafficLight::set_allocated_id, "C++: osi3::TrafficLight::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::TrafficLight::*)(class osi3::Identifier *)) &osi3::TrafficLight::unsafe_arena_set_allocated_id, "C++: osi3::TrafficLight::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::TrafficLight::*)()) &osi3::TrafficLight::unsafe_arena_release_id, "C++: osi3::TrafficLight::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_base", (bool (osi3::TrafficLight::*)() const) &osi3::TrafficLight::has_base, "C++: osi3::TrafficLight::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::TrafficLight::*)()) &osi3::TrafficLight::clear_base, "C++: osi3::TrafficLight::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::TrafficLight::*)() const) &osi3::TrafficLight::base, "C++: osi3::TrafficLight::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::TrafficLight::*)()) &osi3::TrafficLight::release_base, "C++: osi3::TrafficLight::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::TrafficLight::*)()) &osi3::TrafficLight::mutable_base, "C++: osi3::TrafficLight::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::TrafficLight::*)(class osi3::BaseStationary *)) &osi3::TrafficLight::set_allocated_base, "C++: osi3::TrafficLight::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::TrafficLight::*)(class osi3::BaseStationary *)) &osi3::TrafficLight::unsafe_arena_set_allocated_base, "C++: osi3::TrafficLight::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::TrafficLight::*)()) &osi3::TrafficLight::unsafe_arena_release_base, "C++: osi3::TrafficLight::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::TrafficLight::*)() const) &osi3::TrafficLight::has_classification, "C++: osi3::TrafficLight::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::TrafficLight::*)()) &osi3::TrafficLight::clear_classification, "C++: osi3::TrafficLight::clear_classification() --> void");
		cl.def("classification", (const class osi3::TrafficLight_Classification & (osi3::TrafficLight::*)() const) &osi3::TrafficLight::classification, "C++: osi3::TrafficLight::classification() const --> const class osi3::TrafficLight_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::TrafficLight_Classification * (osi3::TrafficLight::*)()) &osi3::TrafficLight::release_classification, "C++: osi3::TrafficLight::release_classification() --> class osi3::TrafficLight_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::TrafficLight_Classification * (osi3::TrafficLight::*)()) &osi3::TrafficLight::mutable_classification, "C++: osi3::TrafficLight::mutable_classification() --> class osi3::TrafficLight_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::TrafficLight::*)(class osi3::TrafficLight_Classification *)) &osi3::TrafficLight::set_allocated_classification, "C++: osi3::TrafficLight::set_allocated_classification(class osi3::TrafficLight_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::TrafficLight::*)(class osi3::TrafficLight_Classification *)) &osi3::TrafficLight::unsafe_arena_set_allocated_classification, "C++: osi3::TrafficLight::unsafe_arena_set_allocated_classification(class osi3::TrafficLight_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::TrafficLight_Classification * (osi3::TrafficLight::*)()) &osi3::TrafficLight::unsafe_arena_release_classification, "C++: osi3::TrafficLight::unsafe_arena_release_classification() --> class osi3::TrafficLight_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B347_[void osi3::swap(class osi3::TrafficLight &, class osi3::TrafficLight &)] ";
}


// File: unknown/unknown_24.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_24(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B348_[osi3::RoadMarking_Classification_Type] ";
	// osi3::RoadMarking_Classification_Type file: line:74
	pybind11::enum_<osi3::RoadMarking_Classification_Type>(M("osi3"), "RoadMarking_Classification_Type", pybind11::arithmetic(), "")
		.value("RoadMarking_Classification_Type_TYPE_UNKNOWN", osi3::RoadMarking_Classification_Type_TYPE_UNKNOWN)
		.value("RoadMarking_Classification_Type_TYPE_OTHER", osi3::RoadMarking_Classification_Type_TYPE_OTHER)
		.value("RoadMarking_Classification_Type_TYPE_PAINTED_TRAFFIC_SIGN", osi3::RoadMarking_Classification_Type_TYPE_PAINTED_TRAFFIC_SIGN)
		.value("RoadMarking_Classification_Type_TYPE_SYMBOLIC_TRAFFIC_SIGN", osi3::RoadMarking_Classification_Type_TYPE_SYMBOLIC_TRAFFIC_SIGN)
		.value("RoadMarking_Classification_Type_TYPE_TEXTUAL_TRAFFIC_SIGN", osi3::RoadMarking_Classification_Type_TYPE_TEXTUAL_TRAFFIC_SIGN)
		.value("RoadMarking_Classification_Type_TYPE_GENERIC_SYMBOL", osi3::RoadMarking_Classification_Type_TYPE_GENERIC_SYMBOL)
		.value("RoadMarking_Classification_Type_TYPE_GENERIC_LINE", osi3::RoadMarking_Classification_Type_TYPE_GENERIC_LINE)
		.value("RoadMarking_Classification_Type_TYPE_GENERIC_TEXT", osi3::RoadMarking_Classification_Type_TYPE_GENERIC_TEXT)
		.value("RoadMarking_Classification_Type_RoadMarking_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::RoadMarking_Classification_Type_RoadMarking_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("RoadMarking_Classification_Type_RoadMarking_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::RoadMarking_Classification_Type_RoadMarking_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B349_[bool osi3::RoadMarking_Classification_Type_IsValid(int)] ";
	std::cout << "B350_[const class google::protobuf::EnumDescriptor * osi3::RoadMarking_Classification_Type_descriptor()] ";
	std::cout << "B351_[bool osi3::RoadMarking_Classification_Type_Parse(const std::string &, enum osi3::RoadMarking_Classification_Type *)] ";
	std::cout << "B352_[osi3::RoadMarking_Classification_Color] ";
	// osi3::RoadMarking_Classification_Color file: line:105
	pybind11::enum_<osi3::RoadMarking_Classification_Color>(M("osi3"), "RoadMarking_Classification_Color", pybind11::arithmetic(), "")
		.value("RoadMarking_Classification_Color_COLOR_UNKNOWN", osi3::RoadMarking_Classification_Color_COLOR_UNKNOWN)
		.value("RoadMarking_Classification_Color_COLOR_OTHER", osi3::RoadMarking_Classification_Color_COLOR_OTHER)
		.value("RoadMarking_Classification_Color_COLOR_WHITE", osi3::RoadMarking_Classification_Color_COLOR_WHITE)
		.value("RoadMarking_Classification_Color_COLOR_YELLOW", osi3::RoadMarking_Classification_Color_COLOR_YELLOW)
		.value("RoadMarking_Classification_Color_COLOR_BLUE", osi3::RoadMarking_Classification_Color_COLOR_BLUE)
		.value("RoadMarking_Classification_Color_COLOR_RED", osi3::RoadMarking_Classification_Color_COLOR_RED)
		.value("RoadMarking_Classification_Color_COLOR_GREEN", osi3::RoadMarking_Classification_Color_COLOR_GREEN)
		.value("RoadMarking_Classification_Color_COLOR_VIOLET", osi3::RoadMarking_Classification_Color_COLOR_VIOLET)
		.value("RoadMarking_Classification_Color_RoadMarking_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::RoadMarking_Classification_Color_RoadMarking_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("RoadMarking_Classification_Color_RoadMarking_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::RoadMarking_Classification_Color_RoadMarking_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B353_[bool osi3::RoadMarking_Classification_Color_IsValid(int)] ";
	std::cout << "B354_[const class google::protobuf::EnumDescriptor * osi3::RoadMarking_Classification_Color_descriptor()] ";
	std::cout << "B355_[bool osi3::RoadMarking_Classification_Color_Parse(const std::string &, enum osi3::RoadMarking_Classification_Color *)] ";
	std::cout << "B356_[osi3::RoadMarking_Classification] ";
	{ // osi3::RoadMarking_Classification file: line:138
		pybind11::class_<osi3::RoadMarking_Classification, std::shared_ptr<osi3::RoadMarking_Classification>, google::protobuf::Message> cl(M("osi3"), "RoadMarking_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::RoadMarking_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RoadMarking_Classification const &o){ return new osi3::RoadMarking_Classification(o); } ) );
		cl.def("assign", (class osi3::RoadMarking_Classification & (osi3::RoadMarking_Classification::*)(const class osi3::RoadMarking_Classification &)) &osi3::RoadMarking_Classification::operator=, "C++: osi3::RoadMarking_Classification::operator=(const class osi3::RoadMarking_Classification &) --> class osi3::RoadMarking_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RoadMarking_Classification::descriptor, "C++: osi3::RoadMarking_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RoadMarking_Classification::GetDescriptor, "C++: osi3::RoadMarking_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RoadMarking_Classification::GetReflection, "C++: osi3::RoadMarking_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RoadMarking_Classification & (*)()) &osi3::RoadMarking_Classification::default_instance, "C++: osi3::RoadMarking_Classification::default_instance() --> const class osi3::RoadMarking_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RoadMarking_Classification * (*)()) &osi3::RoadMarking_Classification::internal_default_instance, "C++: osi3::RoadMarking_Classification::internal_default_instance() --> const class osi3::RoadMarking_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RoadMarking_Classification::*)(class osi3::RoadMarking_Classification *)) &osi3::RoadMarking_Classification::Swap, "C++: osi3::RoadMarking_Classification::Swap(class osi3::RoadMarking_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RoadMarking_Classification::*)(class osi3::RoadMarking_Classification *)) &osi3::RoadMarking_Classification::UnsafeArenaSwap, "C++: osi3::RoadMarking_Classification::UnsafeArenaSwap(class osi3::RoadMarking_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RoadMarking_Classification * (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::New, "C++: osi3::RoadMarking_Classification::New() const --> class osi3::RoadMarking_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RoadMarking_Classification * (osi3::RoadMarking_Classification::*)(class google::protobuf::Arena *) const) &osi3::RoadMarking_Classification::New, "C++: osi3::RoadMarking_Classification::New(class google::protobuf::Arena *) const --> class osi3::RoadMarking_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RoadMarking_Classification::*)(const class google::protobuf::Message &)) &osi3::RoadMarking_Classification::CopyFrom, "C++: osi3::RoadMarking_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RoadMarking_Classification::*)(const class google::protobuf::Message &)) &osi3::RoadMarking_Classification::MergeFrom, "C++: osi3::RoadMarking_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RoadMarking_Classification::*)(const class osi3::RoadMarking_Classification &)) &osi3::RoadMarking_Classification::CopyFrom, "C++: osi3::RoadMarking_Classification::CopyFrom(const class osi3::RoadMarking_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RoadMarking_Classification::*)(const class osi3::RoadMarking_Classification &)) &osi3::RoadMarking_Classification::MergeFrom, "C++: osi3::RoadMarking_Classification::MergeFrom(const class osi3::RoadMarking_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::Clear, "C++: osi3::RoadMarking_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::IsInitialized, "C++: osi3::RoadMarking_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::ByteSizeLong, "C++: osi3::RoadMarking_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RoadMarking_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RoadMarking_Classification::_InternalParse, "C++: osi3::RoadMarking_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RoadMarking_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RoadMarking_Classification::_InternalSerialize, "C++: osi3::RoadMarking_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::GetCachedSize, "C++: osi3::RoadMarking_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::GetMetadata, "C++: osi3::RoadMarking_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::RoadMarking_Classification::Type_IsValid, "C++: osi3::RoadMarking_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::RoadMarking_Classification::Type_descriptor, "C++: osi3::RoadMarking_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::RoadMarking_Classification_Type *)) &osi3::RoadMarking_Classification::Type_Parse, "C++: osi3::RoadMarking_Classification::Type_Parse(const std::string &, enum osi3::RoadMarking_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Color_IsValid", (bool (*)(int)) &osi3::RoadMarking_Classification::Color_IsValid, "C++: osi3::RoadMarking_Classification::Color_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Color_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::RoadMarking_Classification::Color_descriptor, "C++: osi3::RoadMarking_Classification::Color_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Color_Parse", (bool (*)(const std::string &, enum osi3::RoadMarking_Classification_Color *)) &osi3::RoadMarking_Classification::Color_Parse, "C++: osi3::RoadMarking_Classification::Color_Parse(const std::string &, enum osi3::RoadMarking_Classification_Color *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("assigned_lane_id_size", (int (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::assigned_lane_id_size, "C++: osi3::RoadMarking_Classification::assigned_lane_id_size() const --> int");
		cl.def("clear_assigned_lane_id", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_assigned_lane_id, "C++: osi3::RoadMarking_Classification::clear_assigned_lane_id() --> void");
		cl.def("mutable_assigned_lane_id", (class osi3::Identifier * (osi3::RoadMarking_Classification::*)(int)) &osi3::RoadMarking_Classification::mutable_assigned_lane_id, "C++: osi3::RoadMarking_Classification::mutable_assigned_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_assigned_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::mutable_assigned_lane_id, "C++: osi3::RoadMarking_Classification::mutable_assigned_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class osi3::Identifier & (osi3::RoadMarking_Classification::*)(int) const) &osi3::RoadMarking_Classification::assigned_lane_id, "C++: osi3::RoadMarking_Classification::assigned_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_assigned_lane_id", (class osi3::Identifier * (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::add_assigned_lane_id, "C++: osi3::RoadMarking_Classification::add_assigned_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("assigned_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::assigned_lane_id, "C++: osi3::RoadMarking_Classification::assigned_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("clear_value_text", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_value_text, "C++: osi3::RoadMarking_Classification::clear_value_text() --> void");
		cl.def("set_value_text", (void (osi3::RoadMarking_Classification::*)(const char *)) &osi3::RoadMarking_Classification::set_value_text, "C++: osi3::RoadMarking_Classification::set_value_text(const char *) --> void", pybind11::arg("value"));
		cl.def("set_value_text", (void (osi3::RoadMarking_Classification::*)(const char *, unsigned long)) &osi3::RoadMarking_Classification::set_value_text, "C++: osi3::RoadMarking_Classification::set_value_text(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_value", (bool (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::has_value, "C++: osi3::RoadMarking_Classification::has_value() const --> bool");
		cl.def("clear_value", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_value, "C++: osi3::RoadMarking_Classification::clear_value() --> void");
		cl.def("value", (const class osi3::TrafficSignValue & (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::value, "C++: osi3::RoadMarking_Classification::value() const --> const class osi3::TrafficSignValue &", pybind11::return_value_policy::automatic);
		cl.def("release_value", (class osi3::TrafficSignValue * (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::release_value, "C++: osi3::RoadMarking_Classification::release_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("mutable_value", (class osi3::TrafficSignValue * (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::mutable_value, "C++: osi3::RoadMarking_Classification::mutable_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_value", (void (osi3::RoadMarking_Classification::*)(class osi3::TrafficSignValue *)) &osi3::RoadMarking_Classification::set_allocated_value, "C++: osi3::RoadMarking_Classification::set_allocated_value(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("unsafe_arena_set_allocated_value", (void (osi3::RoadMarking_Classification::*)(class osi3::TrafficSignValue *)) &osi3::RoadMarking_Classification::unsafe_arena_set_allocated_value, "C++: osi3::RoadMarking_Classification::unsafe_arena_set_allocated_value(class osi3::TrafficSignValue *) --> void", pybind11::arg("value"));
		cl.def("unsafe_arena_release_value", (class osi3::TrafficSignValue * (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::unsafe_arena_release_value, "C++: osi3::RoadMarking_Classification::unsafe_arena_release_value() --> class osi3::TrafficSignValue *", pybind11::return_value_policy::reference);
		cl.def("clear_type", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_type, "C++: osi3::RoadMarking_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::RoadMarking_Classification_Type (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::type, "C++: osi3::RoadMarking_Classification::type() const --> enum osi3::RoadMarking_Classification_Type");
		cl.def("set_type", (void (osi3::RoadMarking_Classification::*)(enum osi3::RoadMarking_Classification_Type)) &osi3::RoadMarking_Classification::set_type, "C++: osi3::RoadMarking_Classification::set_type(enum osi3::RoadMarking_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_traffic_main_sign_type", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_traffic_main_sign_type, "C++: osi3::RoadMarking_Classification::clear_traffic_main_sign_type() --> void");
		cl.def("traffic_main_sign_type", (enum osi3::TrafficSign_MainSign_Classification_Type (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::traffic_main_sign_type, "C++: osi3::RoadMarking_Classification::traffic_main_sign_type() const --> enum osi3::TrafficSign_MainSign_Classification_Type");
		cl.def("set_traffic_main_sign_type", (void (osi3::RoadMarking_Classification::*)(enum osi3::TrafficSign_MainSign_Classification_Type)) &osi3::RoadMarking_Classification::set_traffic_main_sign_type, "C++: osi3::RoadMarking_Classification::set_traffic_main_sign_type(enum osi3::TrafficSign_MainSign_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_monochrome_color", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_monochrome_color, "C++: osi3::RoadMarking_Classification::clear_monochrome_color() --> void");
		cl.def("monochrome_color", (enum osi3::RoadMarking_Classification_Color (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::monochrome_color, "C++: osi3::RoadMarking_Classification::monochrome_color() const --> enum osi3::RoadMarking_Classification_Color");
		cl.def("set_monochrome_color", (void (osi3::RoadMarking_Classification::*)(enum osi3::RoadMarking_Classification_Color)) &osi3::RoadMarking_Classification::set_monochrome_color, "C++: osi3::RoadMarking_Classification::set_monochrome_color(enum osi3::RoadMarking_Classification_Color) --> void", pybind11::arg("value"));
		cl.def("clear_is_out_of_service", (void (osi3::RoadMarking_Classification::*)()) &osi3::RoadMarking_Classification::clear_is_out_of_service, "C++: osi3::RoadMarking_Classification::clear_is_out_of_service() --> void");
		cl.def("is_out_of_service", (bool (osi3::RoadMarking_Classification::*)() const) &osi3::RoadMarking_Classification::is_out_of_service, "C++: osi3::RoadMarking_Classification::is_out_of_service() const --> bool");
		cl.def("set_is_out_of_service", (void (osi3::RoadMarking_Classification::*)(bool)) &osi3::RoadMarking_Classification::set_is_out_of_service, "C++: osi3::RoadMarking_Classification::set_is_out_of_service(bool) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_25.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_25(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B357_[osi3::RoadMarking] ";
	{ // osi3::RoadMarking file: line:450
		pybind11::class_<osi3::RoadMarking, std::shared_ptr<osi3::RoadMarking>, google::protobuf::Message> cl(M("osi3"), "RoadMarking", "");
		cl.def( pybind11::init( [](){ return new osi3::RoadMarking(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RoadMarking const &o){ return new osi3::RoadMarking(o); } ) );
		cl.def("assign", (class osi3::RoadMarking & (osi3::RoadMarking::*)(const class osi3::RoadMarking &)) &osi3::RoadMarking::operator=, "C++: osi3::RoadMarking::operator=(const class osi3::RoadMarking &) --> class osi3::RoadMarking &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RoadMarking::descriptor, "C++: osi3::RoadMarking::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RoadMarking::GetDescriptor, "C++: osi3::RoadMarking::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RoadMarking::GetReflection, "C++: osi3::RoadMarking::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RoadMarking & (*)()) &osi3::RoadMarking::default_instance, "C++: osi3::RoadMarking::default_instance() --> const class osi3::RoadMarking &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RoadMarking * (*)()) &osi3::RoadMarking::internal_default_instance, "C++: osi3::RoadMarking::internal_default_instance() --> const class osi3::RoadMarking *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RoadMarking::*)(class osi3::RoadMarking *)) &osi3::RoadMarking::Swap, "C++: osi3::RoadMarking::Swap(class osi3::RoadMarking *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RoadMarking::*)(class osi3::RoadMarking *)) &osi3::RoadMarking::UnsafeArenaSwap, "C++: osi3::RoadMarking::UnsafeArenaSwap(class osi3::RoadMarking *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RoadMarking * (osi3::RoadMarking::*)() const) &osi3::RoadMarking::New, "C++: osi3::RoadMarking::New() const --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RoadMarking * (osi3::RoadMarking::*)(class google::protobuf::Arena *) const) &osi3::RoadMarking::New, "C++: osi3::RoadMarking::New(class google::protobuf::Arena *) const --> class osi3::RoadMarking *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RoadMarking::*)(const class google::protobuf::Message &)) &osi3::RoadMarking::CopyFrom, "C++: osi3::RoadMarking::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RoadMarking::*)(const class google::protobuf::Message &)) &osi3::RoadMarking::MergeFrom, "C++: osi3::RoadMarking::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RoadMarking::*)(const class osi3::RoadMarking &)) &osi3::RoadMarking::CopyFrom, "C++: osi3::RoadMarking::CopyFrom(const class osi3::RoadMarking &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RoadMarking::*)(const class osi3::RoadMarking &)) &osi3::RoadMarking::MergeFrom, "C++: osi3::RoadMarking::MergeFrom(const class osi3::RoadMarking &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RoadMarking::*)()) &osi3::RoadMarking::Clear, "C++: osi3::RoadMarking::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RoadMarking::*)() const) &osi3::RoadMarking::IsInitialized, "C++: osi3::RoadMarking::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RoadMarking::*)() const) &osi3::RoadMarking::ByteSizeLong, "C++: osi3::RoadMarking::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RoadMarking::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RoadMarking::_InternalParse, "C++: osi3::RoadMarking::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RoadMarking::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RoadMarking::_InternalSerialize, "C++: osi3::RoadMarking::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RoadMarking::*)() const) &osi3::RoadMarking::GetCachedSize, "C++: osi3::RoadMarking::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RoadMarking::*)() const) &osi3::RoadMarking::GetMetadata, "C++: osi3::RoadMarking::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_id", (bool (osi3::RoadMarking::*)() const) &osi3::RoadMarking::has_id, "C++: osi3::RoadMarking::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::RoadMarking::*)()) &osi3::RoadMarking::clear_id, "C++: osi3::RoadMarking::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::RoadMarking::*)() const) &osi3::RoadMarking::id, "C++: osi3::RoadMarking::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::RoadMarking::*)()) &osi3::RoadMarking::release_id, "C++: osi3::RoadMarking::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::RoadMarking::*)()) &osi3::RoadMarking::mutable_id, "C++: osi3::RoadMarking::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::RoadMarking::*)(class osi3::Identifier *)) &osi3::RoadMarking::set_allocated_id, "C++: osi3::RoadMarking::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::RoadMarking::*)(class osi3::Identifier *)) &osi3::RoadMarking::unsafe_arena_set_allocated_id, "C++: osi3::RoadMarking::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::RoadMarking::*)()) &osi3::RoadMarking::unsafe_arena_release_id, "C++: osi3::RoadMarking::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_base", (bool (osi3::RoadMarking::*)() const) &osi3::RoadMarking::has_base, "C++: osi3::RoadMarking::has_base() const --> bool");
		cl.def("clear_base", (void (osi3::RoadMarking::*)()) &osi3::RoadMarking::clear_base, "C++: osi3::RoadMarking::clear_base() --> void");
		cl.def("base", (const class osi3::BaseStationary & (osi3::RoadMarking::*)() const) &osi3::RoadMarking::base, "C++: osi3::RoadMarking::base() const --> const class osi3::BaseStationary &", pybind11::return_value_policy::automatic);
		cl.def("release_base", (class osi3::BaseStationary * (osi3::RoadMarking::*)()) &osi3::RoadMarking::release_base, "C++: osi3::RoadMarking::release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("mutable_base", (class osi3::BaseStationary * (osi3::RoadMarking::*)()) &osi3::RoadMarking::mutable_base, "C++: osi3::RoadMarking::mutable_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_base", (void (osi3::RoadMarking::*)(class osi3::BaseStationary *)) &osi3::RoadMarking::set_allocated_base, "C++: osi3::RoadMarking::set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_set_allocated_base", (void (osi3::RoadMarking::*)(class osi3::BaseStationary *)) &osi3::RoadMarking::unsafe_arena_set_allocated_base, "C++: osi3::RoadMarking::unsafe_arena_set_allocated_base(class osi3::BaseStationary *) --> void", pybind11::arg("base"));
		cl.def("unsafe_arena_release_base", (class osi3::BaseStationary * (osi3::RoadMarking::*)()) &osi3::RoadMarking::unsafe_arena_release_base, "C++: osi3::RoadMarking::unsafe_arena_release_base() --> class osi3::BaseStationary *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::RoadMarking::*)() const) &osi3::RoadMarking::has_classification, "C++: osi3::RoadMarking::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::RoadMarking::*)()) &osi3::RoadMarking::clear_classification, "C++: osi3::RoadMarking::clear_classification() --> void");
		cl.def("classification", (const class osi3::RoadMarking_Classification & (osi3::RoadMarking::*)() const) &osi3::RoadMarking::classification, "C++: osi3::RoadMarking::classification() const --> const class osi3::RoadMarking_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::RoadMarking_Classification * (osi3::RoadMarking::*)()) &osi3::RoadMarking::release_classification, "C++: osi3::RoadMarking::release_classification() --> class osi3::RoadMarking_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::RoadMarking_Classification * (osi3::RoadMarking::*)()) &osi3::RoadMarking::mutable_classification, "C++: osi3::RoadMarking::mutable_classification() --> class osi3::RoadMarking_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::RoadMarking::*)(class osi3::RoadMarking_Classification *)) &osi3::RoadMarking::set_allocated_classification, "C++: osi3::RoadMarking::set_allocated_classification(class osi3::RoadMarking_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::RoadMarking::*)(class osi3::RoadMarking_Classification *)) &osi3::RoadMarking::unsafe_arena_set_allocated_classification, "C++: osi3::RoadMarking::unsafe_arena_set_allocated_classification(class osi3::RoadMarking_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::RoadMarking_Classification * (osi3::RoadMarking::*)()) &osi3::RoadMarking::unsafe_arena_release_classification, "C++: osi3::RoadMarking::unsafe_arena_release_classification() --> class osi3::RoadMarking_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B358_[void osi3::swap(class osi3::RoadMarking &, class osi3::RoadMarking &)] ";
}


// File: unknown/unknown_26.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_26(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B359_[osi3::Lane_Classification_Type] ";
	// osi3::Lane_Classification_Type file: line:93
	pybind11::enum_<osi3::Lane_Classification_Type>(M("osi3"), "Lane_Classification_Type", pybind11::arithmetic(), "")
		.value("Lane_Classification_Type_TYPE_UNKNOWN", osi3::Lane_Classification_Type_TYPE_UNKNOWN)
		.value("Lane_Classification_Type_TYPE_OTHER", osi3::Lane_Classification_Type_TYPE_OTHER)
		.value("Lane_Classification_Type_TYPE_DRIVING", osi3::Lane_Classification_Type_TYPE_DRIVING)
		.value("Lane_Classification_Type_TYPE_NONDRIVING", osi3::Lane_Classification_Type_TYPE_NONDRIVING)
		.value("Lane_Classification_Type_TYPE_INTERSECTION", osi3::Lane_Classification_Type_TYPE_INTERSECTION)
		.value("Lane_Classification_Type_Lane_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::Lane_Classification_Type_Lane_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("Lane_Classification_Type_Lane_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::Lane_Classification_Type_Lane_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B360_[bool osi3::Lane_Classification_Type_IsValid(int)] ";
	std::cout << "B361_[const class google::protobuf::EnumDescriptor * osi3::Lane_Classification_Type_descriptor()] ";
	std::cout << "B362_[bool osi3::Lane_Classification_Type_Parse(const std::string &, enum osi3::Lane_Classification_Type *)] ";
	std::cout << "B363_[osi3::Lane_Classification_Subtype] ";
	// osi3::Lane_Classification_Subtype file: line:121
	pybind11::enum_<osi3::Lane_Classification_Subtype>(M("osi3"), "Lane_Classification_Subtype", pybind11::arithmetic(), "")
		.value("Lane_Classification_Subtype_SUBTYPE_UNKNOWN", osi3::Lane_Classification_Subtype_SUBTYPE_UNKNOWN)
		.value("Lane_Classification_Subtype_SUBTYPE_OTHER", osi3::Lane_Classification_Subtype_SUBTYPE_OTHER)
		.value("Lane_Classification_Subtype_SUBTYPE_NORMAL", osi3::Lane_Classification_Subtype_SUBTYPE_NORMAL)
		.value("Lane_Classification_Subtype_SUBTYPE_BIKING", osi3::Lane_Classification_Subtype_SUBTYPE_BIKING)
		.value("Lane_Classification_Subtype_SUBTYPE_SIDEWALK", osi3::Lane_Classification_Subtype_SUBTYPE_SIDEWALK)
		.value("Lane_Classification_Subtype_SUBTYPE_PARKING", osi3::Lane_Classification_Subtype_SUBTYPE_PARKING)
		.value("Lane_Classification_Subtype_SUBTYPE_STOP", osi3::Lane_Classification_Subtype_SUBTYPE_STOP)
		.value("Lane_Classification_Subtype_SUBTYPE_RESTRICTED", osi3::Lane_Classification_Subtype_SUBTYPE_RESTRICTED)
		.value("Lane_Classification_Subtype_SUBTYPE_BORDER", osi3::Lane_Classification_Subtype_SUBTYPE_BORDER)
		.value("Lane_Classification_Subtype_SUBTYPE_SHOULDER", osi3::Lane_Classification_Subtype_SUBTYPE_SHOULDER)
		.value("Lane_Classification_Subtype_SUBTYPE_EXIT", osi3::Lane_Classification_Subtype_SUBTYPE_EXIT)
		.value("Lane_Classification_Subtype_SUBTYPE_ENTRY", osi3::Lane_Classification_Subtype_SUBTYPE_ENTRY)
		.value("Lane_Classification_Subtype_SUBTYPE_ONRAMP", osi3::Lane_Classification_Subtype_SUBTYPE_ONRAMP)
		.value("Lane_Classification_Subtype_SUBTYPE_OFFRAMP", osi3::Lane_Classification_Subtype_SUBTYPE_OFFRAMP)
		.value("Lane_Classification_Subtype_SUBTYPE_CONNECTINGRAMP", osi3::Lane_Classification_Subtype_SUBTYPE_CONNECTINGRAMP)
		.value("Lane_Classification_Subtype_Lane_Classification_Subtype_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::Lane_Classification_Subtype_Lane_Classification_Subtype_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("Lane_Classification_Subtype_Lane_Classification_Subtype_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::Lane_Classification_Subtype_Lane_Classification_Subtype_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B364_[bool osi3::Lane_Classification_Subtype_IsValid(int)] ";
	std::cout << "B365_[const class google::protobuf::EnumDescriptor * osi3::Lane_Classification_Subtype_descriptor()] ";
	std::cout << "B366_[bool osi3::Lane_Classification_Subtype_Parse(const std::string &, enum osi3::Lane_Classification_Subtype *)] ";
	std::cout << "B367_[osi3::LaneBoundary_Classification_Type] ";
	// osi3::LaneBoundary_Classification_Type file: line:159
	pybind11::enum_<osi3::LaneBoundary_Classification_Type>(M("osi3"), "LaneBoundary_Classification_Type", pybind11::arithmetic(), "")
		.value("LaneBoundary_Classification_Type_TYPE_UNKNOWN", osi3::LaneBoundary_Classification_Type_TYPE_UNKNOWN)
		.value("LaneBoundary_Classification_Type_TYPE_OTHER", osi3::LaneBoundary_Classification_Type_TYPE_OTHER)
		.value("LaneBoundary_Classification_Type_TYPE_NO_LINE", osi3::LaneBoundary_Classification_Type_TYPE_NO_LINE)
		.value("LaneBoundary_Classification_Type_TYPE_SOLID_LINE", osi3::LaneBoundary_Classification_Type_TYPE_SOLID_LINE)
		.value("LaneBoundary_Classification_Type_TYPE_DASHED_LINE", osi3::LaneBoundary_Classification_Type_TYPE_DASHED_LINE)
		.value("LaneBoundary_Classification_Type_TYPE_BOTTS_DOTS", osi3::LaneBoundary_Classification_Type_TYPE_BOTTS_DOTS)
		.value("LaneBoundary_Classification_Type_TYPE_ROAD_EDGE", osi3::LaneBoundary_Classification_Type_TYPE_ROAD_EDGE)
		.value("LaneBoundary_Classification_Type_TYPE_SNOW_EDGE", osi3::LaneBoundary_Classification_Type_TYPE_SNOW_EDGE)
		.value("LaneBoundary_Classification_Type_TYPE_GRASS_EDGE", osi3::LaneBoundary_Classification_Type_TYPE_GRASS_EDGE)
		.value("LaneBoundary_Classification_Type_TYPE_GRAVEL_EDGE", osi3::LaneBoundary_Classification_Type_TYPE_GRAVEL_EDGE)
		.value("LaneBoundary_Classification_Type_TYPE_SOIL_EDGE", osi3::LaneBoundary_Classification_Type_TYPE_SOIL_EDGE)
		.value("LaneBoundary_Classification_Type_TYPE_GUARD_RAIL", osi3::LaneBoundary_Classification_Type_TYPE_GUARD_RAIL)
		.value("LaneBoundary_Classification_Type_TYPE_CURB", osi3::LaneBoundary_Classification_Type_TYPE_CURB)
		.value("LaneBoundary_Classification_Type_TYPE_STRUCTURE", osi3::LaneBoundary_Classification_Type_TYPE_STRUCTURE)
		.value("LaneBoundary_Classification_Type_LaneBoundary_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::LaneBoundary_Classification_Type_LaneBoundary_Classification_Type_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("LaneBoundary_Classification_Type_LaneBoundary_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::LaneBoundary_Classification_Type_LaneBoundary_Classification_Type_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B368_[bool osi3::LaneBoundary_Classification_Type_IsValid(int)] ";
	std::cout << "B369_[const class google::protobuf::EnumDescriptor * osi3::LaneBoundary_Classification_Type_descriptor()] ";
	std::cout << "B370_[bool osi3::LaneBoundary_Classification_Type_Parse(const std::string &, enum osi3::LaneBoundary_Classification_Type *)] ";
	std::cout << "B371_[osi3::LaneBoundary_Classification_Color] ";
	// osi3::LaneBoundary_Classification_Color file: line:196
	pybind11::enum_<osi3::LaneBoundary_Classification_Color>(M("osi3"), "LaneBoundary_Classification_Color", pybind11::arithmetic(), "")
		.value("LaneBoundary_Classification_Color_COLOR_UNKNOWN", osi3::LaneBoundary_Classification_Color_COLOR_UNKNOWN)
		.value("LaneBoundary_Classification_Color_COLOR_OTHER", osi3::LaneBoundary_Classification_Color_COLOR_OTHER)
		.value("LaneBoundary_Classification_Color_COLOR_NONE", osi3::LaneBoundary_Classification_Color_COLOR_NONE)
		.value("LaneBoundary_Classification_Color_COLOR_WHITE", osi3::LaneBoundary_Classification_Color_COLOR_WHITE)
		.value("LaneBoundary_Classification_Color_COLOR_YELLOW", osi3::LaneBoundary_Classification_Color_COLOR_YELLOW)
		.value("LaneBoundary_Classification_Color_COLOR_RED", osi3::LaneBoundary_Classification_Color_COLOR_RED)
		.value("LaneBoundary_Classification_Color_COLOR_BLUE", osi3::LaneBoundary_Classification_Color_COLOR_BLUE)
		.value("LaneBoundary_Classification_Color_COLOR_GREEN", osi3::LaneBoundary_Classification_Color_COLOR_GREEN)
		.value("LaneBoundary_Classification_Color_COLOR_VIOLET", osi3::LaneBoundary_Classification_Color_COLOR_VIOLET)
		.value("LaneBoundary_Classification_Color_LaneBoundary_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::LaneBoundary_Classification_Color_LaneBoundary_Classification_Color_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("LaneBoundary_Classification_Color_LaneBoundary_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::LaneBoundary_Classification_Color_LaneBoundary_Classification_Color_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B372_[bool osi3::LaneBoundary_Classification_Color_IsValid(int)] ";
	std::cout << "B373_[const class google::protobuf::EnumDescriptor * osi3::LaneBoundary_Classification_Color_descriptor()] ";
	std::cout << "B374_[bool osi3::LaneBoundary_Classification_Color_Parse(const std::string &, enum osi3::LaneBoundary_Classification_Color *)] ";
	std::cout << "B375_[osi3::Lane_Classification_RoadCondition] ";
	{ // osi3::Lane_Classification_RoadCondition file: line:230
		pybind11::class_<osi3::Lane_Classification_RoadCondition, std::shared_ptr<osi3::Lane_Classification_RoadCondition>, google::protobuf::Message> cl(M("osi3"), "Lane_Classification_RoadCondition", "");
		cl.def( pybind11::init( [](){ return new osi3::Lane_Classification_RoadCondition(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Lane_Classification_RoadCondition const &o){ return new osi3::Lane_Classification_RoadCondition(o); } ) );
		cl.def("assign", (class osi3::Lane_Classification_RoadCondition & (osi3::Lane_Classification_RoadCondition::*)(const class osi3::Lane_Classification_RoadCondition &)) &osi3::Lane_Classification_RoadCondition::operator=, "C++: osi3::Lane_Classification_RoadCondition::operator=(const class osi3::Lane_Classification_RoadCondition &) --> class osi3::Lane_Classification_RoadCondition &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification_RoadCondition::descriptor, "C++: osi3::Lane_Classification_RoadCondition::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification_RoadCondition::GetDescriptor, "C++: osi3::Lane_Classification_RoadCondition::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Lane_Classification_RoadCondition::GetReflection, "C++: osi3::Lane_Classification_RoadCondition::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Lane_Classification_RoadCondition & (*)()) &osi3::Lane_Classification_RoadCondition::default_instance, "C++: osi3::Lane_Classification_RoadCondition::default_instance() --> const class osi3::Lane_Classification_RoadCondition &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Lane_Classification_RoadCondition * (*)()) &osi3::Lane_Classification_RoadCondition::internal_default_instance, "C++: osi3::Lane_Classification_RoadCondition::internal_default_instance() --> const class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Lane_Classification_RoadCondition::*)(class osi3::Lane_Classification_RoadCondition *)) &osi3::Lane_Classification_RoadCondition::Swap, "C++: osi3::Lane_Classification_RoadCondition::Swap(class osi3::Lane_Classification_RoadCondition *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Lane_Classification_RoadCondition::*)(class osi3::Lane_Classification_RoadCondition *)) &osi3::Lane_Classification_RoadCondition::UnsafeArenaSwap, "C++: osi3::Lane_Classification_RoadCondition::UnsafeArenaSwap(class osi3::Lane_Classification_RoadCondition *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Lane_Classification_RoadCondition * (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::New, "C++: osi3::Lane_Classification_RoadCondition::New() const --> class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Lane_Classification_RoadCondition * (osi3::Lane_Classification_RoadCondition::*)(class google::protobuf::Arena *) const) &osi3::Lane_Classification_RoadCondition::New, "C++: osi3::Lane_Classification_RoadCondition::New(class google::protobuf::Arena *) const --> class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification_RoadCondition::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification_RoadCondition::CopyFrom, "C++: osi3::Lane_Classification_RoadCondition::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification_RoadCondition::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification_RoadCondition::MergeFrom, "C++: osi3::Lane_Classification_RoadCondition::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification_RoadCondition::*)(const class osi3::Lane_Classification_RoadCondition &)) &osi3::Lane_Classification_RoadCondition::CopyFrom, "C++: osi3::Lane_Classification_RoadCondition::CopyFrom(const class osi3::Lane_Classification_RoadCondition &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification_RoadCondition::*)(const class osi3::Lane_Classification_RoadCondition &)) &osi3::Lane_Classification_RoadCondition::MergeFrom, "C++: osi3::Lane_Classification_RoadCondition::MergeFrom(const class osi3::Lane_Classification_RoadCondition &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::Clear, "C++: osi3::Lane_Classification_RoadCondition::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::IsInitialized, "C++: osi3::Lane_Classification_RoadCondition::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::ByteSizeLong, "C++: osi3::Lane_Classification_RoadCondition::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Lane_Classification_RoadCondition::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Lane_Classification_RoadCondition::_InternalParse, "C++: osi3::Lane_Classification_RoadCondition::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Lane_Classification_RoadCondition::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Lane_Classification_RoadCondition::_InternalSerialize, "C++: osi3::Lane_Classification_RoadCondition::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::GetCachedSize, "C++: osi3::Lane_Classification_RoadCondition::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::GetMetadata, "C++: osi3::Lane_Classification_RoadCondition::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_surface_temperature", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_temperature, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_temperature() --> void");
		cl.def("surface_temperature", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_temperature, "C++: osi3::Lane_Classification_RoadCondition::surface_temperature() const --> double");
		cl.def("set_surface_temperature", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_temperature, "C++: osi3::Lane_Classification_RoadCondition::set_surface_temperature(double) --> void", pybind11::arg("value"));
		cl.def("clear_surface_water_film", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_water_film, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_water_film() --> void");
		cl.def("surface_water_film", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_water_film, "C++: osi3::Lane_Classification_RoadCondition::surface_water_film() const --> double");
		cl.def("set_surface_water_film", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_water_film, "C++: osi3::Lane_Classification_RoadCondition::set_surface_water_film(double) --> void", pybind11::arg("value"));
		cl.def("clear_surface_freezing_point", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_freezing_point, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_freezing_point() --> void");
		cl.def("surface_freezing_point", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_freezing_point, "C++: osi3::Lane_Classification_RoadCondition::surface_freezing_point() const --> double");
		cl.def("set_surface_freezing_point", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_freezing_point, "C++: osi3::Lane_Classification_RoadCondition::set_surface_freezing_point(double) --> void", pybind11::arg("value"));
		cl.def("clear_surface_ice", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_ice, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_ice() --> void");
		cl.def("surface_ice", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_ice, "C++: osi3::Lane_Classification_RoadCondition::surface_ice() const --> double");
		cl.def("set_surface_ice", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_ice, "C++: osi3::Lane_Classification_RoadCondition::set_surface_ice(double) --> void", pybind11::arg("value"));
		cl.def("clear_surface_roughness", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_roughness, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_roughness() --> void");
		cl.def("surface_roughness", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_roughness, "C++: osi3::Lane_Classification_RoadCondition::surface_roughness() const --> double");
		cl.def("set_surface_roughness", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_roughness, "C++: osi3::Lane_Classification_RoadCondition::set_surface_roughness(double) --> void", pybind11::arg("value"));
		cl.def("clear_surface_texture", (void (osi3::Lane_Classification_RoadCondition::*)()) &osi3::Lane_Classification_RoadCondition::clear_surface_texture, "C++: osi3::Lane_Classification_RoadCondition::clear_surface_texture() --> void");
		cl.def("surface_texture", (double (osi3::Lane_Classification_RoadCondition::*)() const) &osi3::Lane_Classification_RoadCondition::surface_texture, "C++: osi3::Lane_Classification_RoadCondition::surface_texture() const --> double");
		cl.def("set_surface_texture", (void (osi3::Lane_Classification_RoadCondition::*)(double)) &osi3::Lane_Classification_RoadCondition::set_surface_texture, "C++: osi3::Lane_Classification_RoadCondition::set_surface_texture(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_27.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_27(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B376_[osi3::Lane_Classification_LanePairing] ";
	{ // osi3::Lane_Classification_LanePairing file: line:422
		pybind11::class_<osi3::Lane_Classification_LanePairing, std::shared_ptr<osi3::Lane_Classification_LanePairing>, google::protobuf::Message> cl(M("osi3"), "Lane_Classification_LanePairing", "");
		cl.def( pybind11::init( [](){ return new osi3::Lane_Classification_LanePairing(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Lane_Classification_LanePairing const &o){ return new osi3::Lane_Classification_LanePairing(o); } ) );
		cl.def("assign", (class osi3::Lane_Classification_LanePairing & (osi3::Lane_Classification_LanePairing::*)(const class osi3::Lane_Classification_LanePairing &)) &osi3::Lane_Classification_LanePairing::operator=, "C++: osi3::Lane_Classification_LanePairing::operator=(const class osi3::Lane_Classification_LanePairing &) --> class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification_LanePairing::descriptor, "C++: osi3::Lane_Classification_LanePairing::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification_LanePairing::GetDescriptor, "C++: osi3::Lane_Classification_LanePairing::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Lane_Classification_LanePairing::GetReflection, "C++: osi3::Lane_Classification_LanePairing::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Lane_Classification_LanePairing & (*)()) &osi3::Lane_Classification_LanePairing::default_instance, "C++: osi3::Lane_Classification_LanePairing::default_instance() --> const class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Lane_Classification_LanePairing * (*)()) &osi3::Lane_Classification_LanePairing::internal_default_instance, "C++: osi3::Lane_Classification_LanePairing::internal_default_instance() --> const class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Lane_Classification_LanePairing *)) &osi3::Lane_Classification_LanePairing::Swap, "C++: osi3::Lane_Classification_LanePairing::Swap(class osi3::Lane_Classification_LanePairing *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Lane_Classification_LanePairing *)) &osi3::Lane_Classification_LanePairing::UnsafeArenaSwap, "C++: osi3::Lane_Classification_LanePairing::UnsafeArenaSwap(class osi3::Lane_Classification_LanePairing *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Lane_Classification_LanePairing * (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::New, "C++: osi3::Lane_Classification_LanePairing::New() const --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Lane_Classification_LanePairing * (osi3::Lane_Classification_LanePairing::*)(class google::protobuf::Arena *) const) &osi3::Lane_Classification_LanePairing::New, "C++: osi3::Lane_Classification_LanePairing::New(class google::protobuf::Arena *) const --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification_LanePairing::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification_LanePairing::CopyFrom, "C++: osi3::Lane_Classification_LanePairing::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification_LanePairing::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification_LanePairing::MergeFrom, "C++: osi3::Lane_Classification_LanePairing::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification_LanePairing::*)(const class osi3::Lane_Classification_LanePairing &)) &osi3::Lane_Classification_LanePairing::CopyFrom, "C++: osi3::Lane_Classification_LanePairing::CopyFrom(const class osi3::Lane_Classification_LanePairing &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification_LanePairing::*)(const class osi3::Lane_Classification_LanePairing &)) &osi3::Lane_Classification_LanePairing::MergeFrom, "C++: osi3::Lane_Classification_LanePairing::MergeFrom(const class osi3::Lane_Classification_LanePairing &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::Clear, "C++: osi3::Lane_Classification_LanePairing::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::IsInitialized, "C++: osi3::Lane_Classification_LanePairing::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::ByteSizeLong, "C++: osi3::Lane_Classification_LanePairing::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Lane_Classification_LanePairing::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Lane_Classification_LanePairing::_InternalParse, "C++: osi3::Lane_Classification_LanePairing::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Lane_Classification_LanePairing::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Lane_Classification_LanePairing::_InternalSerialize, "C++: osi3::Lane_Classification_LanePairing::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::GetCachedSize, "C++: osi3::Lane_Classification_LanePairing::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::GetMetadata, "C++: osi3::Lane_Classification_LanePairing::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_antecessor_lane_id", (bool (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::has_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::has_antecessor_lane_id() const --> bool");
		cl.def("clear_antecessor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::clear_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::clear_antecessor_lane_id() --> void");
		cl.def("antecessor_lane_id", (const class osi3::Identifier & (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::antecessor_lane_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_antecessor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::release_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::release_antecessor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_antecessor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::mutable_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::mutable_antecessor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_antecessor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Identifier *)) &osi3::Lane_Classification_LanePairing::set_allocated_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::set_allocated_antecessor_lane_id(class osi3::Identifier *) --> void", pybind11::arg("antecessor_lane_id"));
		cl.def("unsafe_arena_set_allocated_antecessor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Identifier *)) &osi3::Lane_Classification_LanePairing::unsafe_arena_set_allocated_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::unsafe_arena_set_allocated_antecessor_lane_id(class osi3::Identifier *) --> void", pybind11::arg("antecessor_lane_id"));
		cl.def("unsafe_arena_release_antecessor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::unsafe_arena_release_antecessor_lane_id, "C++: osi3::Lane_Classification_LanePairing::unsafe_arena_release_antecessor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_successor_lane_id", (bool (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::has_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::has_successor_lane_id() const --> bool");
		cl.def("clear_successor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::clear_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::clear_successor_lane_id() --> void");
		cl.def("successor_lane_id", (const class osi3::Identifier & (osi3::Lane_Classification_LanePairing::*)() const) &osi3::Lane_Classification_LanePairing::successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::successor_lane_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_successor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::release_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::release_successor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_successor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::mutable_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::mutable_successor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_successor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Identifier *)) &osi3::Lane_Classification_LanePairing::set_allocated_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::set_allocated_successor_lane_id(class osi3::Identifier *) --> void", pybind11::arg("successor_lane_id"));
		cl.def("unsafe_arena_set_allocated_successor_lane_id", (void (osi3::Lane_Classification_LanePairing::*)(class osi3::Identifier *)) &osi3::Lane_Classification_LanePairing::unsafe_arena_set_allocated_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::unsafe_arena_set_allocated_successor_lane_id(class osi3::Identifier *) --> void", pybind11::arg("successor_lane_id"));
		cl.def("unsafe_arena_release_successor_lane_id", (class osi3::Identifier * (osi3::Lane_Classification_LanePairing::*)()) &osi3::Lane_Classification_LanePairing::unsafe_arena_release_successor_lane_id, "C++: osi3::Lane_Classification_LanePairing::unsafe_arena_release_successor_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
	}
	std::cout << "B377_[void osi3::swap(class osi3::Lane_Classification_LanePairing &, class osi3::Lane_Classification_LanePairing &)] ";
	std::cout << "B378_[osi3::Lane_Classification] ";
	{ // osi3::Lane_Classification file: line:588
		pybind11::class_<osi3::Lane_Classification, std::shared_ptr<osi3::Lane_Classification>, google::protobuf::Message> cl(M("osi3"), "Lane_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::Lane_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Lane_Classification const &o){ return new osi3::Lane_Classification(o); } ) );
		cl.def("assign", (class osi3::Lane_Classification & (osi3::Lane_Classification::*)(const class osi3::Lane_Classification &)) &osi3::Lane_Classification::operator=, "C++: osi3::Lane_Classification::operator=(const class osi3::Lane_Classification &) --> class osi3::Lane_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification::descriptor, "C++: osi3::Lane_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane_Classification::GetDescriptor, "C++: osi3::Lane_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Lane_Classification::GetReflection, "C++: osi3::Lane_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Lane_Classification & (*)()) &osi3::Lane_Classification::default_instance, "C++: osi3::Lane_Classification::default_instance() --> const class osi3::Lane_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Lane_Classification * (*)()) &osi3::Lane_Classification::internal_default_instance, "C++: osi3::Lane_Classification::internal_default_instance() --> const class osi3::Lane_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Lane_Classification::*)(class osi3::Lane_Classification *)) &osi3::Lane_Classification::Swap, "C++: osi3::Lane_Classification::Swap(class osi3::Lane_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Lane_Classification::*)(class osi3::Lane_Classification *)) &osi3::Lane_Classification::UnsafeArenaSwap, "C++: osi3::Lane_Classification::UnsafeArenaSwap(class osi3::Lane_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Lane_Classification * (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::New, "C++: osi3::Lane_Classification::New() const --> class osi3::Lane_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Lane_Classification * (osi3::Lane_Classification::*)(class google::protobuf::Arena *) const) &osi3::Lane_Classification::New, "C++: osi3::Lane_Classification::New(class google::protobuf::Arena *) const --> class osi3::Lane_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification::CopyFrom, "C++: osi3::Lane_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification::*)(const class google::protobuf::Message &)) &osi3::Lane_Classification::MergeFrom, "C++: osi3::Lane_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Lane_Classification::*)(const class osi3::Lane_Classification &)) &osi3::Lane_Classification::CopyFrom, "C++: osi3::Lane_Classification::CopyFrom(const class osi3::Lane_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane_Classification::*)(const class osi3::Lane_Classification &)) &osi3::Lane_Classification::MergeFrom, "C++: osi3::Lane_Classification::MergeFrom(const class osi3::Lane_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::Clear, "C++: osi3::Lane_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::IsInitialized, "C++: osi3::Lane_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::ByteSizeLong, "C++: osi3::Lane_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Lane_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Lane_Classification::_InternalParse, "C++: osi3::Lane_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Lane_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Lane_Classification::_InternalSerialize, "C++: osi3::Lane_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::GetCachedSize, "C++: osi3::Lane_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::GetMetadata, "C++: osi3::Lane_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::Lane_Classification::Type_IsValid, "C++: osi3::Lane_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::Lane_Classification::Type_descriptor, "C++: osi3::Lane_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::Lane_Classification_Type *)) &osi3::Lane_Classification::Type_Parse, "C++: osi3::Lane_Classification::Type_Parse(const std::string &, enum osi3::Lane_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Subtype_IsValid", (bool (*)(int)) &osi3::Lane_Classification::Subtype_IsValid, "C++: osi3::Lane_Classification::Subtype_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Subtype_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::Lane_Classification::Subtype_descriptor, "C++: osi3::Lane_Classification::Subtype_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Subtype_Parse", (bool (*)(const std::string &, enum osi3::Lane_Classification_Subtype *)) &osi3::Lane_Classification::Subtype_Parse, "C++: osi3::Lane_Classification::Subtype_Parse(const std::string &, enum osi3::Lane_Classification_Subtype *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("centerline_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::centerline_size, "C++: osi3::Lane_Classification::centerline_size() const --> int");
		cl.def("clear_centerline", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_centerline, "C++: osi3::Lane_Classification::clear_centerline() --> void");
		cl.def("mutable_centerline", (class osi3::Vector3d * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_centerline, "C++: osi3::Lane_Classification::mutable_centerline(int) --> class osi3::Vector3d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_centerline", (class google::protobuf::RepeatedPtrField<class osi3::Vector3d> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_centerline, "C++: osi3::Lane_Classification::mutable_centerline() --> class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *", pybind11::return_value_policy::reference);
		cl.def("centerline", (const class osi3::Vector3d & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::centerline, "C++: osi3::Lane_Classification::centerline(int) const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_centerline", (class osi3::Vector3d * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_centerline, "C++: osi3::Lane_Classification::add_centerline() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("centerline", (const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::centerline, "C++: osi3::Lane_Classification::centerline() const --> const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &", pybind11::return_value_policy::automatic);
		cl.def("left_adjacent_lane_id_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::left_adjacent_lane_id_size, "C++: osi3::Lane_Classification::left_adjacent_lane_id_size() const --> int");
		cl.def("clear_left_adjacent_lane_id", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_left_adjacent_lane_id, "C++: osi3::Lane_Classification::clear_left_adjacent_lane_id() --> void");
		cl.def("mutable_left_adjacent_lane_id", (class osi3::Identifier * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_left_adjacent_lane_id, "C++: osi3::Lane_Classification::mutable_left_adjacent_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_left_adjacent_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_left_adjacent_lane_id, "C++: osi3::Lane_Classification::mutable_left_adjacent_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("left_adjacent_lane_id", (const class osi3::Identifier & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::left_adjacent_lane_id, "C++: osi3::Lane_Classification::left_adjacent_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_left_adjacent_lane_id", (class osi3::Identifier * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_left_adjacent_lane_id, "C++: osi3::Lane_Classification::add_left_adjacent_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("left_adjacent_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::left_adjacent_lane_id, "C++: osi3::Lane_Classification::left_adjacent_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("right_adjacent_lane_id_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::right_adjacent_lane_id_size, "C++: osi3::Lane_Classification::right_adjacent_lane_id_size() const --> int");
		cl.def("clear_right_adjacent_lane_id", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_right_adjacent_lane_id, "C++: osi3::Lane_Classification::clear_right_adjacent_lane_id() --> void");
		cl.def("mutable_right_adjacent_lane_id", (class osi3::Identifier * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_right_adjacent_lane_id, "C++: osi3::Lane_Classification::mutable_right_adjacent_lane_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_right_adjacent_lane_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_right_adjacent_lane_id, "C++: osi3::Lane_Classification::mutable_right_adjacent_lane_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("right_adjacent_lane_id", (const class osi3::Identifier & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::right_adjacent_lane_id, "C++: osi3::Lane_Classification::right_adjacent_lane_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_right_adjacent_lane_id", (class osi3::Identifier * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_right_adjacent_lane_id, "C++: osi3::Lane_Classification::add_right_adjacent_lane_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("right_adjacent_lane_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::right_adjacent_lane_id, "C++: osi3::Lane_Classification::right_adjacent_lane_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("lane_pairing_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::lane_pairing_size, "C++: osi3::Lane_Classification::lane_pairing_size() const --> int");
		cl.def("clear_lane_pairing", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_lane_pairing, "C++: osi3::Lane_Classification::clear_lane_pairing() --> void");
		cl.def("mutable_lane_pairing", (class osi3::Lane_Classification_LanePairing * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_lane_pairing, "C++: osi3::Lane_Classification::mutable_lane_pairing(int) --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_lane_pairing", (class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_lane_pairing, "C++: osi3::Lane_Classification::mutable_lane_pairing() --> class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> *", pybind11::return_value_policy::reference);
		cl.def("lane_pairing", (const class osi3::Lane_Classification_LanePairing & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::lane_pairing, "C++: osi3::Lane_Classification::lane_pairing(int) const --> const class osi3::Lane_Classification_LanePairing &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_lane_pairing", (class osi3::Lane_Classification_LanePairing * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_lane_pairing, "C++: osi3::Lane_Classification::add_lane_pairing() --> class osi3::Lane_Classification_LanePairing *", pybind11::return_value_policy::reference);
		cl.def("lane_pairing", (const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::lane_pairing, "C++: osi3::Lane_Classification::lane_pairing() const --> const class google::protobuf::RepeatedPtrField<class osi3::Lane_Classification_LanePairing> &", pybind11::return_value_policy::automatic);
		cl.def("right_lane_boundary_id_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::right_lane_boundary_id_size, "C++: osi3::Lane_Classification::right_lane_boundary_id_size() const --> int");
		cl.def("clear_right_lane_boundary_id", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_right_lane_boundary_id, "C++: osi3::Lane_Classification::clear_right_lane_boundary_id() --> void");
		cl.def("mutable_right_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_right_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_right_lane_boundary_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_right_lane_boundary_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_right_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_right_lane_boundary_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("right_lane_boundary_id", (const class osi3::Identifier & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::right_lane_boundary_id, "C++: osi3::Lane_Classification::right_lane_boundary_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_right_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_right_lane_boundary_id, "C++: osi3::Lane_Classification::add_right_lane_boundary_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("right_lane_boundary_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::right_lane_boundary_id, "C++: osi3::Lane_Classification::right_lane_boundary_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("left_lane_boundary_id_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::left_lane_boundary_id_size, "C++: osi3::Lane_Classification::left_lane_boundary_id_size() const --> int");
		cl.def("clear_left_lane_boundary_id", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_left_lane_boundary_id, "C++: osi3::Lane_Classification::clear_left_lane_boundary_id() --> void");
		cl.def("mutable_left_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_left_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_left_lane_boundary_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_left_lane_boundary_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_left_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_left_lane_boundary_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("left_lane_boundary_id", (const class osi3::Identifier & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::left_lane_boundary_id, "C++: osi3::Lane_Classification::left_lane_boundary_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_left_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_left_lane_boundary_id, "C++: osi3::Lane_Classification::add_left_lane_boundary_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("left_lane_boundary_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::left_lane_boundary_id, "C++: osi3::Lane_Classification::left_lane_boundary_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("free_lane_boundary_id_size", (int (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::free_lane_boundary_id_size, "C++: osi3::Lane_Classification::free_lane_boundary_id_size() const --> int");
		cl.def("clear_free_lane_boundary_id", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_free_lane_boundary_id, "C++: osi3::Lane_Classification::clear_free_lane_boundary_id() --> void");
		cl.def("mutable_free_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)(int)) &osi3::Lane_Classification::mutable_free_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_free_lane_boundary_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_free_lane_boundary_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_free_lane_boundary_id, "C++: osi3::Lane_Classification::mutable_free_lane_boundary_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("free_lane_boundary_id", (const class osi3::Identifier & (osi3::Lane_Classification::*)(int) const) &osi3::Lane_Classification::free_lane_boundary_id, "C++: osi3::Lane_Classification::free_lane_boundary_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_free_lane_boundary_id", (class osi3::Identifier * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::add_free_lane_boundary_id, "C++: osi3::Lane_Classification::add_free_lane_boundary_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("free_lane_boundary_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::free_lane_boundary_id, "C++: osi3::Lane_Classification::free_lane_boundary_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("has_road_condition", (bool (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::has_road_condition, "C++: osi3::Lane_Classification::has_road_condition() const --> bool");
		cl.def("clear_road_condition", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_road_condition, "C++: osi3::Lane_Classification::clear_road_condition() --> void");
		cl.def("road_condition", (const class osi3::Lane_Classification_RoadCondition & (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::road_condition, "C++: osi3::Lane_Classification::road_condition() const --> const class osi3::Lane_Classification_RoadCondition &", pybind11::return_value_policy::automatic);
		cl.def("release_road_condition", (class osi3::Lane_Classification_RoadCondition * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::release_road_condition, "C++: osi3::Lane_Classification::release_road_condition() --> class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::reference);
		cl.def("mutable_road_condition", (class osi3::Lane_Classification_RoadCondition * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::mutable_road_condition, "C++: osi3::Lane_Classification::mutable_road_condition() --> class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_road_condition", (void (osi3::Lane_Classification::*)(class osi3::Lane_Classification_RoadCondition *)) &osi3::Lane_Classification::set_allocated_road_condition, "C++: osi3::Lane_Classification::set_allocated_road_condition(class osi3::Lane_Classification_RoadCondition *) --> void", pybind11::arg("road_condition"));
		cl.def("unsafe_arena_set_allocated_road_condition", (void (osi3::Lane_Classification::*)(class osi3::Lane_Classification_RoadCondition *)) &osi3::Lane_Classification::unsafe_arena_set_allocated_road_condition, "C++: osi3::Lane_Classification::unsafe_arena_set_allocated_road_condition(class osi3::Lane_Classification_RoadCondition *) --> void", pybind11::arg("road_condition"));
		cl.def("unsafe_arena_release_road_condition", (class osi3::Lane_Classification_RoadCondition * (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::unsafe_arena_release_road_condition, "C++: osi3::Lane_Classification::unsafe_arena_release_road_condition() --> class osi3::Lane_Classification_RoadCondition *", pybind11::return_value_policy::reference);
		cl.def("clear_type", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_type, "C++: osi3::Lane_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::Lane_Classification_Type (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::type, "C++: osi3::Lane_Classification::type() const --> enum osi3::Lane_Classification_Type");
		cl.def("set_type", (void (osi3::Lane_Classification::*)(enum osi3::Lane_Classification_Type)) &osi3::Lane_Classification::set_type, "C++: osi3::Lane_Classification::set_type(enum osi3::Lane_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_is_host_vehicle_lane", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_is_host_vehicle_lane, "C++: osi3::Lane_Classification::clear_is_host_vehicle_lane() --> void");
		cl.def("is_host_vehicle_lane", (bool (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::is_host_vehicle_lane, "C++: osi3::Lane_Classification::is_host_vehicle_lane() const --> bool");
		cl.def("set_is_host_vehicle_lane", (void (osi3::Lane_Classification::*)(bool)) &osi3::Lane_Classification::set_is_host_vehicle_lane, "C++: osi3::Lane_Classification::set_is_host_vehicle_lane(bool) --> void", pybind11::arg("value"));
		cl.def("clear_centerline_is_driving_direction", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_centerline_is_driving_direction, "C++: osi3::Lane_Classification::clear_centerline_is_driving_direction() --> void");
		cl.def("centerline_is_driving_direction", (bool (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::centerline_is_driving_direction, "C++: osi3::Lane_Classification::centerline_is_driving_direction() const --> bool");
		cl.def("set_centerline_is_driving_direction", (void (osi3::Lane_Classification::*)(bool)) &osi3::Lane_Classification::set_centerline_is_driving_direction, "C++: osi3::Lane_Classification::set_centerline_is_driving_direction(bool) --> void", pybind11::arg("value"));
		cl.def("clear_subtype", (void (osi3::Lane_Classification::*)()) &osi3::Lane_Classification::clear_subtype, "C++: osi3::Lane_Classification::clear_subtype() --> void");
		cl.def("subtype", (enum osi3::Lane_Classification_Subtype (osi3::Lane_Classification::*)() const) &osi3::Lane_Classification::subtype, "C++: osi3::Lane_Classification::subtype() const --> enum osi3::Lane_Classification_Subtype");
		cl.def("set_subtype", (void (osi3::Lane_Classification::*)(enum osi3::Lane_Classification_Subtype)) &osi3::Lane_Classification::set_subtype, "C++: osi3::Lane_Classification::set_subtype(enum osi3::Lane_Classification_Subtype) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_28.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_28(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B379_[osi3::Lane] ";
	{ // osi3::Lane file: line:1013
		pybind11::class_<osi3::Lane, std::shared_ptr<osi3::Lane>, google::protobuf::Message> cl(M("osi3"), "Lane", "");
		cl.def( pybind11::init( [](){ return new osi3::Lane(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Lane const &o){ return new osi3::Lane(o); } ) );
		cl.def("assign", (class osi3::Lane & (osi3::Lane::*)(const class osi3::Lane &)) &osi3::Lane::operator=, "C++: osi3::Lane::operator=(const class osi3::Lane &) --> class osi3::Lane &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane::descriptor, "C++: osi3::Lane::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Lane::GetDescriptor, "C++: osi3::Lane::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Lane::GetReflection, "C++: osi3::Lane::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Lane & (*)()) &osi3::Lane::default_instance, "C++: osi3::Lane::default_instance() --> const class osi3::Lane &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Lane * (*)()) &osi3::Lane::internal_default_instance, "C++: osi3::Lane::internal_default_instance() --> const class osi3::Lane *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Lane::*)(class osi3::Lane *)) &osi3::Lane::Swap, "C++: osi3::Lane::Swap(class osi3::Lane *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Lane::*)(class osi3::Lane *)) &osi3::Lane::UnsafeArenaSwap, "C++: osi3::Lane::UnsafeArenaSwap(class osi3::Lane *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Lane * (osi3::Lane::*)() const) &osi3::Lane::New, "C++: osi3::Lane::New() const --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Lane * (osi3::Lane::*)(class google::protobuf::Arena *) const) &osi3::Lane::New, "C++: osi3::Lane::New(class google::protobuf::Arena *) const --> class osi3::Lane *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Lane::*)(const class google::protobuf::Message &)) &osi3::Lane::CopyFrom, "C++: osi3::Lane::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane::*)(const class google::protobuf::Message &)) &osi3::Lane::MergeFrom, "C++: osi3::Lane::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Lane::*)(const class osi3::Lane &)) &osi3::Lane::CopyFrom, "C++: osi3::Lane::CopyFrom(const class osi3::Lane &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Lane::*)(const class osi3::Lane &)) &osi3::Lane::MergeFrom, "C++: osi3::Lane::MergeFrom(const class osi3::Lane &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Lane::*)()) &osi3::Lane::Clear, "C++: osi3::Lane::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Lane::*)() const) &osi3::Lane::IsInitialized, "C++: osi3::Lane::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Lane::*)() const) &osi3::Lane::ByteSizeLong, "C++: osi3::Lane::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Lane::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Lane::_InternalParse, "C++: osi3::Lane::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Lane::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Lane::_InternalSerialize, "C++: osi3::Lane::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Lane::*)() const) &osi3::Lane::GetCachedSize, "C++: osi3::Lane::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Lane::*)() const) &osi3::Lane::GetMetadata, "C++: osi3::Lane::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_id", (bool (osi3::Lane::*)() const) &osi3::Lane::has_id, "C++: osi3::Lane::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::Lane::*)()) &osi3::Lane::clear_id, "C++: osi3::Lane::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::Lane::*)() const) &osi3::Lane::id, "C++: osi3::Lane::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::Lane::*)()) &osi3::Lane::release_id, "C++: osi3::Lane::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::Lane::*)()) &osi3::Lane::mutable_id, "C++: osi3::Lane::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::Lane::*)(class osi3::Identifier *)) &osi3::Lane::set_allocated_id, "C++: osi3::Lane::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::Lane::*)(class osi3::Identifier *)) &osi3::Lane::unsafe_arena_set_allocated_id, "C++: osi3::Lane::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::Lane::*)()) &osi3::Lane::unsafe_arena_release_id, "C++: osi3::Lane::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::Lane::*)() const) &osi3::Lane::has_classification, "C++: osi3::Lane::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::Lane::*)()) &osi3::Lane::clear_classification, "C++: osi3::Lane::clear_classification() --> void");
		cl.def("classification", (const class osi3::Lane_Classification & (osi3::Lane::*)() const) &osi3::Lane::classification, "C++: osi3::Lane::classification() const --> const class osi3::Lane_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::Lane_Classification * (osi3::Lane::*)()) &osi3::Lane::release_classification, "C++: osi3::Lane::release_classification() --> class osi3::Lane_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::Lane_Classification * (osi3::Lane::*)()) &osi3::Lane::mutable_classification, "C++: osi3::Lane::mutable_classification() --> class osi3::Lane_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::Lane::*)(class osi3::Lane_Classification *)) &osi3::Lane::set_allocated_classification, "C++: osi3::Lane::set_allocated_classification(class osi3::Lane_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::Lane::*)(class osi3::Lane_Classification *)) &osi3::Lane::unsafe_arena_set_allocated_classification, "C++: osi3::Lane::unsafe_arena_set_allocated_classification(class osi3::Lane_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::Lane_Classification * (osi3::Lane::*)()) &osi3::Lane::unsafe_arena_release_classification, "C++: osi3::Lane::unsafe_arena_release_classification() --> class osi3::Lane_Classification *", pybind11::return_value_policy::reference);
	}
	std::cout << "B380_[void osi3::swap(class osi3::Lane &, class osi3::Lane &)] ";
	std::cout << "B381_[osi3::LaneBoundary_BoundaryPoint] ";
	{ // osi3::LaneBoundary_BoundaryPoint file: line:1181
		pybind11::class_<osi3::LaneBoundary_BoundaryPoint, std::shared_ptr<osi3::LaneBoundary_BoundaryPoint>, google::protobuf::Message> cl(M("osi3"), "LaneBoundary_BoundaryPoint", "");
		cl.def( pybind11::init( [](){ return new osi3::LaneBoundary_BoundaryPoint(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LaneBoundary_BoundaryPoint const &o){ return new osi3::LaneBoundary_BoundaryPoint(o); } ) );
		cl.def("assign", (class osi3::LaneBoundary_BoundaryPoint & (osi3::LaneBoundary_BoundaryPoint::*)(const class osi3::LaneBoundary_BoundaryPoint &)) &osi3::LaneBoundary_BoundaryPoint::operator=, "C++: osi3::LaneBoundary_BoundaryPoint::operator=(const class osi3::LaneBoundary_BoundaryPoint &) --> class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary_BoundaryPoint::descriptor, "C++: osi3::LaneBoundary_BoundaryPoint::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary_BoundaryPoint::GetDescriptor, "C++: osi3::LaneBoundary_BoundaryPoint::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LaneBoundary_BoundaryPoint::GetReflection, "C++: osi3::LaneBoundary_BoundaryPoint::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LaneBoundary_BoundaryPoint & (*)()) &osi3::LaneBoundary_BoundaryPoint::default_instance, "C++: osi3::LaneBoundary_BoundaryPoint::default_instance() --> const class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LaneBoundary_BoundaryPoint * (*)()) &osi3::LaneBoundary_BoundaryPoint::internal_default_instance, "C++: osi3::LaneBoundary_BoundaryPoint::internal_default_instance() --> const class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LaneBoundary_BoundaryPoint::*)(class osi3::LaneBoundary_BoundaryPoint *)) &osi3::LaneBoundary_BoundaryPoint::Swap, "C++: osi3::LaneBoundary_BoundaryPoint::Swap(class osi3::LaneBoundary_BoundaryPoint *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LaneBoundary_BoundaryPoint::*)(class osi3::LaneBoundary_BoundaryPoint *)) &osi3::LaneBoundary_BoundaryPoint::UnsafeArenaSwap, "C++: osi3::LaneBoundary_BoundaryPoint::UnsafeArenaSwap(class osi3::LaneBoundary_BoundaryPoint *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LaneBoundary_BoundaryPoint * (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::New, "C++: osi3::LaneBoundary_BoundaryPoint::New() const --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LaneBoundary_BoundaryPoint * (osi3::LaneBoundary_BoundaryPoint::*)(class google::protobuf::Arena *) const) &osi3::LaneBoundary_BoundaryPoint::New, "C++: osi3::LaneBoundary_BoundaryPoint::New(class google::protobuf::Arena *) const --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary_BoundaryPoint::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary_BoundaryPoint::CopyFrom, "C++: osi3::LaneBoundary_BoundaryPoint::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary_BoundaryPoint::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary_BoundaryPoint::MergeFrom, "C++: osi3::LaneBoundary_BoundaryPoint::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary_BoundaryPoint::*)(const class osi3::LaneBoundary_BoundaryPoint &)) &osi3::LaneBoundary_BoundaryPoint::CopyFrom, "C++: osi3::LaneBoundary_BoundaryPoint::CopyFrom(const class osi3::LaneBoundary_BoundaryPoint &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary_BoundaryPoint::*)(const class osi3::LaneBoundary_BoundaryPoint &)) &osi3::LaneBoundary_BoundaryPoint::MergeFrom, "C++: osi3::LaneBoundary_BoundaryPoint::MergeFrom(const class osi3::LaneBoundary_BoundaryPoint &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::Clear, "C++: osi3::LaneBoundary_BoundaryPoint::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::IsInitialized, "C++: osi3::LaneBoundary_BoundaryPoint::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::ByteSizeLong, "C++: osi3::LaneBoundary_BoundaryPoint::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LaneBoundary_BoundaryPoint::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LaneBoundary_BoundaryPoint::_InternalParse, "C++: osi3::LaneBoundary_BoundaryPoint::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LaneBoundary_BoundaryPoint::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LaneBoundary_BoundaryPoint::_InternalSerialize, "C++: osi3::LaneBoundary_BoundaryPoint::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::GetCachedSize, "C++: osi3::LaneBoundary_BoundaryPoint::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::GetMetadata, "C++: osi3::LaneBoundary_BoundaryPoint::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_position", (bool (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::has_position, "C++: osi3::LaneBoundary_BoundaryPoint::has_position() const --> bool");
		cl.def("clear_position", (void (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::clear_position, "C++: osi3::LaneBoundary_BoundaryPoint::clear_position() --> void");
		cl.def("position", (const class osi3::Vector3d & (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::position, "C++: osi3::LaneBoundary_BoundaryPoint::position() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_position", (class osi3::Vector3d * (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::release_position, "C++: osi3::LaneBoundary_BoundaryPoint::release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_position", (class osi3::Vector3d * (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::mutable_position, "C++: osi3::LaneBoundary_BoundaryPoint::mutable_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_position", (void (osi3::LaneBoundary_BoundaryPoint::*)(class osi3::Vector3d *)) &osi3::LaneBoundary_BoundaryPoint::set_allocated_position, "C++: osi3::LaneBoundary_BoundaryPoint::set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_set_allocated_position", (void (osi3::LaneBoundary_BoundaryPoint::*)(class osi3::Vector3d *)) &osi3::LaneBoundary_BoundaryPoint::unsafe_arena_set_allocated_position, "C++: osi3::LaneBoundary_BoundaryPoint::unsafe_arena_set_allocated_position(class osi3::Vector3d *) --> void", pybind11::arg("position"));
		cl.def("unsafe_arena_release_position", (class osi3::Vector3d * (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::unsafe_arena_release_position, "C++: osi3::LaneBoundary_BoundaryPoint::unsafe_arena_release_position() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("clear_width", (void (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::clear_width, "C++: osi3::LaneBoundary_BoundaryPoint::clear_width() --> void");
		cl.def("width", (double (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::width, "C++: osi3::LaneBoundary_BoundaryPoint::width() const --> double");
		cl.def("set_width", (void (osi3::LaneBoundary_BoundaryPoint::*)(double)) &osi3::LaneBoundary_BoundaryPoint::set_width, "C++: osi3::LaneBoundary_BoundaryPoint::set_width(double) --> void", pybind11::arg("value"));
		cl.def("clear_height", (void (osi3::LaneBoundary_BoundaryPoint::*)()) &osi3::LaneBoundary_BoundaryPoint::clear_height, "C++: osi3::LaneBoundary_BoundaryPoint::clear_height() --> void");
		cl.def("height", (double (osi3::LaneBoundary_BoundaryPoint::*)() const) &osi3::LaneBoundary_BoundaryPoint::height, "C++: osi3::LaneBoundary_BoundaryPoint::height() const --> double");
		cl.def("set_height", (void (osi3::LaneBoundary_BoundaryPoint::*)(double)) &osi3::LaneBoundary_BoundaryPoint::set_height, "C++: osi3::LaneBoundary_BoundaryPoint::set_height(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_29.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_29(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B382_[osi3::LaneBoundary_Classification] ";
	{ // osi3::LaneBoundary_Classification file: line:1349
		pybind11::class_<osi3::LaneBoundary_Classification, std::shared_ptr<osi3::LaneBoundary_Classification>, google::protobuf::Message> cl(M("osi3"), "LaneBoundary_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::LaneBoundary_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LaneBoundary_Classification const &o){ return new osi3::LaneBoundary_Classification(o); } ) );
		cl.def("assign", (class osi3::LaneBoundary_Classification & (osi3::LaneBoundary_Classification::*)(const class osi3::LaneBoundary_Classification &)) &osi3::LaneBoundary_Classification::operator=, "C++: osi3::LaneBoundary_Classification::operator=(const class osi3::LaneBoundary_Classification &) --> class osi3::LaneBoundary_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary_Classification::descriptor, "C++: osi3::LaneBoundary_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary_Classification::GetDescriptor, "C++: osi3::LaneBoundary_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LaneBoundary_Classification::GetReflection, "C++: osi3::LaneBoundary_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LaneBoundary_Classification & (*)()) &osi3::LaneBoundary_Classification::default_instance, "C++: osi3::LaneBoundary_Classification::default_instance() --> const class osi3::LaneBoundary_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LaneBoundary_Classification * (*)()) &osi3::LaneBoundary_Classification::internal_default_instance, "C++: osi3::LaneBoundary_Classification::internal_default_instance() --> const class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LaneBoundary_Classification::*)(class osi3::LaneBoundary_Classification *)) &osi3::LaneBoundary_Classification::Swap, "C++: osi3::LaneBoundary_Classification::Swap(class osi3::LaneBoundary_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LaneBoundary_Classification::*)(class osi3::LaneBoundary_Classification *)) &osi3::LaneBoundary_Classification::UnsafeArenaSwap, "C++: osi3::LaneBoundary_Classification::UnsafeArenaSwap(class osi3::LaneBoundary_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LaneBoundary_Classification * (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::New, "C++: osi3::LaneBoundary_Classification::New() const --> class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LaneBoundary_Classification * (osi3::LaneBoundary_Classification::*)(class google::protobuf::Arena *) const) &osi3::LaneBoundary_Classification::New, "C++: osi3::LaneBoundary_Classification::New(class google::protobuf::Arena *) const --> class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary_Classification::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary_Classification::CopyFrom, "C++: osi3::LaneBoundary_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary_Classification::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary_Classification::MergeFrom, "C++: osi3::LaneBoundary_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary_Classification::*)(const class osi3::LaneBoundary_Classification &)) &osi3::LaneBoundary_Classification::CopyFrom, "C++: osi3::LaneBoundary_Classification::CopyFrom(const class osi3::LaneBoundary_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary_Classification::*)(const class osi3::LaneBoundary_Classification &)) &osi3::LaneBoundary_Classification::MergeFrom, "C++: osi3::LaneBoundary_Classification::MergeFrom(const class osi3::LaneBoundary_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::Clear, "C++: osi3::LaneBoundary_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::IsInitialized, "C++: osi3::LaneBoundary_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::ByteSizeLong, "C++: osi3::LaneBoundary_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LaneBoundary_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LaneBoundary_Classification::_InternalParse, "C++: osi3::LaneBoundary_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LaneBoundary_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LaneBoundary_Classification::_InternalSerialize, "C++: osi3::LaneBoundary_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::GetCachedSize, "C++: osi3::LaneBoundary_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::GetMetadata, "C++: osi3::LaneBoundary_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Type_IsValid", (bool (*)(int)) &osi3::LaneBoundary_Classification::Type_IsValid, "C++: osi3::LaneBoundary_Classification::Type_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Type_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::LaneBoundary_Classification::Type_descriptor, "C++: osi3::LaneBoundary_Classification::Type_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Type_Parse", (bool (*)(const std::string &, enum osi3::LaneBoundary_Classification_Type *)) &osi3::LaneBoundary_Classification::Type_Parse, "C++: osi3::LaneBoundary_Classification::Type_Parse(const std::string &, enum osi3::LaneBoundary_Classification_Type *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Color_IsValid", (bool (*)(int)) &osi3::LaneBoundary_Classification::Color_IsValid, "C++: osi3::LaneBoundary_Classification::Color_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Color_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::LaneBoundary_Classification::Color_descriptor, "C++: osi3::LaneBoundary_Classification::Color_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Color_Parse", (bool (*)(const std::string &, enum osi3::LaneBoundary_Classification_Color *)) &osi3::LaneBoundary_Classification::Color_Parse, "C++: osi3::LaneBoundary_Classification::Color_Parse(const std::string &, enum osi3::LaneBoundary_Classification_Color *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("limiting_structure_id_size", (int (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::limiting_structure_id_size, "C++: osi3::LaneBoundary_Classification::limiting_structure_id_size() const --> int");
		cl.def("clear_limiting_structure_id", (void (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::clear_limiting_structure_id, "C++: osi3::LaneBoundary_Classification::clear_limiting_structure_id() --> void");
		cl.def("mutable_limiting_structure_id", (class osi3::Identifier * (osi3::LaneBoundary_Classification::*)(int)) &osi3::LaneBoundary_Classification::mutable_limiting_structure_id, "C++: osi3::LaneBoundary_Classification::mutable_limiting_structure_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_limiting_structure_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::mutable_limiting_structure_id, "C++: osi3::LaneBoundary_Classification::mutable_limiting_structure_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("limiting_structure_id", (const class osi3::Identifier & (osi3::LaneBoundary_Classification::*)(int) const) &osi3::LaneBoundary_Classification::limiting_structure_id, "C++: osi3::LaneBoundary_Classification::limiting_structure_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_limiting_structure_id", (class osi3::Identifier * (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::add_limiting_structure_id, "C++: osi3::LaneBoundary_Classification::add_limiting_structure_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("limiting_structure_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::limiting_structure_id, "C++: osi3::LaneBoundary_Classification::limiting_structure_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("clear_type", (void (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::clear_type, "C++: osi3::LaneBoundary_Classification::clear_type() --> void");
		cl.def("type", (enum osi3::LaneBoundary_Classification_Type (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::type, "C++: osi3::LaneBoundary_Classification::type() const --> enum osi3::LaneBoundary_Classification_Type");
		cl.def("set_type", (void (osi3::LaneBoundary_Classification::*)(enum osi3::LaneBoundary_Classification_Type)) &osi3::LaneBoundary_Classification::set_type, "C++: osi3::LaneBoundary_Classification::set_type(enum osi3::LaneBoundary_Classification_Type) --> void", pybind11::arg("value"));
		cl.def("clear_color", (void (osi3::LaneBoundary_Classification::*)()) &osi3::LaneBoundary_Classification::clear_color, "C++: osi3::LaneBoundary_Classification::clear_color() --> void");
		cl.def("color", (enum osi3::LaneBoundary_Classification_Color (osi3::LaneBoundary_Classification::*)() const) &osi3::LaneBoundary_Classification::color, "C++: osi3::LaneBoundary_Classification::color() const --> enum osi3::LaneBoundary_Classification_Color");
		cl.def("set_color", (void (osi3::LaneBoundary_Classification::*)(enum osi3::LaneBoundary_Classification_Color)) &osi3::LaneBoundary_Classification::set_color, "C++: osi3::LaneBoundary_Classification::set_color(enum osi3::LaneBoundary_Classification_Color) --> void", pybind11::arg("value"));
	}
	std::cout << "B383_[void osi3::swap(class osi3::LaneBoundary_Classification &, class osi3::LaneBoundary_Classification &)] ";
	std::cout << "B384_[osi3::LaneBoundary] ";
	{ // osi3::LaneBoundary file: line:1615
		pybind11::class_<osi3::LaneBoundary, std::shared_ptr<osi3::LaneBoundary>, google::protobuf::Message> cl(M("osi3"), "LaneBoundary", "");
		cl.def( pybind11::init( [](){ return new osi3::LaneBoundary(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LaneBoundary const &o){ return new osi3::LaneBoundary(o); } ) );
		cl.def("assign", (class osi3::LaneBoundary & (osi3::LaneBoundary::*)(const class osi3::LaneBoundary &)) &osi3::LaneBoundary::operator=, "C++: osi3::LaneBoundary::operator=(const class osi3::LaneBoundary &) --> class osi3::LaneBoundary &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary::descriptor, "C++: osi3::LaneBoundary::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LaneBoundary::GetDescriptor, "C++: osi3::LaneBoundary::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LaneBoundary::GetReflection, "C++: osi3::LaneBoundary::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LaneBoundary & (*)()) &osi3::LaneBoundary::default_instance, "C++: osi3::LaneBoundary::default_instance() --> const class osi3::LaneBoundary &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LaneBoundary * (*)()) &osi3::LaneBoundary::internal_default_instance, "C++: osi3::LaneBoundary::internal_default_instance() --> const class osi3::LaneBoundary *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LaneBoundary::*)(class osi3::LaneBoundary *)) &osi3::LaneBoundary::Swap, "C++: osi3::LaneBoundary::Swap(class osi3::LaneBoundary *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LaneBoundary::*)(class osi3::LaneBoundary *)) &osi3::LaneBoundary::UnsafeArenaSwap, "C++: osi3::LaneBoundary::UnsafeArenaSwap(class osi3::LaneBoundary *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LaneBoundary * (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::New, "C++: osi3::LaneBoundary::New() const --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LaneBoundary * (osi3::LaneBoundary::*)(class google::protobuf::Arena *) const) &osi3::LaneBoundary::New, "C++: osi3::LaneBoundary::New(class google::protobuf::Arena *) const --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary::CopyFrom, "C++: osi3::LaneBoundary::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary::*)(const class google::protobuf::Message &)) &osi3::LaneBoundary::MergeFrom, "C++: osi3::LaneBoundary::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LaneBoundary::*)(const class osi3::LaneBoundary &)) &osi3::LaneBoundary::CopyFrom, "C++: osi3::LaneBoundary::CopyFrom(const class osi3::LaneBoundary &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LaneBoundary::*)(const class osi3::LaneBoundary &)) &osi3::LaneBoundary::MergeFrom, "C++: osi3::LaneBoundary::MergeFrom(const class osi3::LaneBoundary &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::Clear, "C++: osi3::LaneBoundary::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::IsInitialized, "C++: osi3::LaneBoundary::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::ByteSizeLong, "C++: osi3::LaneBoundary::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LaneBoundary::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LaneBoundary::_InternalParse, "C++: osi3::LaneBoundary::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LaneBoundary::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LaneBoundary::_InternalSerialize, "C++: osi3::LaneBoundary::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::GetCachedSize, "C++: osi3::LaneBoundary::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::GetMetadata, "C++: osi3::LaneBoundary::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("boundary_line_size", (int (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::boundary_line_size, "C++: osi3::LaneBoundary::boundary_line_size() const --> int");
		cl.def("clear_boundary_line", (void (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::clear_boundary_line, "C++: osi3::LaneBoundary::clear_boundary_line() --> void");
		cl.def("mutable_boundary_line", (class osi3::LaneBoundary_BoundaryPoint * (osi3::LaneBoundary::*)(int)) &osi3::LaneBoundary::mutable_boundary_line, "C++: osi3::LaneBoundary::mutable_boundary_line(int) --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_boundary_line", (class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::mutable_boundary_line, "C++: osi3::LaneBoundary::mutable_boundary_line() --> class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> *", pybind11::return_value_policy::reference);
		cl.def("boundary_line", (const class osi3::LaneBoundary_BoundaryPoint & (osi3::LaneBoundary::*)(int) const) &osi3::LaneBoundary::boundary_line, "C++: osi3::LaneBoundary::boundary_line(int) const --> const class osi3::LaneBoundary_BoundaryPoint &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_boundary_line", (class osi3::LaneBoundary_BoundaryPoint * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::add_boundary_line, "C++: osi3::LaneBoundary::add_boundary_line() --> class osi3::LaneBoundary_BoundaryPoint *", pybind11::return_value_policy::reference);
		cl.def("boundary_line", (const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> & (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::boundary_line, "C++: osi3::LaneBoundary::boundary_line() const --> const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary_BoundaryPoint> &", pybind11::return_value_policy::automatic);
		cl.def("has_id", (bool (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::has_id, "C++: osi3::LaneBoundary::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::clear_id, "C++: osi3::LaneBoundary::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::id, "C++: osi3::LaneBoundary::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::release_id, "C++: osi3::LaneBoundary::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::mutable_id, "C++: osi3::LaneBoundary::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::LaneBoundary::*)(class osi3::Identifier *)) &osi3::LaneBoundary::set_allocated_id, "C++: osi3::LaneBoundary::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::LaneBoundary::*)(class osi3::Identifier *)) &osi3::LaneBoundary::unsafe_arena_set_allocated_id, "C++: osi3::LaneBoundary::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::unsafe_arena_release_id, "C++: osi3::LaneBoundary::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::has_classification, "C++: osi3::LaneBoundary::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::clear_classification, "C++: osi3::LaneBoundary::clear_classification() --> void");
		cl.def("classification", (const class osi3::LaneBoundary_Classification & (osi3::LaneBoundary::*)() const) &osi3::LaneBoundary::classification, "C++: osi3::LaneBoundary::classification() const --> const class osi3::LaneBoundary_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::LaneBoundary_Classification * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::release_classification, "C++: osi3::LaneBoundary::release_classification() --> class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::LaneBoundary_Classification * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::mutable_classification, "C++: osi3::LaneBoundary::mutable_classification() --> class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::LaneBoundary::*)(class osi3::LaneBoundary_Classification *)) &osi3::LaneBoundary::set_allocated_classification, "C++: osi3::LaneBoundary::set_allocated_classification(class osi3::LaneBoundary_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::LaneBoundary::*)(class osi3::LaneBoundary_Classification *)) &osi3::LaneBoundary::unsafe_arena_set_allocated_classification, "C++: osi3::LaneBoundary::unsafe_arena_set_allocated_classification(class osi3::LaneBoundary_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::LaneBoundary_Classification * (osi3::LaneBoundary::*)()) &osi3::LaneBoundary::unsafe_arena_release_classification, "C++: osi3::LaneBoundary::unsafe_arena_release_classification() --> class osi3::LaneBoundary_Classification *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_30.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_30(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B385_[osi3::Occupant_Classification_Seat] ";
	// osi3::Occupant_Classification_Seat file: line:73
	pybind11::enum_<osi3::Occupant_Classification_Seat>(M("osi3"), "Occupant_Classification_Seat", pybind11::arithmetic(), "")
		.value("Occupant_Classification_Seat_SEAT_UNKNOWN", osi3::Occupant_Classification_Seat_SEAT_UNKNOWN)
		.value("Occupant_Classification_Seat_SEAT_OTHER", osi3::Occupant_Classification_Seat_SEAT_OTHER)
		.value("Occupant_Classification_Seat_SEAT_FRONT_LEFT", osi3::Occupant_Classification_Seat_SEAT_FRONT_LEFT)
		.value("Occupant_Classification_Seat_SEAT_FRONT_RIGHT", osi3::Occupant_Classification_Seat_SEAT_FRONT_RIGHT)
		.value("Occupant_Classification_Seat_SEAT_FRONT_MIDDLE", osi3::Occupant_Classification_Seat_SEAT_FRONT_MIDDLE)
		.value("Occupant_Classification_Seat_SEAT_BACK_LEFT", osi3::Occupant_Classification_Seat_SEAT_BACK_LEFT)
		.value("Occupant_Classification_Seat_SEAT_BACK_RIGHT", osi3::Occupant_Classification_Seat_SEAT_BACK_RIGHT)
		.value("Occupant_Classification_Seat_SEAT_BACK_MIDDLE", osi3::Occupant_Classification_Seat_SEAT_BACK_MIDDLE)
		.value("Occupant_Classification_Seat_SEAT_THIRD_ROW_LEFT", osi3::Occupant_Classification_Seat_SEAT_THIRD_ROW_LEFT)
		.value("Occupant_Classification_Seat_SEAT_THIRD_ROW_RIGHT", osi3::Occupant_Classification_Seat_SEAT_THIRD_ROW_RIGHT)
		.value("Occupant_Classification_Seat_SEAT_THIRD_ROW_MIDDLE", osi3::Occupant_Classification_Seat_SEAT_THIRD_ROW_MIDDLE)
		.value("Occupant_Classification_Seat_Occupant_Classification_Seat_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::Occupant_Classification_Seat_Occupant_Classification_Seat_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("Occupant_Classification_Seat_Occupant_Classification_Seat_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::Occupant_Classification_Seat_Occupant_Classification_Seat_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B386_[bool osi3::Occupant_Classification_Seat_IsValid(int)] ";
	std::cout << "B387_[const class google::protobuf::EnumDescriptor * osi3::Occupant_Classification_Seat_descriptor()] ";
	std::cout << "B388_[bool osi3::Occupant_Classification_Seat_Parse(const std::string &, enum osi3::Occupant_Classification_Seat *)] ";
	std::cout << "B389_[osi3::Occupant_Classification_SteeringControl] ";
	// osi3::Occupant_Classification_SteeringControl file: line:107
	pybind11::enum_<osi3::Occupant_Classification_SteeringControl>(M("osi3"), "Occupant_Classification_SteeringControl", pybind11::arithmetic(), "")
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_UNKNOWN", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_UNKNOWN)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_OTHER", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_OTHER)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_NO_HAND", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_NO_HAND)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_ONE_HAND", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_ONE_HAND)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_BOTH_HANDS", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_BOTH_HANDS)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_LEFT_HAND", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_LEFT_HAND)
		.value("Occupant_Classification_SteeringControl_STEERING_CONTROL_RIGHT_HAND", osi3::Occupant_Classification_SteeringControl_STEERING_CONTROL_RIGHT_HAND)
		.value("Occupant_Classification_SteeringControl_Occupant_Classification_SteeringControl_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::Occupant_Classification_SteeringControl_Occupant_Classification_SteeringControl_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("Occupant_Classification_SteeringControl_Occupant_Classification_SteeringControl_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::Occupant_Classification_SteeringControl_Occupant_Classification_SteeringControl_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B390_[bool osi3::Occupant_Classification_SteeringControl_IsValid(int)] ";
	std::cout << "B391_[const class google::protobuf::EnumDescriptor * osi3::Occupant_Classification_SteeringControl_descriptor()] ";
	std::cout << "B392_[bool osi3::Occupant_Classification_SteeringControl_Parse(const std::string &, enum osi3::Occupant_Classification_SteeringControl *)] ";
	std::cout << "B393_[osi3::Occupant_Classification] ";
	{ // osi3::Occupant_Classification file: line:139
		pybind11::class_<osi3::Occupant_Classification, std::shared_ptr<osi3::Occupant_Classification>, google::protobuf::Message> cl(M("osi3"), "Occupant_Classification", "");
		cl.def( pybind11::init( [](){ return new osi3::Occupant_Classification(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Occupant_Classification const &o){ return new osi3::Occupant_Classification(o); } ) );
		cl.def("assign", (class osi3::Occupant_Classification & (osi3::Occupant_Classification::*)(const class osi3::Occupant_Classification &)) &osi3::Occupant_Classification::operator=, "C++: osi3::Occupant_Classification::operator=(const class osi3::Occupant_Classification &) --> class osi3::Occupant_Classification &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Occupant_Classification::descriptor, "C++: osi3::Occupant_Classification::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Occupant_Classification::GetDescriptor, "C++: osi3::Occupant_Classification::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Occupant_Classification::GetReflection, "C++: osi3::Occupant_Classification::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Occupant_Classification & (*)()) &osi3::Occupant_Classification::default_instance, "C++: osi3::Occupant_Classification::default_instance() --> const class osi3::Occupant_Classification &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Occupant_Classification * (*)()) &osi3::Occupant_Classification::internal_default_instance, "C++: osi3::Occupant_Classification::internal_default_instance() --> const class osi3::Occupant_Classification *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Occupant_Classification::*)(class osi3::Occupant_Classification *)) &osi3::Occupant_Classification::Swap, "C++: osi3::Occupant_Classification::Swap(class osi3::Occupant_Classification *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Occupant_Classification::*)(class osi3::Occupant_Classification *)) &osi3::Occupant_Classification::UnsafeArenaSwap, "C++: osi3::Occupant_Classification::UnsafeArenaSwap(class osi3::Occupant_Classification *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Occupant_Classification * (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::New, "C++: osi3::Occupant_Classification::New() const --> class osi3::Occupant_Classification *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Occupant_Classification * (osi3::Occupant_Classification::*)(class google::protobuf::Arena *) const) &osi3::Occupant_Classification::New, "C++: osi3::Occupant_Classification::New(class google::protobuf::Arena *) const --> class osi3::Occupant_Classification *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Occupant_Classification::*)(const class google::protobuf::Message &)) &osi3::Occupant_Classification::CopyFrom, "C++: osi3::Occupant_Classification::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Occupant_Classification::*)(const class google::protobuf::Message &)) &osi3::Occupant_Classification::MergeFrom, "C++: osi3::Occupant_Classification::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Occupant_Classification::*)(const class osi3::Occupant_Classification &)) &osi3::Occupant_Classification::CopyFrom, "C++: osi3::Occupant_Classification::CopyFrom(const class osi3::Occupant_Classification &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Occupant_Classification::*)(const class osi3::Occupant_Classification &)) &osi3::Occupant_Classification::MergeFrom, "C++: osi3::Occupant_Classification::MergeFrom(const class osi3::Occupant_Classification &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Occupant_Classification::*)()) &osi3::Occupant_Classification::Clear, "C++: osi3::Occupant_Classification::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::IsInitialized, "C++: osi3::Occupant_Classification::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::ByteSizeLong, "C++: osi3::Occupant_Classification::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Occupant_Classification::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Occupant_Classification::_InternalParse, "C++: osi3::Occupant_Classification::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Occupant_Classification::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Occupant_Classification::_InternalSerialize, "C++: osi3::Occupant_Classification::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::GetCachedSize, "C++: osi3::Occupant_Classification::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::GetMetadata, "C++: osi3::Occupant_Classification::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Seat_IsValid", (bool (*)(int)) &osi3::Occupant_Classification::Seat_IsValid, "C++: osi3::Occupant_Classification::Seat_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Seat_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::Occupant_Classification::Seat_descriptor, "C++: osi3::Occupant_Classification::Seat_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Seat_Parse", (bool (*)(const std::string &, enum osi3::Occupant_Classification_Seat *)) &osi3::Occupant_Classification::Seat_Parse, "C++: osi3::Occupant_Classification::Seat_Parse(const std::string &, enum osi3::Occupant_Classification_Seat *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("SteeringControl_IsValid", (bool (*)(int)) &osi3::Occupant_Classification::SteeringControl_IsValid, "C++: osi3::Occupant_Classification::SteeringControl_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("SteeringControl_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::Occupant_Classification::SteeringControl_descriptor, "C++: osi3::Occupant_Classification::SteeringControl_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("SteeringControl_Parse", (bool (*)(const std::string &, enum osi3::Occupant_Classification_SteeringControl *)) &osi3::Occupant_Classification::SteeringControl_Parse, "C++: osi3::Occupant_Classification::SteeringControl_Parse(const std::string &, enum osi3::Occupant_Classification_SteeringControl *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("clear_is_driver", (void (osi3::Occupant_Classification::*)()) &osi3::Occupant_Classification::clear_is_driver, "C++: osi3::Occupant_Classification::clear_is_driver() --> void");
		cl.def("is_driver", (bool (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::is_driver, "C++: osi3::Occupant_Classification::is_driver() const --> bool");
		cl.def("set_is_driver", (void (osi3::Occupant_Classification::*)(bool)) &osi3::Occupant_Classification::set_is_driver, "C++: osi3::Occupant_Classification::set_is_driver(bool) --> void", pybind11::arg("value"));
		cl.def("clear_seat", (void (osi3::Occupant_Classification::*)()) &osi3::Occupant_Classification::clear_seat, "C++: osi3::Occupant_Classification::clear_seat() --> void");
		cl.def("seat", (enum osi3::Occupant_Classification_Seat (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::seat, "C++: osi3::Occupant_Classification::seat() const --> enum osi3::Occupant_Classification_Seat");
		cl.def("set_seat", (void (osi3::Occupant_Classification::*)(enum osi3::Occupant_Classification_Seat)) &osi3::Occupant_Classification::set_seat, "C++: osi3::Occupant_Classification::set_seat(enum osi3::Occupant_Classification_Seat) --> void", pybind11::arg("value"));
		cl.def("clear_steering_control", (void (osi3::Occupant_Classification::*)()) &osi3::Occupant_Classification::clear_steering_control, "C++: osi3::Occupant_Classification::clear_steering_control() --> void");
		cl.def("steering_control", (enum osi3::Occupant_Classification_SteeringControl (osi3::Occupant_Classification::*)() const) &osi3::Occupant_Classification::steering_control, "C++: osi3::Occupant_Classification::steering_control() const --> enum osi3::Occupant_Classification_SteeringControl");
		cl.def("set_steering_control", (void (osi3::Occupant_Classification::*)(enum osi3::Occupant_Classification_SteeringControl)) &osi3::Occupant_Classification::set_steering_control, "C++: osi3::Occupant_Classification::set_steering_control(enum osi3::Occupant_Classification_SteeringControl) --> void", pybind11::arg("value"));
	}
	std::cout << "B394_[void osi3::swap(class osi3::Occupant_Classification &, class osi3::Occupant_Classification &)] ";
	std::cout << "B395_[osi3::Occupant] ";
	{ // osi3::Occupant file: line:386
		pybind11::class_<osi3::Occupant, std::shared_ptr<osi3::Occupant>, google::protobuf::Message> cl(M("osi3"), "Occupant", "");
		cl.def( pybind11::init( [](){ return new osi3::Occupant(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::Occupant const &o){ return new osi3::Occupant(o); } ) );
		cl.def("assign", (class osi3::Occupant & (osi3::Occupant::*)(const class osi3::Occupant &)) &osi3::Occupant::operator=, "C++: osi3::Occupant::operator=(const class osi3::Occupant &) --> class osi3::Occupant &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Occupant::descriptor, "C++: osi3::Occupant::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::Occupant::GetDescriptor, "C++: osi3::Occupant::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::Occupant::GetReflection, "C++: osi3::Occupant::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::Occupant & (*)()) &osi3::Occupant::default_instance, "C++: osi3::Occupant::default_instance() --> const class osi3::Occupant &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::Occupant * (*)()) &osi3::Occupant::internal_default_instance, "C++: osi3::Occupant::internal_default_instance() --> const class osi3::Occupant *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::Occupant::*)(class osi3::Occupant *)) &osi3::Occupant::Swap, "C++: osi3::Occupant::Swap(class osi3::Occupant *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::Occupant::*)(class osi3::Occupant *)) &osi3::Occupant::UnsafeArenaSwap, "C++: osi3::Occupant::UnsafeArenaSwap(class osi3::Occupant *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::Occupant * (osi3::Occupant::*)() const) &osi3::Occupant::New, "C++: osi3::Occupant::New() const --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::Occupant * (osi3::Occupant::*)(class google::protobuf::Arena *) const) &osi3::Occupant::New, "C++: osi3::Occupant::New(class google::protobuf::Arena *) const --> class osi3::Occupant *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::Occupant::*)(const class google::protobuf::Message &)) &osi3::Occupant::CopyFrom, "C++: osi3::Occupant::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Occupant::*)(const class google::protobuf::Message &)) &osi3::Occupant::MergeFrom, "C++: osi3::Occupant::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::Occupant::*)(const class osi3::Occupant &)) &osi3::Occupant::CopyFrom, "C++: osi3::Occupant::CopyFrom(const class osi3::Occupant &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::Occupant::*)(const class osi3::Occupant &)) &osi3::Occupant::MergeFrom, "C++: osi3::Occupant::MergeFrom(const class osi3::Occupant &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::Occupant::*)()) &osi3::Occupant::Clear, "C++: osi3::Occupant::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::Occupant::*)() const) &osi3::Occupant::IsInitialized, "C++: osi3::Occupant::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::Occupant::*)() const) &osi3::Occupant::ByteSizeLong, "C++: osi3::Occupant::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::Occupant::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::Occupant::_InternalParse, "C++: osi3::Occupant::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::Occupant::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::Occupant::_InternalSerialize, "C++: osi3::Occupant::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::Occupant::*)() const) &osi3::Occupant::GetCachedSize, "C++: osi3::Occupant::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::Occupant::*)() const) &osi3::Occupant::GetMetadata, "C++: osi3::Occupant::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_id", (bool (osi3::Occupant::*)() const) &osi3::Occupant::has_id, "C++: osi3::Occupant::has_id() const --> bool");
		cl.def("clear_id", (void (osi3::Occupant::*)()) &osi3::Occupant::clear_id, "C++: osi3::Occupant::clear_id() --> void");
		cl.def("id", (const class osi3::Identifier & (osi3::Occupant::*)() const) &osi3::Occupant::id, "C++: osi3::Occupant::id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_id", (class osi3::Identifier * (osi3::Occupant::*)()) &osi3::Occupant::release_id, "C++: osi3::Occupant::release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_id", (class osi3::Identifier * (osi3::Occupant::*)()) &osi3::Occupant::mutable_id, "C++: osi3::Occupant::mutable_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_id", (void (osi3::Occupant::*)(class osi3::Identifier *)) &osi3::Occupant::set_allocated_id, "C++: osi3::Occupant::set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_set_allocated_id", (void (osi3::Occupant::*)(class osi3::Identifier *)) &osi3::Occupant::unsafe_arena_set_allocated_id, "C++: osi3::Occupant::unsafe_arena_set_allocated_id(class osi3::Identifier *) --> void", pybind11::arg("id"));
		cl.def("unsafe_arena_release_id", (class osi3::Identifier * (osi3::Occupant::*)()) &osi3::Occupant::unsafe_arena_release_id, "C++: osi3::Occupant::unsafe_arena_release_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_classification", (bool (osi3::Occupant::*)() const) &osi3::Occupant::has_classification, "C++: osi3::Occupant::has_classification() const --> bool");
		cl.def("clear_classification", (void (osi3::Occupant::*)()) &osi3::Occupant::clear_classification, "C++: osi3::Occupant::clear_classification() --> void");
		cl.def("classification", (const class osi3::Occupant_Classification & (osi3::Occupant::*)() const) &osi3::Occupant::classification, "C++: osi3::Occupant::classification() const --> const class osi3::Occupant_Classification &", pybind11::return_value_policy::automatic);
		cl.def("release_classification", (class osi3::Occupant_Classification * (osi3::Occupant::*)()) &osi3::Occupant::release_classification, "C++: osi3::Occupant::release_classification() --> class osi3::Occupant_Classification *", pybind11::return_value_policy::reference);
		cl.def("mutable_classification", (class osi3::Occupant_Classification * (osi3::Occupant::*)()) &osi3::Occupant::mutable_classification, "C++: osi3::Occupant::mutable_classification() --> class osi3::Occupant_Classification *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_classification", (void (osi3::Occupant::*)(class osi3::Occupant_Classification *)) &osi3::Occupant::set_allocated_classification, "C++: osi3::Occupant::set_allocated_classification(class osi3::Occupant_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_set_allocated_classification", (void (osi3::Occupant::*)(class osi3::Occupant_Classification *)) &osi3::Occupant::unsafe_arena_set_allocated_classification, "C++: osi3::Occupant::unsafe_arena_set_allocated_classification(class osi3::Occupant_Classification *) --> void", pybind11::arg("classification"));
		cl.def("unsafe_arena_release_classification", (class osi3::Occupant_Classification * (osi3::Occupant::*)()) &osi3::Occupant::unsafe_arena_release_classification, "C++: osi3::Occupant::unsafe_arena_release_classification() --> class osi3::Occupant_Classification *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_31.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_31(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B396_[osi3::EnvironmentalConditions_Precipitation] ";
	// osi3::EnvironmentalConditions_Precipitation file: line:72
	pybind11::enum_<osi3::EnvironmentalConditions_Precipitation>(M("osi3"), "EnvironmentalConditions_Precipitation", pybind11::arithmetic(), "")
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_UNKNOWN", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_UNKNOWN)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_OTHER", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_OTHER)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_NONE", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_NONE)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_LIGHT", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_LIGHT)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_LIGHT", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_LIGHT)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_MODERATE", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_MODERATE)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_HEAVY", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_HEAVY)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_HEAVY", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_HEAVY)
		.value("EnvironmentalConditions_Precipitation_PRECIPITATION_EXTREME", osi3::EnvironmentalConditions_Precipitation_PRECIPITATION_EXTREME)
		.value("EnvironmentalConditions_Precipitation_EnvironmentalConditions_Precipitation_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_Precipitation_EnvironmentalConditions_Precipitation_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("EnvironmentalConditions_Precipitation_EnvironmentalConditions_Precipitation_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_Precipitation_EnvironmentalConditions_Precipitation_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B397_[bool osi3::EnvironmentalConditions_Precipitation_IsValid(int)] ";
	std::cout << "B398_[const class google::protobuf::EnumDescriptor * osi3::EnvironmentalConditions_Precipitation_descriptor()] ";
	std::cout << "B399_[bool osi3::EnvironmentalConditions_Precipitation_Parse(const std::string &, enum osi3::EnvironmentalConditions_Precipitation *)] ";
	std::cout << "B400_[osi3::EnvironmentalConditions_Fog] ";
	// osi3::EnvironmentalConditions_Fog file: line:104
	pybind11::enum_<osi3::EnvironmentalConditions_Fog>(M("osi3"), "EnvironmentalConditions_Fog", pybind11::arithmetic(), "")
		.value("EnvironmentalConditions_Fog_FOG_UNKNOWN", osi3::EnvironmentalConditions_Fog_FOG_UNKNOWN)
		.value("EnvironmentalConditions_Fog_FOG_OTHER", osi3::EnvironmentalConditions_Fog_FOG_OTHER)
		.value("EnvironmentalConditions_Fog_FOG_EXCELLENT_VISIBILITY", osi3::EnvironmentalConditions_Fog_FOG_EXCELLENT_VISIBILITY)
		.value("EnvironmentalConditions_Fog_FOG_GOOD_VISIBILITY", osi3::EnvironmentalConditions_Fog_FOG_GOOD_VISIBILITY)
		.value("EnvironmentalConditions_Fog_FOG_MODERATE_VISIBILITY", osi3::EnvironmentalConditions_Fog_FOG_MODERATE_VISIBILITY)
		.value("EnvironmentalConditions_Fog_FOG_POOR_VISIBILITY", osi3::EnvironmentalConditions_Fog_FOG_POOR_VISIBILITY)
		.value("EnvironmentalConditions_Fog_FOG_MIST", osi3::EnvironmentalConditions_Fog_FOG_MIST)
		.value("EnvironmentalConditions_Fog_FOG_LIGHT", osi3::EnvironmentalConditions_Fog_FOG_LIGHT)
		.value("EnvironmentalConditions_Fog_FOG_THICK", osi3::EnvironmentalConditions_Fog_FOG_THICK)
		.value("EnvironmentalConditions_Fog_FOG_DENSE", osi3::EnvironmentalConditions_Fog_FOG_DENSE)
		.value("EnvironmentalConditions_Fog_EnvironmentalConditions_Fog_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_Fog_EnvironmentalConditions_Fog_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("EnvironmentalConditions_Fog_EnvironmentalConditions_Fog_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_Fog_EnvironmentalConditions_Fog_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B401_[bool osi3::EnvironmentalConditions_Fog_IsValid(int)] ";
	std::cout << "B402_[const class google::protobuf::EnumDescriptor * osi3::EnvironmentalConditions_Fog_descriptor()] ";
	std::cout << "B403_[bool osi3::EnvironmentalConditions_Fog_Parse(const std::string &, enum osi3::EnvironmentalConditions_Fog *)] ";
	std::cout << "B404_[osi3::EnvironmentalConditions_AmbientIllumination] ";
	// osi3::EnvironmentalConditions_AmbientIllumination file: line:137
	pybind11::enum_<osi3::EnvironmentalConditions_AmbientIllumination>(M("osi3"), "EnvironmentalConditions_AmbientIllumination", pybind11::arithmetic(), "")
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_UNKNOWN", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_UNKNOWN)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_OTHER", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_OTHER)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL1", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL1)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL2", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL2)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL3", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL3)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL4", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL4)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL5", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL5)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL6", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL6)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL7", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL7)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL8", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL8)
		.value("EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL9", osi3::EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL9)
		.value("EnvironmentalConditions_AmbientIllumination_EnvironmentalConditions_AmbientIllumination_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_AmbientIllumination_EnvironmentalConditions_AmbientIllumination_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("EnvironmentalConditions_AmbientIllumination_EnvironmentalConditions_AmbientIllumination_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::EnvironmentalConditions_AmbientIllumination_EnvironmentalConditions_AmbientIllumination_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B405_[bool osi3::EnvironmentalConditions_AmbientIllumination_IsValid(int)] ";
	std::cout << "B406_[const class google::protobuf::EnumDescriptor * osi3::EnvironmentalConditions_AmbientIllumination_descriptor()] ";
	std::cout << "B407_[bool osi3::EnvironmentalConditions_AmbientIllumination_Parse(const std::string &, enum osi3::EnvironmentalConditions_AmbientIllumination *)] ";
	std::cout << "B408_[osi3::EnvironmentalConditions_TimeOfDay] ";
	{ // osi3::EnvironmentalConditions_TimeOfDay file: line:173
		pybind11::class_<osi3::EnvironmentalConditions_TimeOfDay, std::shared_ptr<osi3::EnvironmentalConditions_TimeOfDay>, google::protobuf::Message> cl(M("osi3"), "EnvironmentalConditions_TimeOfDay", "");
		cl.def( pybind11::init( [](){ return new osi3::EnvironmentalConditions_TimeOfDay(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::EnvironmentalConditions_TimeOfDay const &o){ return new osi3::EnvironmentalConditions_TimeOfDay(o); } ) );
		cl.def("assign", (class osi3::EnvironmentalConditions_TimeOfDay & (osi3::EnvironmentalConditions_TimeOfDay::*)(const class osi3::EnvironmentalConditions_TimeOfDay &)) &osi3::EnvironmentalConditions_TimeOfDay::operator=, "C++: osi3::EnvironmentalConditions_TimeOfDay::operator=(const class osi3::EnvironmentalConditions_TimeOfDay &) --> class osi3::EnvironmentalConditions_TimeOfDay &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::EnvironmentalConditions_TimeOfDay::descriptor, "C++: osi3::EnvironmentalConditions_TimeOfDay::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::EnvironmentalConditions_TimeOfDay::GetDescriptor, "C++: osi3::EnvironmentalConditions_TimeOfDay::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::EnvironmentalConditions_TimeOfDay::GetReflection, "C++: osi3::EnvironmentalConditions_TimeOfDay::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::EnvironmentalConditions_TimeOfDay & (*)()) &osi3::EnvironmentalConditions_TimeOfDay::default_instance, "C++: osi3::EnvironmentalConditions_TimeOfDay::default_instance() --> const class osi3::EnvironmentalConditions_TimeOfDay &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::EnvironmentalConditions_TimeOfDay * (*)()) &osi3::EnvironmentalConditions_TimeOfDay::internal_default_instance, "C++: osi3::EnvironmentalConditions_TimeOfDay::internal_default_instance() --> const class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(class osi3::EnvironmentalConditions_TimeOfDay *)) &osi3::EnvironmentalConditions_TimeOfDay::Swap, "C++: osi3::EnvironmentalConditions_TimeOfDay::Swap(class osi3::EnvironmentalConditions_TimeOfDay *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(class osi3::EnvironmentalConditions_TimeOfDay *)) &osi3::EnvironmentalConditions_TimeOfDay::UnsafeArenaSwap, "C++: osi3::EnvironmentalConditions_TimeOfDay::UnsafeArenaSwap(class osi3::EnvironmentalConditions_TimeOfDay *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::EnvironmentalConditions_TimeOfDay * (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::New, "C++: osi3::EnvironmentalConditions_TimeOfDay::New() const --> class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::EnvironmentalConditions_TimeOfDay * (osi3::EnvironmentalConditions_TimeOfDay::*)(class google::protobuf::Arena *) const) &osi3::EnvironmentalConditions_TimeOfDay::New, "C++: osi3::EnvironmentalConditions_TimeOfDay::New(class google::protobuf::Arena *) const --> class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(const class google::protobuf::Message &)) &osi3::EnvironmentalConditions_TimeOfDay::CopyFrom, "C++: osi3::EnvironmentalConditions_TimeOfDay::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(const class google::protobuf::Message &)) &osi3::EnvironmentalConditions_TimeOfDay::MergeFrom, "C++: osi3::EnvironmentalConditions_TimeOfDay::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(const class osi3::EnvironmentalConditions_TimeOfDay &)) &osi3::EnvironmentalConditions_TimeOfDay::CopyFrom, "C++: osi3::EnvironmentalConditions_TimeOfDay::CopyFrom(const class osi3::EnvironmentalConditions_TimeOfDay &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(const class osi3::EnvironmentalConditions_TimeOfDay &)) &osi3::EnvironmentalConditions_TimeOfDay::MergeFrom, "C++: osi3::EnvironmentalConditions_TimeOfDay::MergeFrom(const class osi3::EnvironmentalConditions_TimeOfDay &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::EnvironmentalConditions_TimeOfDay::*)()) &osi3::EnvironmentalConditions_TimeOfDay::Clear, "C++: osi3::EnvironmentalConditions_TimeOfDay::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::IsInitialized, "C++: osi3::EnvironmentalConditions_TimeOfDay::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::ByteSizeLong, "C++: osi3::EnvironmentalConditions_TimeOfDay::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::EnvironmentalConditions_TimeOfDay::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::EnvironmentalConditions_TimeOfDay::_InternalParse, "C++: osi3::EnvironmentalConditions_TimeOfDay::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::EnvironmentalConditions_TimeOfDay::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::EnvironmentalConditions_TimeOfDay::_InternalSerialize, "C++: osi3::EnvironmentalConditions_TimeOfDay::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::GetCachedSize, "C++: osi3::EnvironmentalConditions_TimeOfDay::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::GetMetadata, "C++: osi3::EnvironmentalConditions_TimeOfDay::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_seconds_since_midnight", (void (osi3::EnvironmentalConditions_TimeOfDay::*)()) &osi3::EnvironmentalConditions_TimeOfDay::clear_seconds_since_midnight, "C++: osi3::EnvironmentalConditions_TimeOfDay::clear_seconds_since_midnight() --> void");
		cl.def("seconds_since_midnight", (unsigned int (osi3::EnvironmentalConditions_TimeOfDay::*)() const) &osi3::EnvironmentalConditions_TimeOfDay::seconds_since_midnight, "C++: osi3::EnvironmentalConditions_TimeOfDay::seconds_since_midnight() const --> unsigned int");
		cl.def("set_seconds_since_midnight", (void (osi3::EnvironmentalConditions_TimeOfDay::*)(unsigned int)) &osi3::EnvironmentalConditions_TimeOfDay::set_seconds_since_midnight, "C++: osi3::EnvironmentalConditions_TimeOfDay::set_seconds_since_midnight(unsigned int) --> void", pybind11::arg("value"));
	}
	std::cout << "B409_[void osi3::swap(class osi3::EnvironmentalConditions_TimeOfDay &, class osi3::EnvironmentalConditions_TimeOfDay &)] ";
	std::cout << "B410_[osi3::EnvironmentalConditions] ";
	{ // osi3::EnvironmentalConditions file: line:310
		pybind11::class_<osi3::EnvironmentalConditions, std::shared_ptr<osi3::EnvironmentalConditions>, google::protobuf::Message> cl(M("osi3"), "EnvironmentalConditions", "");
		cl.def( pybind11::init( [](){ return new osi3::EnvironmentalConditions(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::EnvironmentalConditions const &o){ return new osi3::EnvironmentalConditions(o); } ) );
		cl.def("assign", (class osi3::EnvironmentalConditions & (osi3::EnvironmentalConditions::*)(const class osi3::EnvironmentalConditions &)) &osi3::EnvironmentalConditions::operator=, "C++: osi3::EnvironmentalConditions::operator=(const class osi3::EnvironmentalConditions &) --> class osi3::EnvironmentalConditions &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::EnvironmentalConditions::descriptor, "C++: osi3::EnvironmentalConditions::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::EnvironmentalConditions::GetDescriptor, "C++: osi3::EnvironmentalConditions::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::EnvironmentalConditions::GetReflection, "C++: osi3::EnvironmentalConditions::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::EnvironmentalConditions & (*)()) &osi3::EnvironmentalConditions::default_instance, "C++: osi3::EnvironmentalConditions::default_instance() --> const class osi3::EnvironmentalConditions &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::EnvironmentalConditions * (*)()) &osi3::EnvironmentalConditions::internal_default_instance, "C++: osi3::EnvironmentalConditions::internal_default_instance() --> const class osi3::EnvironmentalConditions *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::EnvironmentalConditions::*)(class osi3::EnvironmentalConditions *)) &osi3::EnvironmentalConditions::Swap, "C++: osi3::EnvironmentalConditions::Swap(class osi3::EnvironmentalConditions *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::EnvironmentalConditions::*)(class osi3::EnvironmentalConditions *)) &osi3::EnvironmentalConditions::UnsafeArenaSwap, "C++: osi3::EnvironmentalConditions::UnsafeArenaSwap(class osi3::EnvironmentalConditions *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::EnvironmentalConditions * (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::New, "C++: osi3::EnvironmentalConditions::New() const --> class osi3::EnvironmentalConditions *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::EnvironmentalConditions * (osi3::EnvironmentalConditions::*)(class google::protobuf::Arena *) const) &osi3::EnvironmentalConditions::New, "C++: osi3::EnvironmentalConditions::New(class google::protobuf::Arena *) const --> class osi3::EnvironmentalConditions *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::EnvironmentalConditions::*)(const class google::protobuf::Message &)) &osi3::EnvironmentalConditions::CopyFrom, "C++: osi3::EnvironmentalConditions::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::EnvironmentalConditions::*)(const class google::protobuf::Message &)) &osi3::EnvironmentalConditions::MergeFrom, "C++: osi3::EnvironmentalConditions::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::EnvironmentalConditions::*)(const class osi3::EnvironmentalConditions &)) &osi3::EnvironmentalConditions::CopyFrom, "C++: osi3::EnvironmentalConditions::CopyFrom(const class osi3::EnvironmentalConditions &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::EnvironmentalConditions::*)(const class osi3::EnvironmentalConditions &)) &osi3::EnvironmentalConditions::MergeFrom, "C++: osi3::EnvironmentalConditions::MergeFrom(const class osi3::EnvironmentalConditions &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::Clear, "C++: osi3::EnvironmentalConditions::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::IsInitialized, "C++: osi3::EnvironmentalConditions::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::ByteSizeLong, "C++: osi3::EnvironmentalConditions::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::EnvironmentalConditions::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::EnvironmentalConditions::_InternalParse, "C++: osi3::EnvironmentalConditions::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::EnvironmentalConditions::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::EnvironmentalConditions::_InternalSerialize, "C++: osi3::EnvironmentalConditions::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::GetCachedSize, "C++: osi3::EnvironmentalConditions::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::GetMetadata, "C++: osi3::EnvironmentalConditions::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("Precipitation_IsValid", (bool (*)(int)) &osi3::EnvironmentalConditions::Precipitation_IsValid, "C++: osi3::EnvironmentalConditions::Precipitation_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Precipitation_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::EnvironmentalConditions::Precipitation_descriptor, "C++: osi3::EnvironmentalConditions::Precipitation_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Precipitation_Parse", (bool (*)(const std::string &, enum osi3::EnvironmentalConditions_Precipitation *)) &osi3::EnvironmentalConditions::Precipitation_Parse, "C++: osi3::EnvironmentalConditions::Precipitation_Parse(const std::string &, enum osi3::EnvironmentalConditions_Precipitation *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("Fog_IsValid", (bool (*)(int)) &osi3::EnvironmentalConditions::Fog_IsValid, "C++: osi3::EnvironmentalConditions::Fog_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("Fog_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::EnvironmentalConditions::Fog_descriptor, "C++: osi3::EnvironmentalConditions::Fog_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("Fog_Parse", (bool (*)(const std::string &, enum osi3::EnvironmentalConditions_Fog *)) &osi3::EnvironmentalConditions::Fog_Parse, "C++: osi3::EnvironmentalConditions::Fog_Parse(const std::string &, enum osi3::EnvironmentalConditions_Fog *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("AmbientIllumination_IsValid", (bool (*)(int)) &osi3::EnvironmentalConditions::AmbientIllumination_IsValid, "C++: osi3::EnvironmentalConditions::AmbientIllumination_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("AmbientIllumination_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::EnvironmentalConditions::AmbientIllumination_descriptor, "C++: osi3::EnvironmentalConditions::AmbientIllumination_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("AmbientIllumination_Parse", (bool (*)(const std::string &, enum osi3::EnvironmentalConditions_AmbientIllumination *)) &osi3::EnvironmentalConditions::AmbientIllumination_Parse, "C++: osi3::EnvironmentalConditions::AmbientIllumination_Parse(const std::string &, enum osi3::EnvironmentalConditions_AmbientIllumination *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("has_time_of_day", (bool (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::has_time_of_day, "C++: osi3::EnvironmentalConditions::has_time_of_day() const --> bool");
		cl.def("clear_time_of_day", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_time_of_day, "C++: osi3::EnvironmentalConditions::clear_time_of_day() --> void");
		cl.def("time_of_day", (const class osi3::EnvironmentalConditions_TimeOfDay & (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::time_of_day, "C++: osi3::EnvironmentalConditions::time_of_day() const --> const class osi3::EnvironmentalConditions_TimeOfDay &", pybind11::return_value_policy::automatic);
		cl.def("release_time_of_day", (class osi3::EnvironmentalConditions_TimeOfDay * (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::release_time_of_day, "C++: osi3::EnvironmentalConditions::release_time_of_day() --> class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::reference);
		cl.def("mutable_time_of_day", (class osi3::EnvironmentalConditions_TimeOfDay * (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::mutable_time_of_day, "C++: osi3::EnvironmentalConditions::mutable_time_of_day() --> class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_time_of_day", (void (osi3::EnvironmentalConditions::*)(class osi3::EnvironmentalConditions_TimeOfDay *)) &osi3::EnvironmentalConditions::set_allocated_time_of_day, "C++: osi3::EnvironmentalConditions::set_allocated_time_of_day(class osi3::EnvironmentalConditions_TimeOfDay *) --> void", pybind11::arg("time_of_day"));
		cl.def("unsafe_arena_set_allocated_time_of_day", (void (osi3::EnvironmentalConditions::*)(class osi3::EnvironmentalConditions_TimeOfDay *)) &osi3::EnvironmentalConditions::unsafe_arena_set_allocated_time_of_day, "C++: osi3::EnvironmentalConditions::unsafe_arena_set_allocated_time_of_day(class osi3::EnvironmentalConditions_TimeOfDay *) --> void", pybind11::arg("time_of_day"));
		cl.def("unsafe_arena_release_time_of_day", (class osi3::EnvironmentalConditions_TimeOfDay * (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::unsafe_arena_release_time_of_day, "C++: osi3::EnvironmentalConditions::unsafe_arena_release_time_of_day() --> class osi3::EnvironmentalConditions_TimeOfDay *", pybind11::return_value_policy::reference);
		cl.def("clear_atmospheric_pressure", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_atmospheric_pressure, "C++: osi3::EnvironmentalConditions::clear_atmospheric_pressure() --> void");
		cl.def("atmospheric_pressure", (double (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::atmospheric_pressure, "C++: osi3::EnvironmentalConditions::atmospheric_pressure() const --> double");
		cl.def("set_atmospheric_pressure", (void (osi3::EnvironmentalConditions::*)(double)) &osi3::EnvironmentalConditions::set_atmospheric_pressure, "C++: osi3::EnvironmentalConditions::set_atmospheric_pressure(double) --> void", pybind11::arg("value"));
		cl.def("clear_ambient_illumination", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_ambient_illumination, "C++: osi3::EnvironmentalConditions::clear_ambient_illumination() --> void");
		cl.def("ambient_illumination", (enum osi3::EnvironmentalConditions_AmbientIllumination (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::ambient_illumination, "C++: osi3::EnvironmentalConditions::ambient_illumination() const --> enum osi3::EnvironmentalConditions_AmbientIllumination");
		cl.def("set_ambient_illumination", (void (osi3::EnvironmentalConditions::*)(enum osi3::EnvironmentalConditions_AmbientIllumination)) &osi3::EnvironmentalConditions::set_ambient_illumination, "C++: osi3::EnvironmentalConditions::set_ambient_illumination(enum osi3::EnvironmentalConditions_AmbientIllumination) --> void", pybind11::arg("value"));
		cl.def("clear_precipitation", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_precipitation, "C++: osi3::EnvironmentalConditions::clear_precipitation() --> void");
		cl.def("precipitation", (enum osi3::EnvironmentalConditions_Precipitation (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::precipitation, "C++: osi3::EnvironmentalConditions::precipitation() const --> enum osi3::EnvironmentalConditions_Precipitation");
		cl.def("set_precipitation", (void (osi3::EnvironmentalConditions::*)(enum osi3::EnvironmentalConditions_Precipitation)) &osi3::EnvironmentalConditions::set_precipitation, "C++: osi3::EnvironmentalConditions::set_precipitation(enum osi3::EnvironmentalConditions_Precipitation) --> void", pybind11::arg("value"));
		cl.def("clear_temperature", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_temperature, "C++: osi3::EnvironmentalConditions::clear_temperature() --> void");
		cl.def("temperature", (double (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::temperature, "C++: osi3::EnvironmentalConditions::temperature() const --> double");
		cl.def("set_temperature", (void (osi3::EnvironmentalConditions::*)(double)) &osi3::EnvironmentalConditions::set_temperature, "C++: osi3::EnvironmentalConditions::set_temperature(double) --> void", pybind11::arg("value"));
		cl.def("clear_relative_humidity", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_relative_humidity, "C++: osi3::EnvironmentalConditions::clear_relative_humidity() --> void");
		cl.def("relative_humidity", (double (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::relative_humidity, "C++: osi3::EnvironmentalConditions::relative_humidity() const --> double");
		cl.def("set_relative_humidity", (void (osi3::EnvironmentalConditions::*)(double)) &osi3::EnvironmentalConditions::set_relative_humidity, "C++: osi3::EnvironmentalConditions::set_relative_humidity(double) --> void", pybind11::arg("value"));
		cl.def("clear_unix_timestamp", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_unix_timestamp, "C++: osi3::EnvironmentalConditions::clear_unix_timestamp() --> void");
		cl.def("unix_timestamp", (long (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::unix_timestamp, "C++: osi3::EnvironmentalConditions::unix_timestamp() const --> long");
		cl.def("set_unix_timestamp", (void (osi3::EnvironmentalConditions::*)(long)) &osi3::EnvironmentalConditions::set_unix_timestamp, "C++: osi3::EnvironmentalConditions::set_unix_timestamp(long) --> void", pybind11::arg("value"));
		cl.def("clear_fog", (void (osi3::EnvironmentalConditions::*)()) &osi3::EnvironmentalConditions::clear_fog, "C++: osi3::EnvironmentalConditions::clear_fog() --> void");
		cl.def("fog", (enum osi3::EnvironmentalConditions_Fog (osi3::EnvironmentalConditions::*)() const) &osi3::EnvironmentalConditions::fog, "C++: osi3::EnvironmentalConditions::fog() const --> enum osi3::EnvironmentalConditions_Fog");
		cl.def("set_fog", (void (osi3::EnvironmentalConditions::*)(enum osi3::EnvironmentalConditions_Fog)) &osi3::EnvironmentalConditions::set_fog, "C++: osi3::EnvironmentalConditions::set_fog(enum osi3::EnvironmentalConditions_Fog) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_32.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_32(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B411_[osi3::GroundTruth] ";
	{ // osi3::GroundTruth file: line:78
		pybind11::class_<osi3::GroundTruth, std::shared_ptr<osi3::GroundTruth>, google::protobuf::Message> cl(M("osi3"), "GroundTruth", "");
		cl.def( pybind11::init( [](){ return new osi3::GroundTruth(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::GroundTruth const &o){ return new osi3::GroundTruth(o); } ) );
		cl.def("assign", (class osi3::GroundTruth & (osi3::GroundTruth::*)(const class osi3::GroundTruth &)) &osi3::GroundTruth::operator=, "C++: osi3::GroundTruth::operator=(const class osi3::GroundTruth &) --> class osi3::GroundTruth &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GroundTruth::descriptor, "C++: osi3::GroundTruth::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GroundTruth::GetDescriptor, "C++: osi3::GroundTruth::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::GroundTruth::GetReflection, "C++: osi3::GroundTruth::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::GroundTruth & (*)()) &osi3::GroundTruth::default_instance, "C++: osi3::GroundTruth::default_instance() --> const class osi3::GroundTruth &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::GroundTruth * (*)()) &osi3::GroundTruth::internal_default_instance, "C++: osi3::GroundTruth::internal_default_instance() --> const class osi3::GroundTruth *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::GroundTruth::*)(class osi3::GroundTruth *)) &osi3::GroundTruth::Swap, "C++: osi3::GroundTruth::Swap(class osi3::GroundTruth *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::GroundTruth::*)(class osi3::GroundTruth *)) &osi3::GroundTruth::UnsafeArenaSwap, "C++: osi3::GroundTruth::UnsafeArenaSwap(class osi3::GroundTruth *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::GroundTruth * (osi3::GroundTruth::*)() const) &osi3::GroundTruth::New, "C++: osi3::GroundTruth::New() const --> class osi3::GroundTruth *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::GroundTruth * (osi3::GroundTruth::*)(class google::protobuf::Arena *) const) &osi3::GroundTruth::New, "C++: osi3::GroundTruth::New(class google::protobuf::Arena *) const --> class osi3::GroundTruth *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::GroundTruth::*)(const class google::protobuf::Message &)) &osi3::GroundTruth::CopyFrom, "C++: osi3::GroundTruth::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GroundTruth::*)(const class google::protobuf::Message &)) &osi3::GroundTruth::MergeFrom, "C++: osi3::GroundTruth::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::GroundTruth::*)(const class osi3::GroundTruth &)) &osi3::GroundTruth::CopyFrom, "C++: osi3::GroundTruth::CopyFrom(const class osi3::GroundTruth &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GroundTruth::*)(const class osi3::GroundTruth &)) &osi3::GroundTruth::MergeFrom, "C++: osi3::GroundTruth::MergeFrom(const class osi3::GroundTruth &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::Clear, "C++: osi3::GroundTruth::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::GroundTruth::*)() const) &osi3::GroundTruth::IsInitialized, "C++: osi3::GroundTruth::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::GroundTruth::*)() const) &osi3::GroundTruth::ByteSizeLong, "C++: osi3::GroundTruth::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::GroundTruth::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::GroundTruth::_InternalParse, "C++: osi3::GroundTruth::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::GroundTruth::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::GroundTruth::_InternalSerialize, "C++: osi3::GroundTruth::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::GetCachedSize, "C++: osi3::GroundTruth::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::GroundTruth::*)() const) &osi3::GroundTruth::GetMetadata, "C++: osi3::GroundTruth::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("stationary_object_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::stationary_object_size, "C++: osi3::GroundTruth::stationary_object_size() const --> int");
		cl.def("clear_stationary_object", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_stationary_object, "C++: osi3::GroundTruth::clear_stationary_object() --> void");
		cl.def("mutable_stationary_object", (class osi3::StationaryObject * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_stationary_object, "C++: osi3::GroundTruth::mutable_stationary_object(int) --> class osi3::StationaryObject *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_stationary_object", (class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_stationary_object, "C++: osi3::GroundTruth::mutable_stationary_object() --> class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> *", pybind11::return_value_policy::reference);
		cl.def("stationary_object", (const class osi3::StationaryObject & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::stationary_object, "C++: osi3::GroundTruth::stationary_object(int) const --> const class osi3::StationaryObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_stationary_object", (class osi3::StationaryObject * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_stationary_object, "C++: osi3::GroundTruth::add_stationary_object() --> class osi3::StationaryObject *", pybind11::return_value_policy::reference);
		cl.def("stationary_object", (const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::stationary_object, "C++: osi3::GroundTruth::stationary_object() const --> const class google::protobuf::RepeatedPtrField<class osi3::StationaryObject> &", pybind11::return_value_policy::automatic);
		cl.def("moving_object_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::moving_object_size, "C++: osi3::GroundTruth::moving_object_size() const --> int");
		cl.def("clear_moving_object", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_moving_object, "C++: osi3::GroundTruth::clear_moving_object() --> void");
		cl.def("mutable_moving_object", (class osi3::MovingObject * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_moving_object, "C++: osi3::GroundTruth::mutable_moving_object(int) --> class osi3::MovingObject *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_moving_object", (class google::protobuf::RepeatedPtrField<class osi3::MovingObject> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_moving_object, "C++: osi3::GroundTruth::mutable_moving_object() --> class google::protobuf::RepeatedPtrField<class osi3::MovingObject> *", pybind11::return_value_policy::reference);
		cl.def("moving_object", (const class osi3::MovingObject & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::moving_object, "C++: osi3::GroundTruth::moving_object(int) const --> const class osi3::MovingObject &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_moving_object", (class osi3::MovingObject * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_moving_object, "C++: osi3::GroundTruth::add_moving_object() --> class osi3::MovingObject *", pybind11::return_value_policy::reference);
		cl.def("moving_object", (const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::moving_object, "C++: osi3::GroundTruth::moving_object() const --> const class google::protobuf::RepeatedPtrField<class osi3::MovingObject> &", pybind11::return_value_policy::automatic);
		cl.def("traffic_sign_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::traffic_sign_size, "C++: osi3::GroundTruth::traffic_sign_size() const --> int");
		cl.def("clear_traffic_sign", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_traffic_sign, "C++: osi3::GroundTruth::clear_traffic_sign() --> void");
		cl.def("mutable_traffic_sign", (class osi3::TrafficSign * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_traffic_sign, "C++: osi3::GroundTruth::mutable_traffic_sign(int) --> class osi3::TrafficSign *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_traffic_sign", (class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_traffic_sign, "C++: osi3::GroundTruth::mutable_traffic_sign() --> class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> *", pybind11::return_value_policy::reference);
		cl.def("traffic_sign", (const class osi3::TrafficSign & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::traffic_sign, "C++: osi3::GroundTruth::traffic_sign(int) const --> const class osi3::TrafficSign &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_traffic_sign", (class osi3::TrafficSign * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_traffic_sign, "C++: osi3::GroundTruth::add_traffic_sign() --> class osi3::TrafficSign *", pybind11::return_value_policy::reference);
		cl.def("traffic_sign", (const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::traffic_sign, "C++: osi3::GroundTruth::traffic_sign() const --> const class google::protobuf::RepeatedPtrField<class osi3::TrafficSign> &", pybind11::return_value_policy::automatic);
		cl.def("traffic_light_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::traffic_light_size, "C++: osi3::GroundTruth::traffic_light_size() const --> int");
		cl.def("clear_traffic_light", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_traffic_light, "C++: osi3::GroundTruth::clear_traffic_light() --> void");
		cl.def("mutable_traffic_light", (class osi3::TrafficLight * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_traffic_light, "C++: osi3::GroundTruth::mutable_traffic_light(int) --> class osi3::TrafficLight *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_traffic_light", (class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_traffic_light, "C++: osi3::GroundTruth::mutable_traffic_light() --> class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> *", pybind11::return_value_policy::reference);
		cl.def("traffic_light", (const class osi3::TrafficLight & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::traffic_light, "C++: osi3::GroundTruth::traffic_light(int) const --> const class osi3::TrafficLight &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_traffic_light", (class osi3::TrafficLight * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_traffic_light, "C++: osi3::GroundTruth::add_traffic_light() --> class osi3::TrafficLight *", pybind11::return_value_policy::reference);
		cl.def("traffic_light", (const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::traffic_light, "C++: osi3::GroundTruth::traffic_light() const --> const class google::protobuf::RepeatedPtrField<class osi3::TrafficLight> &", pybind11::return_value_policy::automatic);
		cl.def("road_marking_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::road_marking_size, "C++: osi3::GroundTruth::road_marking_size() const --> int");
		cl.def("clear_road_marking", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_road_marking, "C++: osi3::GroundTruth::clear_road_marking() --> void");
		cl.def("mutable_road_marking", (class osi3::RoadMarking * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_road_marking, "C++: osi3::GroundTruth::mutable_road_marking(int) --> class osi3::RoadMarking *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_road_marking", (class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_road_marking, "C++: osi3::GroundTruth::mutable_road_marking() --> class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> *", pybind11::return_value_policy::reference);
		cl.def("road_marking", (const class osi3::RoadMarking & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::road_marking, "C++: osi3::GroundTruth::road_marking(int) const --> const class osi3::RoadMarking &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_road_marking", (class osi3::RoadMarking * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_road_marking, "C++: osi3::GroundTruth::add_road_marking() --> class osi3::RoadMarking *", pybind11::return_value_policy::reference);
		cl.def("road_marking", (const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::road_marking, "C++: osi3::GroundTruth::road_marking() const --> const class google::protobuf::RepeatedPtrField<class osi3::RoadMarking> &", pybind11::return_value_policy::automatic);
		cl.def("lane_boundary_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::lane_boundary_size, "C++: osi3::GroundTruth::lane_boundary_size() const --> int");
		cl.def("clear_lane_boundary", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_lane_boundary, "C++: osi3::GroundTruth::clear_lane_boundary() --> void");
		cl.def("mutable_lane_boundary", (class osi3::LaneBoundary * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_lane_boundary, "C++: osi3::GroundTruth::mutable_lane_boundary(int) --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_lane_boundary", (class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_lane_boundary, "C++: osi3::GroundTruth::mutable_lane_boundary() --> class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> *", pybind11::return_value_policy::reference);
		cl.def("lane_boundary", (const class osi3::LaneBoundary & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::lane_boundary, "C++: osi3::GroundTruth::lane_boundary(int) const --> const class osi3::LaneBoundary &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_lane_boundary", (class osi3::LaneBoundary * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_lane_boundary, "C++: osi3::GroundTruth::add_lane_boundary() --> class osi3::LaneBoundary *", pybind11::return_value_policy::reference);
		cl.def("lane_boundary", (const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::lane_boundary, "C++: osi3::GroundTruth::lane_boundary() const --> const class google::protobuf::RepeatedPtrField<class osi3::LaneBoundary> &", pybind11::return_value_policy::automatic);
		cl.def("lane_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::lane_size, "C++: osi3::GroundTruth::lane_size() const --> int");
		cl.def("clear_lane", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_lane, "C++: osi3::GroundTruth::clear_lane() --> void");
		cl.def("mutable_lane", (class osi3::Lane * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_lane, "C++: osi3::GroundTruth::mutable_lane(int) --> class osi3::Lane *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_lane", (class google::protobuf::RepeatedPtrField<class osi3::Lane> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_lane, "C++: osi3::GroundTruth::mutable_lane() --> class google::protobuf::RepeatedPtrField<class osi3::Lane> *", pybind11::return_value_policy::reference);
		cl.def("lane", (const class osi3::Lane & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::lane, "C++: osi3::GroundTruth::lane(int) const --> const class osi3::Lane &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_lane", (class osi3::Lane * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_lane, "C++: osi3::GroundTruth::add_lane() --> class osi3::Lane *", pybind11::return_value_policy::reference);
		cl.def("lane", (const class google::protobuf::RepeatedPtrField<class osi3::Lane> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::lane, "C++: osi3::GroundTruth::lane() const --> const class google::protobuf::RepeatedPtrField<class osi3::Lane> &", pybind11::return_value_policy::automatic);
		cl.def("occupant_size", (int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::occupant_size, "C++: osi3::GroundTruth::occupant_size() const --> int");
		cl.def("clear_occupant", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_occupant, "C++: osi3::GroundTruth::clear_occupant() --> void");
		cl.def("mutable_occupant", (class osi3::Occupant * (osi3::GroundTruth::*)(int)) &osi3::GroundTruth::mutable_occupant, "C++: osi3::GroundTruth::mutable_occupant(int) --> class osi3::Occupant *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_occupant", (class google::protobuf::RepeatedPtrField<class osi3::Occupant> * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_occupant, "C++: osi3::GroundTruth::mutable_occupant() --> class google::protobuf::RepeatedPtrField<class osi3::Occupant> *", pybind11::return_value_policy::reference);
		cl.def("occupant", (const class osi3::Occupant & (osi3::GroundTruth::*)(int) const) &osi3::GroundTruth::occupant, "C++: osi3::GroundTruth::occupant(int) const --> const class osi3::Occupant &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_occupant", (class osi3::Occupant * (osi3::GroundTruth::*)()) &osi3::GroundTruth::add_occupant, "C++: osi3::GroundTruth::add_occupant() --> class osi3::Occupant *", pybind11::return_value_policy::reference);
		cl.def("occupant", (const class google::protobuf::RepeatedPtrField<class osi3::Occupant> & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::occupant, "C++: osi3::GroundTruth::occupant() const --> const class google::protobuf::RepeatedPtrField<class osi3::Occupant> &", pybind11::return_value_policy::automatic);
		cl.def("clear_proj_string", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_proj_string, "C++: osi3::GroundTruth::clear_proj_string() --> void");
		cl.def("set_proj_string", (void (osi3::GroundTruth::*)(const char *)) &osi3::GroundTruth::set_proj_string, "C++: osi3::GroundTruth::set_proj_string(const char *) --> void", pybind11::arg("value"));
		cl.def("set_proj_string", (void (osi3::GroundTruth::*)(const char *, unsigned long)) &osi3::GroundTruth::set_proj_string, "C++: osi3::GroundTruth::set_proj_string(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("clear_map_reference", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_map_reference, "C++: osi3::GroundTruth::clear_map_reference() --> void");
		cl.def("set_map_reference", (void (osi3::GroundTruth::*)(const char *)) &osi3::GroundTruth::set_map_reference, "C++: osi3::GroundTruth::set_map_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_map_reference", (void (osi3::GroundTruth::*)(const char *, unsigned long)) &osi3::GroundTruth::set_map_reference, "C++: osi3::GroundTruth::set_map_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("clear_model_reference", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_model_reference, "C++: osi3::GroundTruth::clear_model_reference() --> void");
		cl.def("set_model_reference", (void (osi3::GroundTruth::*)(const char *)) &osi3::GroundTruth::set_model_reference, "C++: osi3::GroundTruth::set_model_reference(const char *) --> void", pybind11::arg("value"));
		cl.def("set_model_reference", (void (osi3::GroundTruth::*)(const char *, unsigned long)) &osi3::GroundTruth::set_model_reference, "C++: osi3::GroundTruth::set_model_reference(const char *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_version", (bool (osi3::GroundTruth::*)() const) &osi3::GroundTruth::has_version, "C++: osi3::GroundTruth::has_version() const --> bool");
		cl.def("clear_version", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_version, "C++: osi3::GroundTruth::clear_version() --> void");
		cl.def("version", (const class osi3::InterfaceVersion & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::version, "C++: osi3::GroundTruth::version() const --> const class osi3::InterfaceVersion &", pybind11::return_value_policy::automatic);
		cl.def("release_version", (class osi3::InterfaceVersion * (osi3::GroundTruth::*)()) &osi3::GroundTruth::release_version, "C++: osi3::GroundTruth::release_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("mutable_version", (class osi3::InterfaceVersion * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_version, "C++: osi3::GroundTruth::mutable_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_version", (void (osi3::GroundTruth::*)(class osi3::InterfaceVersion *)) &osi3::GroundTruth::set_allocated_version, "C++: osi3::GroundTruth::set_allocated_version(class osi3::InterfaceVersion *) --> void", pybind11::arg("version"));
		cl.def("unsafe_arena_set_allocated_version", (void (osi3::GroundTruth::*)(class osi3::InterfaceVersion *)) &osi3::GroundTruth::unsafe_arena_set_allocated_version, "C++: osi3::GroundTruth::unsafe_arena_set_allocated_version(class osi3::InterfaceVersion *) --> void", pybind11::arg("version"));
		cl.def("unsafe_arena_release_version", (class osi3::InterfaceVersion * (osi3::GroundTruth::*)()) &osi3::GroundTruth::unsafe_arena_release_version, "C++: osi3::GroundTruth::unsafe_arena_release_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("has_timestamp", (bool (osi3::GroundTruth::*)() const) &osi3::GroundTruth::has_timestamp, "C++: osi3::GroundTruth::has_timestamp() const --> bool");
		cl.def("clear_timestamp", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_timestamp, "C++: osi3::GroundTruth::clear_timestamp() --> void");
		cl.def("timestamp", (const class osi3::Timestamp & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::timestamp, "C++: osi3::GroundTruth::timestamp() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_timestamp", (class osi3::Timestamp * (osi3::GroundTruth::*)()) &osi3::GroundTruth::release_timestamp, "C++: osi3::GroundTruth::release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_timestamp", (class osi3::Timestamp * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_timestamp, "C++: osi3::GroundTruth::mutable_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_timestamp", (void (osi3::GroundTruth::*)(class osi3::Timestamp *)) &osi3::GroundTruth::set_allocated_timestamp, "C++: osi3::GroundTruth::set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_set_allocated_timestamp", (void (osi3::GroundTruth::*)(class osi3::Timestamp *)) &osi3::GroundTruth::unsafe_arena_set_allocated_timestamp, "C++: osi3::GroundTruth::unsafe_arena_set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_release_timestamp", (class osi3::Timestamp * (osi3::GroundTruth::*)()) &osi3::GroundTruth::unsafe_arena_release_timestamp, "C++: osi3::GroundTruth::unsafe_arena_release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("has_host_vehicle_id", (bool (osi3::GroundTruth::*)() const) &osi3::GroundTruth::has_host_vehicle_id, "C++: osi3::GroundTruth::has_host_vehicle_id() const --> bool");
		cl.def("clear_host_vehicle_id", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_host_vehicle_id, "C++: osi3::GroundTruth::clear_host_vehicle_id() --> void");
		cl.def("host_vehicle_id", (const class osi3::Identifier & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::host_vehicle_id, "C++: osi3::GroundTruth::host_vehicle_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_host_vehicle_id", (class osi3::Identifier * (osi3::GroundTruth::*)()) &osi3::GroundTruth::release_host_vehicle_id, "C++: osi3::GroundTruth::release_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_host_vehicle_id", (class osi3::Identifier * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_host_vehicle_id, "C++: osi3::GroundTruth::mutable_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_host_vehicle_id", (void (osi3::GroundTruth::*)(class osi3::Identifier *)) &osi3::GroundTruth::set_allocated_host_vehicle_id, "C++: osi3::GroundTruth::set_allocated_host_vehicle_id(class osi3::Identifier *) --> void", pybind11::arg("host_vehicle_id"));
		cl.def("unsafe_arena_set_allocated_host_vehicle_id", (void (osi3::GroundTruth::*)(class osi3::Identifier *)) &osi3::GroundTruth::unsafe_arena_set_allocated_host_vehicle_id, "C++: osi3::GroundTruth::unsafe_arena_set_allocated_host_vehicle_id(class osi3::Identifier *) --> void", pybind11::arg("host_vehicle_id"));
		cl.def("unsafe_arena_release_host_vehicle_id", (class osi3::Identifier * (osi3::GroundTruth::*)()) &osi3::GroundTruth::unsafe_arena_release_host_vehicle_id, "C++: osi3::GroundTruth::unsafe_arena_release_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_environmental_conditions", (bool (osi3::GroundTruth::*)() const) &osi3::GroundTruth::has_environmental_conditions, "C++: osi3::GroundTruth::has_environmental_conditions() const --> bool");
		cl.def("clear_environmental_conditions", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_environmental_conditions, "C++: osi3::GroundTruth::clear_environmental_conditions() --> void");
		cl.def("environmental_conditions", (const class osi3::EnvironmentalConditions & (osi3::GroundTruth::*)() const) &osi3::GroundTruth::environmental_conditions, "C++: osi3::GroundTruth::environmental_conditions() const --> const class osi3::EnvironmentalConditions &", pybind11::return_value_policy::automatic);
		cl.def("release_environmental_conditions", (class osi3::EnvironmentalConditions * (osi3::GroundTruth::*)()) &osi3::GroundTruth::release_environmental_conditions, "C++: osi3::GroundTruth::release_environmental_conditions() --> class osi3::EnvironmentalConditions *", pybind11::return_value_policy::reference);
		cl.def("mutable_environmental_conditions", (class osi3::EnvironmentalConditions * (osi3::GroundTruth::*)()) &osi3::GroundTruth::mutable_environmental_conditions, "C++: osi3::GroundTruth::mutable_environmental_conditions() --> class osi3::EnvironmentalConditions *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_environmental_conditions", (void (osi3::GroundTruth::*)(class osi3::EnvironmentalConditions *)) &osi3::GroundTruth::set_allocated_environmental_conditions, "C++: osi3::GroundTruth::set_allocated_environmental_conditions(class osi3::EnvironmentalConditions *) --> void", pybind11::arg("environmental_conditions"));
		cl.def("unsafe_arena_set_allocated_environmental_conditions", (void (osi3::GroundTruth::*)(class osi3::EnvironmentalConditions *)) &osi3::GroundTruth::unsafe_arena_set_allocated_environmental_conditions, "C++: osi3::GroundTruth::unsafe_arena_set_allocated_environmental_conditions(class osi3::EnvironmentalConditions *) --> void", pybind11::arg("environmental_conditions"));
		cl.def("unsafe_arena_release_environmental_conditions", (class osi3::EnvironmentalConditions * (osi3::GroundTruth::*)()) &osi3::GroundTruth::unsafe_arena_release_environmental_conditions, "C++: osi3::GroundTruth::unsafe_arena_release_environmental_conditions() --> class osi3::EnvironmentalConditions *", pybind11::return_value_policy::reference);
		cl.def("clear_country_code", (void (osi3::GroundTruth::*)()) &osi3::GroundTruth::clear_country_code, "C++: osi3::GroundTruth::clear_country_code() --> void");
		cl.def("country_code", (unsigned int (osi3::GroundTruth::*)() const) &osi3::GroundTruth::country_code, "C++: osi3::GroundTruth::country_code() const --> unsigned int");
		cl.def("set_country_code", (void (osi3::GroundTruth::*)(unsigned int)) &osi3::GroundTruth::set_country_code, "C++: osi3::GroundTruth::set_country_code(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_33.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_33(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B412_[osi3::CameraSensorViewConfiguration_ChannelFormat] ";
	// osi3::CameraSensorViewConfiguration_ChannelFormat file: line:94
	pybind11::enum_<osi3::CameraSensorViewConfiguration_ChannelFormat>(M("osi3"), "CameraSensorViewConfiguration_ChannelFormat", pybind11::arithmetic(), "")
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_UNKNOWN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_UNKNOWN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_OTHER", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_OTHER)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_MONO_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RGB_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_BGGR_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_BAYER_RGGB_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCC_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U8_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U8_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U16_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U16_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_U32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_F32_LIN", osi3::CameraSensorViewConfiguration_ChannelFormat_CHANNEL_FORMAT_RCCB_F32_LIN)
		.value("CameraSensorViewConfiguration_ChannelFormat_CameraSensorViewConfiguration_ChannelFormat_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::CameraSensorViewConfiguration_ChannelFormat_CameraSensorViewConfiguration_ChannelFormat_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("CameraSensorViewConfiguration_ChannelFormat_CameraSensorViewConfiguration_ChannelFormat_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::CameraSensorViewConfiguration_ChannelFormat_CameraSensorViewConfiguration_ChannelFormat_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B413_[bool osi3::CameraSensorViewConfiguration_ChannelFormat_IsValid(int)] ";
	std::cout << "B414_[const class google::protobuf::EnumDescriptor * osi3::CameraSensorViewConfiguration_ChannelFormat_descriptor()] ";
	std::cout << "B415_[bool osi3::CameraSensorViewConfiguration_ChannelFormat_Parse(const std::string &, enum osi3::CameraSensorViewConfiguration_ChannelFormat *)] ";
	std::cout << "B416_[osi3::SensorViewConfiguration] ";
	std::cout << "B417_[void osi3::swap(class osi3::SensorViewConfiguration &, class osi3::SensorViewConfiguration &)] ";
	std::cout << "B418_[osi3::GenericSensorViewConfiguration] ";
	{ // osi3::GenericSensorViewConfiguration file: line:544
		pybind11::class_<osi3::GenericSensorViewConfiguration, std::shared_ptr<osi3::GenericSensorViewConfiguration>, google::protobuf::Message> cl(M("osi3"), "GenericSensorViewConfiguration", "");
		cl.def( pybind11::init( [](){ return new osi3::GenericSensorViewConfiguration(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::GenericSensorViewConfiguration const &o){ return new osi3::GenericSensorViewConfiguration(o); } ) );
		cl.def("assign", (class osi3::GenericSensorViewConfiguration & (osi3::GenericSensorViewConfiguration::*)(const class osi3::GenericSensorViewConfiguration &)) &osi3::GenericSensorViewConfiguration::operator=, "C++: osi3::GenericSensorViewConfiguration::operator=(const class osi3::GenericSensorViewConfiguration &) --> class osi3::GenericSensorViewConfiguration &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GenericSensorViewConfiguration::descriptor, "C++: osi3::GenericSensorViewConfiguration::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GenericSensorViewConfiguration::GetDescriptor, "C++: osi3::GenericSensorViewConfiguration::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::GenericSensorViewConfiguration::GetReflection, "C++: osi3::GenericSensorViewConfiguration::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::GenericSensorViewConfiguration & (*)()) &osi3::GenericSensorViewConfiguration::default_instance, "C++: osi3::GenericSensorViewConfiguration::default_instance() --> const class osi3::GenericSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::GenericSensorViewConfiguration * (*)()) &osi3::GenericSensorViewConfiguration::internal_default_instance, "C++: osi3::GenericSensorViewConfiguration::internal_default_instance() --> const class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::GenericSensorViewConfiguration *)) &osi3::GenericSensorViewConfiguration::Swap, "C++: osi3::GenericSensorViewConfiguration::Swap(class osi3::GenericSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::GenericSensorViewConfiguration *)) &osi3::GenericSensorViewConfiguration::UnsafeArenaSwap, "C++: osi3::GenericSensorViewConfiguration::UnsafeArenaSwap(class osi3::GenericSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::GenericSensorViewConfiguration * (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::New, "C++: osi3::GenericSensorViewConfiguration::New() const --> class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::GenericSensorViewConfiguration * (osi3::GenericSensorViewConfiguration::*)(class google::protobuf::Arena *) const) &osi3::GenericSensorViewConfiguration::New, "C++: osi3::GenericSensorViewConfiguration::New(class google::protobuf::Arena *) const --> class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::GenericSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::GenericSensorViewConfiguration::CopyFrom, "C++: osi3::GenericSensorViewConfiguration::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GenericSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::GenericSensorViewConfiguration::MergeFrom, "C++: osi3::GenericSensorViewConfiguration::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::GenericSensorViewConfiguration::*)(const class osi3::GenericSensorViewConfiguration &)) &osi3::GenericSensorViewConfiguration::CopyFrom, "C++: osi3::GenericSensorViewConfiguration::CopyFrom(const class osi3::GenericSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GenericSensorViewConfiguration::*)(const class osi3::GenericSensorViewConfiguration &)) &osi3::GenericSensorViewConfiguration::MergeFrom, "C++: osi3::GenericSensorViewConfiguration::MergeFrom(const class osi3::GenericSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::Clear, "C++: osi3::GenericSensorViewConfiguration::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::IsInitialized, "C++: osi3::GenericSensorViewConfiguration::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::ByteSizeLong, "C++: osi3::GenericSensorViewConfiguration::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::GenericSensorViewConfiguration::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::GenericSensorViewConfiguration::_InternalParse, "C++: osi3::GenericSensorViewConfiguration::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::GenericSensorViewConfiguration::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::GenericSensorViewConfiguration::_InternalSerialize, "C++: osi3::GenericSensorViewConfiguration::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::GetCachedSize, "C++: osi3::GenericSensorViewConfiguration::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::GetMetadata, "C++: osi3::GenericSensorViewConfiguration::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_sensor_id", (bool (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::has_sensor_id, "C++: osi3::GenericSensorViewConfiguration::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::clear_sensor_id, "C++: osi3::GenericSensorViewConfiguration::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::sensor_id, "C++: osi3::GenericSensorViewConfiguration::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::release_sensor_id, "C++: osi3::GenericSensorViewConfiguration::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::mutable_sensor_id, "C++: osi3::GenericSensorViewConfiguration::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::GenericSensorViewConfiguration::set_allocated_sensor_id, "C++: osi3::GenericSensorViewConfiguration::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::unsafe_arena_release_sensor_id, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::has_mounting_position, "C++: osi3::GenericSensorViewConfiguration::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::clear_mounting_position, "C++: osi3::GenericSensorViewConfiguration::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::mounting_position, "C++: osi3::GenericSensorViewConfiguration::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::release_mounting_position, "C++: osi3::GenericSensorViewConfiguration::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::mutable_mounting_position, "C++: osi3::GenericSensorViewConfiguration::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::GenericSensorViewConfiguration::set_allocated_mounting_position, "C++: osi3::GenericSensorViewConfiguration::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::unsafe_arena_release_mounting_position, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::has_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::clear_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::release_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::mutable_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::GenericSensorViewConfiguration::set_allocated_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::GenericSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse, "C++: osi3::GenericSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("clear_field_of_view_horizontal", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::clear_field_of_view_horizontal, "C++: osi3::GenericSensorViewConfiguration::clear_field_of_view_horizontal() --> void");
		cl.def("field_of_view_horizontal", (double (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::field_of_view_horizontal, "C++: osi3::GenericSensorViewConfiguration::field_of_view_horizontal() const --> double");
		cl.def("set_field_of_view_horizontal", (void (osi3::GenericSensorViewConfiguration::*)(double)) &osi3::GenericSensorViewConfiguration::set_field_of_view_horizontal, "C++: osi3::GenericSensorViewConfiguration::set_field_of_view_horizontal(double) --> void", pybind11::arg("value"));
		cl.def("clear_field_of_view_vertical", (void (osi3::GenericSensorViewConfiguration::*)()) &osi3::GenericSensorViewConfiguration::clear_field_of_view_vertical, "C++: osi3::GenericSensorViewConfiguration::clear_field_of_view_vertical() --> void");
		cl.def("field_of_view_vertical", (double (osi3::GenericSensorViewConfiguration::*)() const) &osi3::GenericSensorViewConfiguration::field_of_view_vertical, "C++: osi3::GenericSensorViewConfiguration::field_of_view_vertical() const --> double");
		cl.def("set_field_of_view_vertical", (void (osi3::GenericSensorViewConfiguration::*)(double)) &osi3::GenericSensorViewConfiguration::set_field_of_view_vertical, "C++: osi3::GenericSensorViewConfiguration::set_field_of_view_vertical(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_34.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_34(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B419_[osi3::RadarSensorViewConfiguration_AntennaDiagramEntry] ";
	{ // osi3::RadarSensorViewConfiguration_AntennaDiagramEntry file: line:752
		pybind11::class_<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry, std::shared_ptr<osi3::RadarSensorViewConfiguration_AntennaDiagramEntry>, google::protobuf::Message> cl(M("osi3"), "RadarSensorViewConfiguration_AntennaDiagramEntry", "");
		cl.def( pybind11::init( [](){ return new osi3::RadarSensorViewConfiguration_AntennaDiagramEntry(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RadarSensorViewConfiguration_AntennaDiagramEntry const &o){ return new osi3::RadarSensorViewConfiguration_AntennaDiagramEntry(o); } ) );
		cl.def("assign", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::operator=, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::operator=(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::descriptor, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetDescriptor, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetReflection, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::default_instance, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::default_instance() --> const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::internal_default_instance, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::internal_default_instance() --> const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::Swap, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::Swap(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::UnsafeArenaSwap, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::UnsafeArenaSwap(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::New, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::New() const --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(class google::protobuf::Arena *) const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::New, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::New(class google::protobuf::Arena *) const --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const class google::protobuf::Message &)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const class google::protobuf::Message &)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::CopyFrom(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::MergeFrom(const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::Clear, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::IsInitialized, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::ByteSizeLong, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::_InternalParse, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::_InternalSerialize, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetCachedSize, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetMetadata, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_horizontal_angle", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_horizontal_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_horizontal_angle() --> void");
		cl.def("horizontal_angle", (double (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::horizontal_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::horizontal_angle() const --> double");
		cl.def("set_horizontal_angle", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(double)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_horizontal_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_horizontal_angle(double) --> void", pybind11::arg("value"));
		cl.def("clear_vertical_angle", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_vertical_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_vertical_angle() --> void");
		cl.def("vertical_angle", (double (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::vertical_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::vertical_angle() const --> double");
		cl.def("set_vertical_angle", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(double)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_vertical_angle, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_vertical_angle(double) --> void", pybind11::arg("value"));
		cl.def("clear_response", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)()) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_response, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::clear_response() --> void");
		cl.def("response", (double (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)() const) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::response, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::response() const --> double");
		cl.def("set_response", (void (osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::*)(double)) &osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_response, "C++: osi3::RadarSensorViewConfiguration_AntennaDiagramEntry::set_response(double) --> void", pybind11::arg("value"));
	}
	std::cout << "B420_[void osi3::swap(class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &, class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &)] ";
	std::cout << "B421_[osi3::RadarSensorViewConfiguration] ";
	{ // osi3::RadarSensorViewConfiguration file: line:911
		pybind11::class_<osi3::RadarSensorViewConfiguration, std::shared_ptr<osi3::RadarSensorViewConfiguration>, google::protobuf::Message> cl(M("osi3"), "RadarSensorViewConfiguration", "");
		cl.def( pybind11::init( [](){ return new osi3::RadarSensorViewConfiguration(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RadarSensorViewConfiguration const &o){ return new osi3::RadarSensorViewConfiguration(o); } ) );
		cl.def("assign", (class osi3::RadarSensorViewConfiguration & (osi3::RadarSensorViewConfiguration::*)(const class osi3::RadarSensorViewConfiguration &)) &osi3::RadarSensorViewConfiguration::operator=, "C++: osi3::RadarSensorViewConfiguration::operator=(const class osi3::RadarSensorViewConfiguration &) --> class osi3::RadarSensorViewConfiguration &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorViewConfiguration::descriptor, "C++: osi3::RadarSensorViewConfiguration::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorViewConfiguration::GetDescriptor, "C++: osi3::RadarSensorViewConfiguration::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RadarSensorViewConfiguration::GetReflection, "C++: osi3::RadarSensorViewConfiguration::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RadarSensorViewConfiguration & (*)()) &osi3::RadarSensorViewConfiguration::default_instance, "C++: osi3::RadarSensorViewConfiguration::default_instance() --> const class osi3::RadarSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RadarSensorViewConfiguration * (*)()) &osi3::RadarSensorViewConfiguration::internal_default_instance, "C++: osi3::RadarSensorViewConfiguration::internal_default_instance() --> const class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::RadarSensorViewConfiguration *)) &osi3::RadarSensorViewConfiguration::Swap, "C++: osi3::RadarSensorViewConfiguration::Swap(class osi3::RadarSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::RadarSensorViewConfiguration *)) &osi3::RadarSensorViewConfiguration::UnsafeArenaSwap, "C++: osi3::RadarSensorViewConfiguration::UnsafeArenaSwap(class osi3::RadarSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RadarSensorViewConfiguration * (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::New, "C++: osi3::RadarSensorViewConfiguration::New() const --> class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RadarSensorViewConfiguration * (osi3::RadarSensorViewConfiguration::*)(class google::protobuf::Arena *) const) &osi3::RadarSensorViewConfiguration::New, "C++: osi3::RadarSensorViewConfiguration::New(class google::protobuf::Arena *) const --> class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RadarSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::RadarSensorViewConfiguration::CopyFrom, "C++: osi3::RadarSensorViewConfiguration::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::RadarSensorViewConfiguration::MergeFrom, "C++: osi3::RadarSensorViewConfiguration::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RadarSensorViewConfiguration::*)(const class osi3::RadarSensorViewConfiguration &)) &osi3::RadarSensorViewConfiguration::CopyFrom, "C++: osi3::RadarSensorViewConfiguration::CopyFrom(const class osi3::RadarSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorViewConfiguration::*)(const class osi3::RadarSensorViewConfiguration &)) &osi3::RadarSensorViewConfiguration::MergeFrom, "C++: osi3::RadarSensorViewConfiguration::MergeFrom(const class osi3::RadarSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::Clear, "C++: osi3::RadarSensorViewConfiguration::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::IsInitialized, "C++: osi3::RadarSensorViewConfiguration::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::ByteSizeLong, "C++: osi3::RadarSensorViewConfiguration::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RadarSensorViewConfiguration::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RadarSensorViewConfiguration::_InternalParse, "C++: osi3::RadarSensorViewConfiguration::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RadarSensorViewConfiguration::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RadarSensorViewConfiguration::_InternalSerialize, "C++: osi3::RadarSensorViewConfiguration::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::GetCachedSize, "C++: osi3::RadarSensorViewConfiguration::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::GetMetadata, "C++: osi3::RadarSensorViewConfiguration::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("tx_antenna_diagram_size", (int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::tx_antenna_diagram_size, "C++: osi3::RadarSensorViewConfiguration::tx_antenna_diagram_size() const --> int");
		cl.def("clear_tx_antenna_diagram", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::clear_tx_antenna_diagram() --> void");
		cl.def("mutable_tx_antenna_diagram", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration::*)(int)) &osi3::RadarSensorViewConfiguration::mutable_tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::mutable_tx_antenna_diagram(int) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_tx_antenna_diagram", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::mutable_tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::mutable_tx_antenna_diagram() --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *", pybind11::return_value_policy::reference);
		cl.def("tx_antenna_diagram", (const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (osi3::RadarSensorViewConfiguration::*)(int) const) &osi3::RadarSensorViewConfiguration::tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::tx_antenna_diagram(int) const --> const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_tx_antenna_diagram", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::add_tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::add_tx_antenna_diagram() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("tx_antenna_diagram", (const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> & (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::tx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::tx_antenna_diagram() const --> const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &", pybind11::return_value_policy::automatic);
		cl.def("rx_antenna_diagram_size", (int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::rx_antenna_diagram_size, "C++: osi3::RadarSensorViewConfiguration::rx_antenna_diagram_size() const --> int");
		cl.def("clear_rx_antenna_diagram", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::clear_rx_antenna_diagram() --> void");
		cl.def("mutable_rx_antenna_diagram", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration::*)(int)) &osi3::RadarSensorViewConfiguration::mutable_rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::mutable_rx_antenna_diagram(int) --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_rx_antenna_diagram", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::mutable_rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::mutable_rx_antenna_diagram() --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> *", pybind11::return_value_policy::reference);
		cl.def("rx_antenna_diagram", (const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry & (osi3::RadarSensorViewConfiguration::*)(int) const) &osi3::RadarSensorViewConfiguration::rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::rx_antenna_diagram(int) const --> const class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_rx_antenna_diagram", (class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::add_rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::add_rx_antenna_diagram() --> class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry *", pybind11::return_value_policy::reference);
		cl.def("rx_antenna_diagram", (const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> & (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::rx_antenna_diagram, "C++: osi3::RadarSensorViewConfiguration::rx_antenna_diagram() const --> const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorViewConfiguration_AntennaDiagramEntry> &", pybind11::return_value_policy::automatic);
		cl.def("has_sensor_id", (bool (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::has_sensor_id, "C++: osi3::RadarSensorViewConfiguration::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_sensor_id, "C++: osi3::RadarSensorViewConfiguration::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::sensor_id, "C++: osi3::RadarSensorViewConfiguration::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::release_sensor_id, "C++: osi3::RadarSensorViewConfiguration::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::mutable_sensor_id, "C++: osi3::RadarSensorViewConfiguration::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::RadarSensorViewConfiguration::set_allocated_sensor_id, "C++: osi3::RadarSensorViewConfiguration::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::unsafe_arena_release_sensor_id, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::has_mounting_position, "C++: osi3::RadarSensorViewConfiguration::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_mounting_position, "C++: osi3::RadarSensorViewConfiguration::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::mounting_position, "C++: osi3::RadarSensorViewConfiguration::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::release_mounting_position, "C++: osi3::RadarSensorViewConfiguration::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::mutable_mounting_position, "C++: osi3::RadarSensorViewConfiguration::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::RadarSensorViewConfiguration::set_allocated_mounting_position, "C++: osi3::RadarSensorViewConfiguration::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::unsafe_arena_release_mounting_position, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::has_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::release_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::mutable_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::RadarSensorViewConfiguration::set_allocated_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::RadarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse, "C++: osi3::RadarSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("clear_field_of_view_horizontal", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_field_of_view_horizontal, "C++: osi3::RadarSensorViewConfiguration::clear_field_of_view_horizontal() --> void");
		cl.def("field_of_view_horizontal", (double (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::field_of_view_horizontal, "C++: osi3::RadarSensorViewConfiguration::field_of_view_horizontal() const --> double");
		cl.def("set_field_of_view_horizontal", (void (osi3::RadarSensorViewConfiguration::*)(double)) &osi3::RadarSensorViewConfiguration::set_field_of_view_horizontal, "C++: osi3::RadarSensorViewConfiguration::set_field_of_view_horizontal(double) --> void", pybind11::arg("value"));
		cl.def("clear_field_of_view_vertical", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_field_of_view_vertical, "C++: osi3::RadarSensorViewConfiguration::clear_field_of_view_vertical() --> void");
		cl.def("field_of_view_vertical", (double (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::field_of_view_vertical, "C++: osi3::RadarSensorViewConfiguration::field_of_view_vertical() const --> double");
		cl.def("set_field_of_view_vertical", (void (osi3::RadarSensorViewConfiguration::*)(double)) &osi3::RadarSensorViewConfiguration::set_field_of_view_vertical, "C++: osi3::RadarSensorViewConfiguration::set_field_of_view_vertical(double) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_rays_horizontal", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_number_of_rays_horizontal, "C++: osi3::RadarSensorViewConfiguration::clear_number_of_rays_horizontal() --> void");
		cl.def("number_of_rays_horizontal", (unsigned int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::number_of_rays_horizontal, "C++: osi3::RadarSensorViewConfiguration::number_of_rays_horizontal() const --> unsigned int");
		cl.def("set_number_of_rays_horizontal", (void (osi3::RadarSensorViewConfiguration::*)(unsigned int)) &osi3::RadarSensorViewConfiguration::set_number_of_rays_horizontal, "C++: osi3::RadarSensorViewConfiguration::set_number_of_rays_horizontal(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_rays_vertical", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_number_of_rays_vertical, "C++: osi3::RadarSensorViewConfiguration::clear_number_of_rays_vertical() --> void");
		cl.def("number_of_rays_vertical", (unsigned int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::number_of_rays_vertical, "C++: osi3::RadarSensorViewConfiguration::number_of_rays_vertical() const --> unsigned int");
		cl.def("set_number_of_rays_vertical", (void (osi3::RadarSensorViewConfiguration::*)(unsigned int)) &osi3::RadarSensorViewConfiguration::set_number_of_rays_vertical, "C++: osi3::RadarSensorViewConfiguration::set_number_of_rays_vertical(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_emitter_frequency", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_emitter_frequency, "C++: osi3::RadarSensorViewConfiguration::clear_emitter_frequency() --> void");
		cl.def("emitter_frequency", (double (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::emitter_frequency, "C++: osi3::RadarSensorViewConfiguration::emitter_frequency() const --> double");
		cl.def("set_emitter_frequency", (void (osi3::RadarSensorViewConfiguration::*)(double)) &osi3::RadarSensorViewConfiguration::set_emitter_frequency, "C++: osi3::RadarSensorViewConfiguration::set_emitter_frequency(double) --> void", pybind11::arg("value"));
		cl.def("clear_max_number_of_interactions", (void (osi3::RadarSensorViewConfiguration::*)()) &osi3::RadarSensorViewConfiguration::clear_max_number_of_interactions, "C++: osi3::RadarSensorViewConfiguration::clear_max_number_of_interactions() --> void");
		cl.def("max_number_of_interactions", (unsigned int (osi3::RadarSensorViewConfiguration::*)() const) &osi3::RadarSensorViewConfiguration::max_number_of_interactions, "C++: osi3::RadarSensorViewConfiguration::max_number_of_interactions() const --> unsigned int");
		cl.def("set_max_number_of_interactions", (void (osi3::RadarSensorViewConfiguration::*)(unsigned int)) &osi3::RadarSensorViewConfiguration::set_max_number_of_interactions, "C++: osi3::RadarSensorViewConfiguration::set_max_number_of_interactions(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_35.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_35(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B422_[osi3::LidarSensorViewConfiguration] ";
	{ // osi3::LidarSensorViewConfiguration file: line:1205
		pybind11::class_<osi3::LidarSensorViewConfiguration, std::shared_ptr<osi3::LidarSensorViewConfiguration>, google::protobuf::Message> cl(M("osi3"), "LidarSensorViewConfiguration", "");
		cl.def( pybind11::init( [](){ return new osi3::LidarSensorViewConfiguration(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LidarSensorViewConfiguration const &o){ return new osi3::LidarSensorViewConfiguration(o); } ) );
		cl.def("assign", (class osi3::LidarSensorViewConfiguration & (osi3::LidarSensorViewConfiguration::*)(const class osi3::LidarSensorViewConfiguration &)) &osi3::LidarSensorViewConfiguration::operator=, "C++: osi3::LidarSensorViewConfiguration::operator=(const class osi3::LidarSensorViewConfiguration &) --> class osi3::LidarSensorViewConfiguration &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorViewConfiguration::descriptor, "C++: osi3::LidarSensorViewConfiguration::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorViewConfiguration::GetDescriptor, "C++: osi3::LidarSensorViewConfiguration::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LidarSensorViewConfiguration::GetReflection, "C++: osi3::LidarSensorViewConfiguration::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LidarSensorViewConfiguration & (*)()) &osi3::LidarSensorViewConfiguration::default_instance, "C++: osi3::LidarSensorViewConfiguration::default_instance() --> const class osi3::LidarSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LidarSensorViewConfiguration * (*)()) &osi3::LidarSensorViewConfiguration::internal_default_instance, "C++: osi3::LidarSensorViewConfiguration::internal_default_instance() --> const class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::LidarSensorViewConfiguration *)) &osi3::LidarSensorViewConfiguration::Swap, "C++: osi3::LidarSensorViewConfiguration::Swap(class osi3::LidarSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::LidarSensorViewConfiguration *)) &osi3::LidarSensorViewConfiguration::UnsafeArenaSwap, "C++: osi3::LidarSensorViewConfiguration::UnsafeArenaSwap(class osi3::LidarSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LidarSensorViewConfiguration * (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::New, "C++: osi3::LidarSensorViewConfiguration::New() const --> class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LidarSensorViewConfiguration * (osi3::LidarSensorViewConfiguration::*)(class google::protobuf::Arena *) const) &osi3::LidarSensorViewConfiguration::New, "C++: osi3::LidarSensorViewConfiguration::New(class google::protobuf::Arena *) const --> class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LidarSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::LidarSensorViewConfiguration::CopyFrom, "C++: osi3::LidarSensorViewConfiguration::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::LidarSensorViewConfiguration::MergeFrom, "C++: osi3::LidarSensorViewConfiguration::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LidarSensorViewConfiguration::*)(const class osi3::LidarSensorViewConfiguration &)) &osi3::LidarSensorViewConfiguration::CopyFrom, "C++: osi3::LidarSensorViewConfiguration::CopyFrom(const class osi3::LidarSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorViewConfiguration::*)(const class osi3::LidarSensorViewConfiguration &)) &osi3::LidarSensorViewConfiguration::MergeFrom, "C++: osi3::LidarSensorViewConfiguration::MergeFrom(const class osi3::LidarSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::Clear, "C++: osi3::LidarSensorViewConfiguration::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::IsInitialized, "C++: osi3::LidarSensorViewConfiguration::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::ByteSizeLong, "C++: osi3::LidarSensorViewConfiguration::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LidarSensorViewConfiguration::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LidarSensorViewConfiguration::_InternalParse, "C++: osi3::LidarSensorViewConfiguration::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LidarSensorViewConfiguration::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LidarSensorViewConfiguration::_InternalSerialize, "C++: osi3::LidarSensorViewConfiguration::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::GetCachedSize, "C++: osi3::LidarSensorViewConfiguration::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::GetMetadata, "C++: osi3::LidarSensorViewConfiguration::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("directions_size", (int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::directions_size, "C++: osi3::LidarSensorViewConfiguration::directions_size() const --> int");
		cl.def("clear_directions", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_directions, "C++: osi3::LidarSensorViewConfiguration::clear_directions() --> void");
		cl.def("mutable_directions", (class osi3::Vector3d * (osi3::LidarSensorViewConfiguration::*)(int)) &osi3::LidarSensorViewConfiguration::mutable_directions, "C++: osi3::LidarSensorViewConfiguration::mutable_directions(int) --> class osi3::Vector3d *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_directions", (class google::protobuf::RepeatedPtrField<class osi3::Vector3d> * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::mutable_directions, "C++: osi3::LidarSensorViewConfiguration::mutable_directions() --> class google::protobuf::RepeatedPtrField<class osi3::Vector3d> *", pybind11::return_value_policy::reference);
		cl.def("directions", (const class osi3::Vector3d & (osi3::LidarSensorViewConfiguration::*)(int) const) &osi3::LidarSensorViewConfiguration::directions, "C++: osi3::LidarSensorViewConfiguration::directions(int) const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_directions", (class osi3::Vector3d * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::add_directions, "C++: osi3::LidarSensorViewConfiguration::add_directions() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("directions", (const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> & (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::directions, "C++: osi3::LidarSensorViewConfiguration::directions() const --> const class google::protobuf::RepeatedPtrField<class osi3::Vector3d> &", pybind11::return_value_policy::automatic);
		cl.def("timings_size", (int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::timings_size, "C++: osi3::LidarSensorViewConfiguration::timings_size() const --> int");
		cl.def("clear_timings", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_timings, "C++: osi3::LidarSensorViewConfiguration::clear_timings() --> void");
		cl.def("timings", (unsigned int (osi3::LidarSensorViewConfiguration::*)(int) const) &osi3::LidarSensorViewConfiguration::timings, "C++: osi3::LidarSensorViewConfiguration::timings(int) const --> unsigned int", pybind11::arg("index"));
		cl.def("set_timings", (void (osi3::LidarSensorViewConfiguration::*)(int, unsigned int)) &osi3::LidarSensorViewConfiguration::set_timings, "C++: osi3::LidarSensorViewConfiguration::set_timings(int, unsigned int) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_timings", (void (osi3::LidarSensorViewConfiguration::*)(unsigned int)) &osi3::LidarSensorViewConfiguration::add_timings, "C++: osi3::LidarSensorViewConfiguration::add_timings(unsigned int) --> void", pybind11::arg("value"));
		cl.def("timings", (const class google::protobuf::RepeatedField<google::protobuf::uint32> & (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::timings, "C++: osi3::LidarSensorViewConfiguration::timings() const --> const class google::protobuf::RepeatedField<google::protobuf::uint32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_timings", (class google::protobuf::RepeatedField<google::protobuf::uint32> * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::mutable_timings, "C++: osi3::LidarSensorViewConfiguration::mutable_timings() --> class google::protobuf::RepeatedField<google::protobuf::uint32> *", pybind11::return_value_policy::reference);
		cl.def("has_sensor_id", (bool (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::has_sensor_id, "C++: osi3::LidarSensorViewConfiguration::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_sensor_id, "C++: osi3::LidarSensorViewConfiguration::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::sensor_id, "C++: osi3::LidarSensorViewConfiguration::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::release_sensor_id, "C++: osi3::LidarSensorViewConfiguration::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::mutable_sensor_id, "C++: osi3::LidarSensorViewConfiguration::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::LidarSensorViewConfiguration::set_allocated_sensor_id, "C++: osi3::LidarSensorViewConfiguration::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::unsafe_arena_release_sensor_id, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::has_mounting_position, "C++: osi3::LidarSensorViewConfiguration::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_mounting_position, "C++: osi3::LidarSensorViewConfiguration::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::mounting_position, "C++: osi3::LidarSensorViewConfiguration::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::release_mounting_position, "C++: osi3::LidarSensorViewConfiguration::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::mutable_mounting_position, "C++: osi3::LidarSensorViewConfiguration::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::LidarSensorViewConfiguration::set_allocated_mounting_position, "C++: osi3::LidarSensorViewConfiguration::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::unsafe_arena_release_mounting_position, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::has_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::release_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::mutable_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::LidarSensorViewConfiguration::set_allocated_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::LidarSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse, "C++: osi3::LidarSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("clear_field_of_view_horizontal", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_field_of_view_horizontal, "C++: osi3::LidarSensorViewConfiguration::clear_field_of_view_horizontal() --> void");
		cl.def("field_of_view_horizontal", (double (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::field_of_view_horizontal, "C++: osi3::LidarSensorViewConfiguration::field_of_view_horizontal() const --> double");
		cl.def("set_field_of_view_horizontal", (void (osi3::LidarSensorViewConfiguration::*)(double)) &osi3::LidarSensorViewConfiguration::set_field_of_view_horizontal, "C++: osi3::LidarSensorViewConfiguration::set_field_of_view_horizontal(double) --> void", pybind11::arg("value"));
		cl.def("clear_field_of_view_vertical", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_field_of_view_vertical, "C++: osi3::LidarSensorViewConfiguration::clear_field_of_view_vertical() --> void");
		cl.def("field_of_view_vertical", (double (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::field_of_view_vertical, "C++: osi3::LidarSensorViewConfiguration::field_of_view_vertical() const --> double");
		cl.def("set_field_of_view_vertical", (void (osi3::LidarSensorViewConfiguration::*)(double)) &osi3::LidarSensorViewConfiguration::set_field_of_view_vertical, "C++: osi3::LidarSensorViewConfiguration::set_field_of_view_vertical(double) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_rays_horizontal", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_number_of_rays_horizontal, "C++: osi3::LidarSensorViewConfiguration::clear_number_of_rays_horizontal() --> void");
		cl.def("number_of_rays_horizontal", (unsigned int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::number_of_rays_horizontal, "C++: osi3::LidarSensorViewConfiguration::number_of_rays_horizontal() const --> unsigned int");
		cl.def("set_number_of_rays_horizontal", (void (osi3::LidarSensorViewConfiguration::*)(unsigned int)) &osi3::LidarSensorViewConfiguration::set_number_of_rays_horizontal, "C++: osi3::LidarSensorViewConfiguration::set_number_of_rays_horizontal(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_rays_vertical", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_number_of_rays_vertical, "C++: osi3::LidarSensorViewConfiguration::clear_number_of_rays_vertical() --> void");
		cl.def("number_of_rays_vertical", (unsigned int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::number_of_rays_vertical, "C++: osi3::LidarSensorViewConfiguration::number_of_rays_vertical() const --> unsigned int");
		cl.def("set_number_of_rays_vertical", (void (osi3::LidarSensorViewConfiguration::*)(unsigned int)) &osi3::LidarSensorViewConfiguration::set_number_of_rays_vertical, "C++: osi3::LidarSensorViewConfiguration::set_number_of_rays_vertical(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_emitter_frequency", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_emitter_frequency, "C++: osi3::LidarSensorViewConfiguration::clear_emitter_frequency() --> void");
		cl.def("emitter_frequency", (double (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::emitter_frequency, "C++: osi3::LidarSensorViewConfiguration::emitter_frequency() const --> double");
		cl.def("set_emitter_frequency", (void (osi3::LidarSensorViewConfiguration::*)(double)) &osi3::LidarSensorViewConfiguration::set_emitter_frequency, "C++: osi3::LidarSensorViewConfiguration::set_emitter_frequency(double) --> void", pybind11::arg("value"));
		cl.def("clear_max_number_of_interactions", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_max_number_of_interactions, "C++: osi3::LidarSensorViewConfiguration::clear_max_number_of_interactions() --> void");
		cl.def("max_number_of_interactions", (unsigned int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::max_number_of_interactions, "C++: osi3::LidarSensorViewConfiguration::max_number_of_interactions() const --> unsigned int");
		cl.def("set_max_number_of_interactions", (void (osi3::LidarSensorViewConfiguration::*)(unsigned int)) &osi3::LidarSensorViewConfiguration::set_max_number_of_interactions, "C++: osi3::LidarSensorViewConfiguration::set_max_number_of_interactions(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_num_of_pixels", (void (osi3::LidarSensorViewConfiguration::*)()) &osi3::LidarSensorViewConfiguration::clear_num_of_pixels, "C++: osi3::LidarSensorViewConfiguration::clear_num_of_pixels() --> void");
		cl.def("num_of_pixels", (unsigned int (osi3::LidarSensorViewConfiguration::*)() const) &osi3::LidarSensorViewConfiguration::num_of_pixels, "C++: osi3::LidarSensorViewConfiguration::num_of_pixels() const --> unsigned int");
		cl.def("set_num_of_pixels", (void (osi3::LidarSensorViewConfiguration::*)(unsigned int)) &osi3::LidarSensorViewConfiguration::set_num_of_pixels, "C++: osi3::LidarSensorViewConfiguration::set_num_of_pixels(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_36.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_36(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B423_[osi3::CameraSensorViewConfiguration] ";
	{ // osi3::CameraSensorViewConfiguration file: line:1513
		pybind11::class_<osi3::CameraSensorViewConfiguration, std::shared_ptr<osi3::CameraSensorViewConfiguration>, google::protobuf::Message> cl(M("osi3"), "CameraSensorViewConfiguration", "");
		cl.def( pybind11::init( [](){ return new osi3::CameraSensorViewConfiguration(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::CameraSensorViewConfiguration const &o){ return new osi3::CameraSensorViewConfiguration(o); } ) );
		cl.def("assign", (class osi3::CameraSensorViewConfiguration & (osi3::CameraSensorViewConfiguration::*)(const class osi3::CameraSensorViewConfiguration &)) &osi3::CameraSensorViewConfiguration::operator=, "C++: osi3::CameraSensorViewConfiguration::operator=(const class osi3::CameraSensorViewConfiguration &) --> class osi3::CameraSensorViewConfiguration &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraSensorViewConfiguration::descriptor, "C++: osi3::CameraSensorViewConfiguration::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraSensorViewConfiguration::GetDescriptor, "C++: osi3::CameraSensorViewConfiguration::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::CameraSensorViewConfiguration::GetReflection, "C++: osi3::CameraSensorViewConfiguration::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::CameraSensorViewConfiguration & (*)()) &osi3::CameraSensorViewConfiguration::default_instance, "C++: osi3::CameraSensorViewConfiguration::default_instance() --> const class osi3::CameraSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::CameraSensorViewConfiguration * (*)()) &osi3::CameraSensorViewConfiguration::internal_default_instance, "C++: osi3::CameraSensorViewConfiguration::internal_default_instance() --> const class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::CameraSensorViewConfiguration *)) &osi3::CameraSensorViewConfiguration::Swap, "C++: osi3::CameraSensorViewConfiguration::Swap(class osi3::CameraSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::CameraSensorViewConfiguration *)) &osi3::CameraSensorViewConfiguration::UnsafeArenaSwap, "C++: osi3::CameraSensorViewConfiguration::UnsafeArenaSwap(class osi3::CameraSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::CameraSensorViewConfiguration * (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::New, "C++: osi3::CameraSensorViewConfiguration::New() const --> class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::CameraSensorViewConfiguration * (osi3::CameraSensorViewConfiguration::*)(class google::protobuf::Arena *) const) &osi3::CameraSensorViewConfiguration::New, "C++: osi3::CameraSensorViewConfiguration::New(class google::protobuf::Arena *) const --> class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::CameraSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::CameraSensorViewConfiguration::CopyFrom, "C++: osi3::CameraSensorViewConfiguration::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::CameraSensorViewConfiguration::MergeFrom, "C++: osi3::CameraSensorViewConfiguration::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::CameraSensorViewConfiguration::*)(const class osi3::CameraSensorViewConfiguration &)) &osi3::CameraSensorViewConfiguration::CopyFrom, "C++: osi3::CameraSensorViewConfiguration::CopyFrom(const class osi3::CameraSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraSensorViewConfiguration::*)(const class osi3::CameraSensorViewConfiguration &)) &osi3::CameraSensorViewConfiguration::MergeFrom, "C++: osi3::CameraSensorViewConfiguration::MergeFrom(const class osi3::CameraSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::Clear, "C++: osi3::CameraSensorViewConfiguration::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::IsInitialized, "C++: osi3::CameraSensorViewConfiguration::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::ByteSizeLong, "C++: osi3::CameraSensorViewConfiguration::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::CameraSensorViewConfiguration::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::CameraSensorViewConfiguration::_InternalParse, "C++: osi3::CameraSensorViewConfiguration::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::CameraSensorViewConfiguration::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::CameraSensorViewConfiguration::_InternalSerialize, "C++: osi3::CameraSensorViewConfiguration::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::GetCachedSize, "C++: osi3::CameraSensorViewConfiguration::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::GetMetadata, "C++: osi3::CameraSensorViewConfiguration::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("ChannelFormat_IsValid", (bool (*)(int)) &osi3::CameraSensorViewConfiguration::ChannelFormat_IsValid, "C++: osi3::CameraSensorViewConfiguration::ChannelFormat_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("ChannelFormat_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::CameraSensorViewConfiguration::ChannelFormat_descriptor, "C++: osi3::CameraSensorViewConfiguration::ChannelFormat_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("ChannelFormat_Parse", (bool (*)(const std::string &, enum osi3::CameraSensorViewConfiguration_ChannelFormat *)) &osi3::CameraSensorViewConfiguration::ChannelFormat_Parse, "C++: osi3::CameraSensorViewConfiguration::ChannelFormat_Parse(const std::string &, enum osi3::CameraSensorViewConfiguration_ChannelFormat *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("channel_format_size", (int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::channel_format_size, "C++: osi3::CameraSensorViewConfiguration::channel_format_size() const --> int");
		cl.def("clear_channel_format", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_channel_format, "C++: osi3::CameraSensorViewConfiguration::clear_channel_format() --> void");
		cl.def("channel_format", (enum osi3::CameraSensorViewConfiguration_ChannelFormat (osi3::CameraSensorViewConfiguration::*)(int) const) &osi3::CameraSensorViewConfiguration::channel_format, "C++: osi3::CameraSensorViewConfiguration::channel_format(int) const --> enum osi3::CameraSensorViewConfiguration_ChannelFormat", pybind11::arg("index"));
		cl.def("set_channel_format", (void (osi3::CameraSensorViewConfiguration::*)(int, enum osi3::CameraSensorViewConfiguration_ChannelFormat)) &osi3::CameraSensorViewConfiguration::set_channel_format, "C++: osi3::CameraSensorViewConfiguration::set_channel_format(int, enum osi3::CameraSensorViewConfiguration_ChannelFormat) --> void", pybind11::arg("index"), pybind11::arg("value"));
		cl.def("add_channel_format", (void (osi3::CameraSensorViewConfiguration::*)(enum osi3::CameraSensorViewConfiguration_ChannelFormat)) &osi3::CameraSensorViewConfiguration::add_channel_format, "C++: osi3::CameraSensorViewConfiguration::add_channel_format(enum osi3::CameraSensorViewConfiguration_ChannelFormat) --> void", pybind11::arg("value"));
		cl.def("channel_format", (const class google::protobuf::RepeatedField<google::protobuf::int32> & (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::channel_format, "C++: osi3::CameraSensorViewConfiguration::channel_format() const --> const class google::protobuf::RepeatedField<google::protobuf::int32> &", pybind11::return_value_policy::automatic);
		cl.def("mutable_channel_format", (class google::protobuf::RepeatedField<google::protobuf::int32> * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::mutable_channel_format, "C++: osi3::CameraSensorViewConfiguration::mutable_channel_format() --> class google::protobuf::RepeatedField<google::protobuf::int32> *", pybind11::return_value_policy::reference);
		cl.def("wavelength_data_size", (int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::wavelength_data_size, "C++: osi3::CameraSensorViewConfiguration::wavelength_data_size() const --> int");
		cl.def("clear_wavelength_data", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_wavelength_data, "C++: osi3::CameraSensorViewConfiguration::clear_wavelength_data() --> void");
		cl.def("mutable_wavelength_data", (class osi3::WavelengthData * (osi3::CameraSensorViewConfiguration::*)(int)) &osi3::CameraSensorViewConfiguration::mutable_wavelength_data, "C++: osi3::CameraSensorViewConfiguration::mutable_wavelength_data(int) --> class osi3::WavelengthData *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_wavelength_data", (class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::mutable_wavelength_data, "C++: osi3::CameraSensorViewConfiguration::mutable_wavelength_data() --> class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> *", pybind11::return_value_policy::reference);
		cl.def("wavelength_data", (const class osi3::WavelengthData & (osi3::CameraSensorViewConfiguration::*)(int) const) &osi3::CameraSensorViewConfiguration::wavelength_data, "C++: osi3::CameraSensorViewConfiguration::wavelength_data(int) const --> const class osi3::WavelengthData &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_wavelength_data", (class osi3::WavelengthData * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::add_wavelength_data, "C++: osi3::CameraSensorViewConfiguration::add_wavelength_data() --> class osi3::WavelengthData *", pybind11::return_value_policy::reference);
		cl.def("wavelength_data", (const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> & (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::wavelength_data, "C++: osi3::CameraSensorViewConfiguration::wavelength_data() const --> const class google::protobuf::RepeatedPtrField<class osi3::WavelengthData> &", pybind11::return_value_policy::automatic);
		cl.def("has_sensor_id", (bool (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::has_sensor_id, "C++: osi3::CameraSensorViewConfiguration::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_sensor_id, "C++: osi3::CameraSensorViewConfiguration::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::sensor_id, "C++: osi3::CameraSensorViewConfiguration::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::release_sensor_id, "C++: osi3::CameraSensorViewConfiguration::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::mutable_sensor_id, "C++: osi3::CameraSensorViewConfiguration::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::CameraSensorViewConfiguration::set_allocated_sensor_id, "C++: osi3::CameraSensorViewConfiguration::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::unsafe_arena_release_sensor_id, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::has_mounting_position, "C++: osi3::CameraSensorViewConfiguration::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_mounting_position, "C++: osi3::CameraSensorViewConfiguration::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::mounting_position, "C++: osi3::CameraSensorViewConfiguration::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::release_mounting_position, "C++: osi3::CameraSensorViewConfiguration::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::mutable_mounting_position, "C++: osi3::CameraSensorViewConfiguration::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::CameraSensorViewConfiguration::set_allocated_mounting_position, "C++: osi3::CameraSensorViewConfiguration::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::unsafe_arena_release_mounting_position, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::has_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::release_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::mutable_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::CameraSensorViewConfiguration::set_allocated_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::CameraSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse, "C++: osi3::CameraSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("clear_field_of_view_horizontal", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_field_of_view_horizontal, "C++: osi3::CameraSensorViewConfiguration::clear_field_of_view_horizontal() --> void");
		cl.def("field_of_view_horizontal", (double (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::field_of_view_horizontal, "C++: osi3::CameraSensorViewConfiguration::field_of_view_horizontal() const --> double");
		cl.def("set_field_of_view_horizontal", (void (osi3::CameraSensorViewConfiguration::*)(double)) &osi3::CameraSensorViewConfiguration::set_field_of_view_horizontal, "C++: osi3::CameraSensorViewConfiguration::set_field_of_view_horizontal(double) --> void", pybind11::arg("value"));
		cl.def("clear_field_of_view_vertical", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_field_of_view_vertical, "C++: osi3::CameraSensorViewConfiguration::clear_field_of_view_vertical() --> void");
		cl.def("field_of_view_vertical", (double (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::field_of_view_vertical, "C++: osi3::CameraSensorViewConfiguration::field_of_view_vertical() const --> double");
		cl.def("set_field_of_view_vertical", (void (osi3::CameraSensorViewConfiguration::*)(double)) &osi3::CameraSensorViewConfiguration::set_field_of_view_vertical, "C++: osi3::CameraSensorViewConfiguration::set_field_of_view_vertical(double) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_pixels_horizontal", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_number_of_pixels_horizontal, "C++: osi3::CameraSensorViewConfiguration::clear_number_of_pixels_horizontal() --> void");
		cl.def("number_of_pixels_horizontal", (unsigned int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::number_of_pixels_horizontal, "C++: osi3::CameraSensorViewConfiguration::number_of_pixels_horizontal() const --> unsigned int");
		cl.def("set_number_of_pixels_horizontal", (void (osi3::CameraSensorViewConfiguration::*)(unsigned int)) &osi3::CameraSensorViewConfiguration::set_number_of_pixels_horizontal, "C++: osi3::CameraSensorViewConfiguration::set_number_of_pixels_horizontal(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_pixels_vertical", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_number_of_pixels_vertical, "C++: osi3::CameraSensorViewConfiguration::clear_number_of_pixels_vertical() --> void");
		cl.def("number_of_pixels_vertical", (unsigned int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::number_of_pixels_vertical, "C++: osi3::CameraSensorViewConfiguration::number_of_pixels_vertical() const --> unsigned int");
		cl.def("set_number_of_pixels_vertical", (void (osi3::CameraSensorViewConfiguration::*)(unsigned int)) &osi3::CameraSensorViewConfiguration::set_number_of_pixels_vertical, "C++: osi3::CameraSensorViewConfiguration::set_number_of_pixels_vertical(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_samples_per_pixel", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_samples_per_pixel, "C++: osi3::CameraSensorViewConfiguration::clear_samples_per_pixel() --> void");
		cl.def("samples_per_pixel", (unsigned int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::samples_per_pixel, "C++: osi3::CameraSensorViewConfiguration::samples_per_pixel() const --> unsigned int");
		cl.def("set_samples_per_pixel", (void (osi3::CameraSensorViewConfiguration::*)(unsigned int)) &osi3::CameraSensorViewConfiguration::set_samples_per_pixel, "C++: osi3::CameraSensorViewConfiguration::set_samples_per_pixel(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_max_number_of_interactions", (void (osi3::CameraSensorViewConfiguration::*)()) &osi3::CameraSensorViewConfiguration::clear_max_number_of_interactions, "C++: osi3::CameraSensorViewConfiguration::clear_max_number_of_interactions() --> void");
		cl.def("max_number_of_interactions", (unsigned int (osi3::CameraSensorViewConfiguration::*)() const) &osi3::CameraSensorViewConfiguration::max_number_of_interactions, "C++: osi3::CameraSensorViewConfiguration::max_number_of_interactions() const --> unsigned int");
		cl.def("set_max_number_of_interactions", (void (osi3::CameraSensorViewConfiguration::*)(unsigned int)) &osi3::CameraSensorViewConfiguration::set_max_number_of_interactions, "C++: osi3::CameraSensorViewConfiguration::set_max_number_of_interactions(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_37.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_37(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B424_[osi3::UltrasonicSensorViewConfiguration] ";
	{ // osi3::UltrasonicSensorViewConfiguration file: line:1883
		pybind11::class_<osi3::UltrasonicSensorViewConfiguration, std::shared_ptr<osi3::UltrasonicSensorViewConfiguration>, google::protobuf::Message> cl(M("osi3"), "UltrasonicSensorViewConfiguration", "");
		cl.def( pybind11::init( [](){ return new osi3::UltrasonicSensorViewConfiguration(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::UltrasonicSensorViewConfiguration const &o){ return new osi3::UltrasonicSensorViewConfiguration(o); } ) );
		cl.def("assign", (class osi3::UltrasonicSensorViewConfiguration & (osi3::UltrasonicSensorViewConfiguration::*)(const class osi3::UltrasonicSensorViewConfiguration &)) &osi3::UltrasonicSensorViewConfiguration::operator=, "C++: osi3::UltrasonicSensorViewConfiguration::operator=(const class osi3::UltrasonicSensorViewConfiguration &) --> class osi3::UltrasonicSensorViewConfiguration &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicSensorViewConfiguration::descriptor, "C++: osi3::UltrasonicSensorViewConfiguration::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicSensorViewConfiguration::GetDescriptor, "C++: osi3::UltrasonicSensorViewConfiguration::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::UltrasonicSensorViewConfiguration::GetReflection, "C++: osi3::UltrasonicSensorViewConfiguration::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::UltrasonicSensorViewConfiguration & (*)()) &osi3::UltrasonicSensorViewConfiguration::default_instance, "C++: osi3::UltrasonicSensorViewConfiguration::default_instance() --> const class osi3::UltrasonicSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::UltrasonicSensorViewConfiguration * (*)()) &osi3::UltrasonicSensorViewConfiguration::internal_default_instance, "C++: osi3::UltrasonicSensorViewConfiguration::internal_default_instance() --> const class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::UltrasonicSensorViewConfiguration *)) &osi3::UltrasonicSensorViewConfiguration::Swap, "C++: osi3::UltrasonicSensorViewConfiguration::Swap(class osi3::UltrasonicSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::UltrasonicSensorViewConfiguration *)) &osi3::UltrasonicSensorViewConfiguration::UnsafeArenaSwap, "C++: osi3::UltrasonicSensorViewConfiguration::UnsafeArenaSwap(class osi3::UltrasonicSensorViewConfiguration *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::UltrasonicSensorViewConfiguration * (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::New, "C++: osi3::UltrasonicSensorViewConfiguration::New() const --> class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::UltrasonicSensorViewConfiguration * (osi3::UltrasonicSensorViewConfiguration::*)(class google::protobuf::Arena *) const) &osi3::UltrasonicSensorViewConfiguration::New, "C++: osi3::UltrasonicSensorViewConfiguration::New(class google::protobuf::Arena *) const --> class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::UltrasonicSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::UltrasonicSensorViewConfiguration::CopyFrom, "C++: osi3::UltrasonicSensorViewConfiguration::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicSensorViewConfiguration::*)(const class google::protobuf::Message &)) &osi3::UltrasonicSensorViewConfiguration::MergeFrom, "C++: osi3::UltrasonicSensorViewConfiguration::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::UltrasonicSensorViewConfiguration::*)(const class osi3::UltrasonicSensorViewConfiguration &)) &osi3::UltrasonicSensorViewConfiguration::CopyFrom, "C++: osi3::UltrasonicSensorViewConfiguration::CopyFrom(const class osi3::UltrasonicSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicSensorViewConfiguration::*)(const class osi3::UltrasonicSensorViewConfiguration &)) &osi3::UltrasonicSensorViewConfiguration::MergeFrom, "C++: osi3::UltrasonicSensorViewConfiguration::MergeFrom(const class osi3::UltrasonicSensorViewConfiguration &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::Clear, "C++: osi3::UltrasonicSensorViewConfiguration::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::IsInitialized, "C++: osi3::UltrasonicSensorViewConfiguration::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::ByteSizeLong, "C++: osi3::UltrasonicSensorViewConfiguration::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::UltrasonicSensorViewConfiguration::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::UltrasonicSensorViewConfiguration::_InternalParse, "C++: osi3::UltrasonicSensorViewConfiguration::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::UltrasonicSensorViewConfiguration::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::UltrasonicSensorViewConfiguration::_InternalSerialize, "C++: osi3::UltrasonicSensorViewConfiguration::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::GetCachedSize, "C++: osi3::UltrasonicSensorViewConfiguration::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::GetMetadata, "C++: osi3::UltrasonicSensorViewConfiguration::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_sensor_id", (bool (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::has_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::clear_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::release_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::mutable_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::UltrasonicSensorViewConfiguration::set_allocated_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::Identifier *)) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_sensor_id, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::has_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::clear_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::release_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::mutable_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::UltrasonicSensorViewConfiguration::set_allocated_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_mounting_position, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::has_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::clear_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::release_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::mutable_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::UltrasonicSensorViewConfiguration::set_allocated_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::UltrasonicSensorViewConfiguration::*)(class osi3::MountingPosition *)) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse, "C++: osi3::UltrasonicSensorViewConfiguration::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("clear_field_of_view_horizontal", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::clear_field_of_view_horizontal, "C++: osi3::UltrasonicSensorViewConfiguration::clear_field_of_view_horizontal() --> void");
		cl.def("field_of_view_horizontal", (double (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::field_of_view_horizontal, "C++: osi3::UltrasonicSensorViewConfiguration::field_of_view_horizontal() const --> double");
		cl.def("set_field_of_view_horizontal", (void (osi3::UltrasonicSensorViewConfiguration::*)(double)) &osi3::UltrasonicSensorViewConfiguration::set_field_of_view_horizontal, "C++: osi3::UltrasonicSensorViewConfiguration::set_field_of_view_horizontal(double) --> void", pybind11::arg("value"));
		cl.def("clear_field_of_view_vertical", (void (osi3::UltrasonicSensorViewConfiguration::*)()) &osi3::UltrasonicSensorViewConfiguration::clear_field_of_view_vertical, "C++: osi3::UltrasonicSensorViewConfiguration::clear_field_of_view_vertical() --> void");
		cl.def("field_of_view_vertical", (double (osi3::UltrasonicSensorViewConfiguration::*)() const) &osi3::UltrasonicSensorViewConfiguration::field_of_view_vertical, "C++: osi3::UltrasonicSensorViewConfiguration::field_of_view_vertical() const --> double");
		cl.def("set_field_of_view_vertical", (void (osi3::UltrasonicSensorViewConfiguration::*)(double)) &osi3::UltrasonicSensorViewConfiguration::set_field_of_view_vertical, "C++: osi3::UltrasonicSensorViewConfiguration::set_field_of_view_vertical(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_38.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_38(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B425_[osi3::HostVehicleData] ";
	{ // osi3::HostVehicleData file: line:70
		pybind11::class_<osi3::HostVehicleData, std::shared_ptr<osi3::HostVehicleData>, google::protobuf::Message> cl(M("osi3"), "HostVehicleData", "");
		cl.def( pybind11::init( [](){ return new osi3::HostVehicleData(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::HostVehicleData const &o){ return new osi3::HostVehicleData(o); } ) );
		cl.def("assign", (class osi3::HostVehicleData & (osi3::HostVehicleData::*)(const class osi3::HostVehicleData &)) &osi3::HostVehicleData::operator=, "C++: osi3::HostVehicleData::operator=(const class osi3::HostVehicleData &) --> class osi3::HostVehicleData &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::HostVehicleData::descriptor, "C++: osi3::HostVehicleData::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::HostVehicleData::GetDescriptor, "C++: osi3::HostVehicleData::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::HostVehicleData::GetReflection, "C++: osi3::HostVehicleData::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::HostVehicleData & (*)()) &osi3::HostVehicleData::default_instance, "C++: osi3::HostVehicleData::default_instance() --> const class osi3::HostVehicleData &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::HostVehicleData * (*)()) &osi3::HostVehicleData::internal_default_instance, "C++: osi3::HostVehicleData::internal_default_instance() --> const class osi3::HostVehicleData *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::HostVehicleData::*)(class osi3::HostVehicleData *)) &osi3::HostVehicleData::Swap, "C++: osi3::HostVehicleData::Swap(class osi3::HostVehicleData *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::HostVehicleData::*)(class osi3::HostVehicleData *)) &osi3::HostVehicleData::UnsafeArenaSwap, "C++: osi3::HostVehicleData::UnsafeArenaSwap(class osi3::HostVehicleData *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::HostVehicleData * (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::New, "C++: osi3::HostVehicleData::New() const --> class osi3::HostVehicleData *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::HostVehicleData * (osi3::HostVehicleData::*)(class google::protobuf::Arena *) const) &osi3::HostVehicleData::New, "C++: osi3::HostVehicleData::New(class google::protobuf::Arena *) const --> class osi3::HostVehicleData *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::HostVehicleData::*)(const class google::protobuf::Message &)) &osi3::HostVehicleData::CopyFrom, "C++: osi3::HostVehicleData::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::HostVehicleData::*)(const class google::protobuf::Message &)) &osi3::HostVehicleData::MergeFrom, "C++: osi3::HostVehicleData::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::HostVehicleData::*)(const class osi3::HostVehicleData &)) &osi3::HostVehicleData::CopyFrom, "C++: osi3::HostVehicleData::CopyFrom(const class osi3::HostVehicleData &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::HostVehicleData::*)(const class osi3::HostVehicleData &)) &osi3::HostVehicleData::MergeFrom, "C++: osi3::HostVehicleData::MergeFrom(const class osi3::HostVehicleData &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::Clear, "C++: osi3::HostVehicleData::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::IsInitialized, "C++: osi3::HostVehicleData::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::ByteSizeLong, "C++: osi3::HostVehicleData::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::HostVehicleData::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::HostVehicleData::_InternalParse, "C++: osi3::HostVehicleData::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::HostVehicleData::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::HostVehicleData::_InternalSerialize, "C++: osi3::HostVehicleData::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::GetCachedSize, "C++: osi3::HostVehicleData::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::GetMetadata, "C++: osi3::HostVehicleData::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_location", (bool (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::has_location, "C++: osi3::HostVehicleData::has_location() const --> bool");
		cl.def("clear_location", (void (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::clear_location, "C++: osi3::HostVehicleData::clear_location() --> void");
		cl.def("location", (const class osi3::BaseMoving & (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::location, "C++: osi3::HostVehicleData::location() const --> const class osi3::BaseMoving &", pybind11::return_value_policy::automatic);
		cl.def("release_location", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::release_location, "C++: osi3::HostVehicleData::release_location() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("mutable_location", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::mutable_location, "C++: osi3::HostVehicleData::mutable_location() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_location", (void (osi3::HostVehicleData::*)(class osi3::BaseMoving *)) &osi3::HostVehicleData::set_allocated_location, "C++: osi3::HostVehicleData::set_allocated_location(class osi3::BaseMoving *) --> void", pybind11::arg("location"));
		cl.def("unsafe_arena_set_allocated_location", (void (osi3::HostVehicleData::*)(class osi3::BaseMoving *)) &osi3::HostVehicleData::unsafe_arena_set_allocated_location, "C++: osi3::HostVehicleData::unsafe_arena_set_allocated_location(class osi3::BaseMoving *) --> void", pybind11::arg("location"));
		cl.def("unsafe_arena_release_location", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::unsafe_arena_release_location, "C++: osi3::HostVehicleData::unsafe_arena_release_location() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("has_location_rmse", (bool (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::has_location_rmse, "C++: osi3::HostVehicleData::has_location_rmse() const --> bool");
		cl.def("clear_location_rmse", (void (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::clear_location_rmse, "C++: osi3::HostVehicleData::clear_location_rmse() --> void");
		cl.def("location_rmse", (const class osi3::BaseMoving & (osi3::HostVehicleData::*)() const) &osi3::HostVehicleData::location_rmse, "C++: osi3::HostVehicleData::location_rmse() const --> const class osi3::BaseMoving &", pybind11::return_value_policy::automatic);
		cl.def("release_location_rmse", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::release_location_rmse, "C++: osi3::HostVehicleData::release_location_rmse() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("mutable_location_rmse", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::mutable_location_rmse, "C++: osi3::HostVehicleData::mutable_location_rmse() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_location_rmse", (void (osi3::HostVehicleData::*)(class osi3::BaseMoving *)) &osi3::HostVehicleData::set_allocated_location_rmse, "C++: osi3::HostVehicleData::set_allocated_location_rmse(class osi3::BaseMoving *) --> void", pybind11::arg("location_rmse"));
		cl.def("unsafe_arena_set_allocated_location_rmse", (void (osi3::HostVehicleData::*)(class osi3::BaseMoving *)) &osi3::HostVehicleData::unsafe_arena_set_allocated_location_rmse, "C++: osi3::HostVehicleData::unsafe_arena_set_allocated_location_rmse(class osi3::BaseMoving *) --> void", pybind11::arg("location_rmse"));
		cl.def("unsafe_arena_release_location_rmse", (class osi3::BaseMoving * (osi3::HostVehicleData::*)()) &osi3::HostVehicleData::unsafe_arena_release_location_rmse, "C++: osi3::HostVehicleData::unsafe_arena_release_location_rmse() --> class osi3::BaseMoving *", pybind11::return_value_policy::reference);
	}
	std::cout << "B426_[void osi3::swap(class osi3::HostVehicleData &, class osi3::HostVehicleData &)] ";
}


// File: unknown/unknown_39.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_39(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B427_[osi3::SensorView] ";
	{ // osi3::SensorView file: line:102
		pybind11::class_<osi3::SensorView, std::shared_ptr<osi3::SensorView>, google::protobuf::Message> cl(M("osi3"), "SensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::SensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::SensorView const &o){ return new osi3::SensorView(o); } ) );
		cl.def("assign", (class osi3::SensorView & (osi3::SensorView::*)(const class osi3::SensorView &)) &osi3::SensorView::operator=, "C++: osi3::SensorView::operator=(const class osi3::SensorView &) --> class osi3::SensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::SensorView::descriptor, "C++: osi3::SensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::SensorView::GetDescriptor, "C++: osi3::SensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::SensorView::GetReflection, "C++: osi3::SensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::SensorView & (*)()) &osi3::SensorView::default_instance, "C++: osi3::SensorView::default_instance() --> const class osi3::SensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::SensorView * (*)()) &osi3::SensorView::internal_default_instance, "C++: osi3::SensorView::internal_default_instance() --> const class osi3::SensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::SensorView::*)(class osi3::SensorView *)) &osi3::SensorView::Swap, "C++: osi3::SensorView::Swap(class osi3::SensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::SensorView::*)(class osi3::SensorView *)) &osi3::SensorView::UnsafeArenaSwap, "C++: osi3::SensorView::UnsafeArenaSwap(class osi3::SensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::SensorView * (osi3::SensorView::*)() const) &osi3::SensorView::New, "C++: osi3::SensorView::New() const --> class osi3::SensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::SensorView * (osi3::SensorView::*)(class google::protobuf::Arena *) const) &osi3::SensorView::New, "C++: osi3::SensorView::New(class google::protobuf::Arena *) const --> class osi3::SensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::SensorView::*)(const class google::protobuf::Message &)) &osi3::SensorView::CopyFrom, "C++: osi3::SensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::SensorView::*)(const class google::protobuf::Message &)) &osi3::SensorView::MergeFrom, "C++: osi3::SensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::SensorView::*)(const class osi3::SensorView &)) &osi3::SensorView::CopyFrom, "C++: osi3::SensorView::CopyFrom(const class osi3::SensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::SensorView::*)(const class osi3::SensorView &)) &osi3::SensorView::MergeFrom, "C++: osi3::SensorView::MergeFrom(const class osi3::SensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::SensorView::*)()) &osi3::SensorView::Clear, "C++: osi3::SensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::SensorView::*)() const) &osi3::SensorView::IsInitialized, "C++: osi3::SensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::SensorView::*)() const) &osi3::SensorView::ByteSizeLong, "C++: osi3::SensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::SensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::SensorView::_InternalParse, "C++: osi3::SensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::SensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::SensorView::_InternalSerialize, "C++: osi3::SensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::SensorView::*)() const) &osi3::SensorView::GetCachedSize, "C++: osi3::SensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::SensorView::*)() const) &osi3::SensorView::GetMetadata, "C++: osi3::SensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("generic_sensor_view_size", (int (osi3::SensorView::*)() const) &osi3::SensorView::generic_sensor_view_size, "C++: osi3::SensorView::generic_sensor_view_size() const --> int");
		cl.def("clear_generic_sensor_view", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_generic_sensor_view, "C++: osi3::SensorView::clear_generic_sensor_view() --> void");
		cl.def("mutable_generic_sensor_view", (class osi3::GenericSensorView * (osi3::SensorView::*)(int)) &osi3::SensorView::mutable_generic_sensor_view, "C++: osi3::SensorView::mutable_generic_sensor_view(int) --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_generic_sensor_view", (class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> * (osi3::SensorView::*)()) &osi3::SensorView::mutable_generic_sensor_view, "C++: osi3::SensorView::mutable_generic_sensor_view() --> class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> *", pybind11::return_value_policy::reference);
		cl.def("generic_sensor_view", (const class osi3::GenericSensorView & (osi3::SensorView::*)(int) const) &osi3::SensorView::generic_sensor_view, "C++: osi3::SensorView::generic_sensor_view(int) const --> const class osi3::GenericSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_generic_sensor_view", (class osi3::GenericSensorView * (osi3::SensorView::*)()) &osi3::SensorView::add_generic_sensor_view, "C++: osi3::SensorView::add_generic_sensor_view() --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("generic_sensor_view", (const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> & (osi3::SensorView::*)() const) &osi3::SensorView::generic_sensor_view, "C++: osi3::SensorView::generic_sensor_view() const --> const class google::protobuf::RepeatedPtrField<class osi3::GenericSensorView> &", pybind11::return_value_policy::automatic);
		cl.def("radar_sensor_view_size", (int (osi3::SensorView::*)() const) &osi3::SensorView::radar_sensor_view_size, "C++: osi3::SensorView::radar_sensor_view_size() const --> int");
		cl.def("clear_radar_sensor_view", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_radar_sensor_view, "C++: osi3::SensorView::clear_radar_sensor_view() --> void");
		cl.def("mutable_radar_sensor_view", (class osi3::RadarSensorView * (osi3::SensorView::*)(int)) &osi3::SensorView::mutable_radar_sensor_view, "C++: osi3::SensorView::mutable_radar_sensor_view(int) --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_radar_sensor_view", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> * (osi3::SensorView::*)()) &osi3::SensorView::mutable_radar_sensor_view, "C++: osi3::SensorView::mutable_radar_sensor_view() --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> *", pybind11::return_value_policy::reference);
		cl.def("radar_sensor_view", (const class osi3::RadarSensorView & (osi3::SensorView::*)(int) const) &osi3::SensorView::radar_sensor_view, "C++: osi3::SensorView::radar_sensor_view(int) const --> const class osi3::RadarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_radar_sensor_view", (class osi3::RadarSensorView * (osi3::SensorView::*)()) &osi3::SensorView::add_radar_sensor_view, "C++: osi3::SensorView::add_radar_sensor_view() --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("radar_sensor_view", (const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> & (osi3::SensorView::*)() const) &osi3::SensorView::radar_sensor_view, "C++: osi3::SensorView::radar_sensor_view() const --> const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView> &", pybind11::return_value_policy::automatic);
		cl.def("lidar_sensor_view_size", (int (osi3::SensorView::*)() const) &osi3::SensorView::lidar_sensor_view_size, "C++: osi3::SensorView::lidar_sensor_view_size() const --> int");
		cl.def("clear_lidar_sensor_view", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_lidar_sensor_view, "C++: osi3::SensorView::clear_lidar_sensor_view() --> void");
		cl.def("mutable_lidar_sensor_view", (class osi3::LidarSensorView * (osi3::SensorView::*)(int)) &osi3::SensorView::mutable_lidar_sensor_view, "C++: osi3::SensorView::mutable_lidar_sensor_view(int) --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_lidar_sensor_view", (class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> * (osi3::SensorView::*)()) &osi3::SensorView::mutable_lidar_sensor_view, "C++: osi3::SensorView::mutable_lidar_sensor_view() --> class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> *", pybind11::return_value_policy::reference);
		cl.def("lidar_sensor_view", (const class osi3::LidarSensorView & (osi3::SensorView::*)(int) const) &osi3::SensorView::lidar_sensor_view, "C++: osi3::SensorView::lidar_sensor_view(int) const --> const class osi3::LidarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_lidar_sensor_view", (class osi3::LidarSensorView * (osi3::SensorView::*)()) &osi3::SensorView::add_lidar_sensor_view, "C++: osi3::SensorView::add_lidar_sensor_view() --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("lidar_sensor_view", (const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> & (osi3::SensorView::*)() const) &osi3::SensorView::lidar_sensor_view, "C++: osi3::SensorView::lidar_sensor_view() const --> const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView> &", pybind11::return_value_policy::automatic);
		cl.def("camera_sensor_view_size", (int (osi3::SensorView::*)() const) &osi3::SensorView::camera_sensor_view_size, "C++: osi3::SensorView::camera_sensor_view_size() const --> int");
		cl.def("clear_camera_sensor_view", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_camera_sensor_view, "C++: osi3::SensorView::clear_camera_sensor_view() --> void");
		cl.def("mutable_camera_sensor_view", (class osi3::CameraSensorView * (osi3::SensorView::*)(int)) &osi3::SensorView::mutable_camera_sensor_view, "C++: osi3::SensorView::mutable_camera_sensor_view(int) --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_camera_sensor_view", (class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> * (osi3::SensorView::*)()) &osi3::SensorView::mutable_camera_sensor_view, "C++: osi3::SensorView::mutable_camera_sensor_view() --> class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> *", pybind11::return_value_policy::reference);
		cl.def("camera_sensor_view", (const class osi3::CameraSensorView & (osi3::SensorView::*)(int) const) &osi3::SensorView::camera_sensor_view, "C++: osi3::SensorView::camera_sensor_view(int) const --> const class osi3::CameraSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_camera_sensor_view", (class osi3::CameraSensorView * (osi3::SensorView::*)()) &osi3::SensorView::add_camera_sensor_view, "C++: osi3::SensorView::add_camera_sensor_view() --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("camera_sensor_view", (const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> & (osi3::SensorView::*)() const) &osi3::SensorView::camera_sensor_view, "C++: osi3::SensorView::camera_sensor_view() const --> const class google::protobuf::RepeatedPtrField<class osi3::CameraSensorView> &", pybind11::return_value_policy::automatic);
		cl.def("ultrasonic_sensor_view_size", (int (osi3::SensorView::*)() const) &osi3::SensorView::ultrasonic_sensor_view_size, "C++: osi3::SensorView::ultrasonic_sensor_view_size() const --> int");
		cl.def("clear_ultrasonic_sensor_view", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_ultrasonic_sensor_view, "C++: osi3::SensorView::clear_ultrasonic_sensor_view() --> void");
		cl.def("mutable_ultrasonic_sensor_view", (class osi3::UltrasonicSensorView * (osi3::SensorView::*)(int)) &osi3::SensorView::mutable_ultrasonic_sensor_view, "C++: osi3::SensorView::mutable_ultrasonic_sensor_view(int) --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_ultrasonic_sensor_view", (class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> * (osi3::SensorView::*)()) &osi3::SensorView::mutable_ultrasonic_sensor_view, "C++: osi3::SensorView::mutable_ultrasonic_sensor_view() --> class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> *", pybind11::return_value_policy::reference);
		cl.def("ultrasonic_sensor_view", (const class osi3::UltrasonicSensorView & (osi3::SensorView::*)(int) const) &osi3::SensorView::ultrasonic_sensor_view, "C++: osi3::SensorView::ultrasonic_sensor_view(int) const --> const class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_ultrasonic_sensor_view", (class osi3::UltrasonicSensorView * (osi3::SensorView::*)()) &osi3::SensorView::add_ultrasonic_sensor_view, "C++: osi3::SensorView::add_ultrasonic_sensor_view() --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("ultrasonic_sensor_view", (const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> & (osi3::SensorView::*)() const) &osi3::SensorView::ultrasonic_sensor_view, "C++: osi3::SensorView::ultrasonic_sensor_view() const --> const class google::protobuf::RepeatedPtrField<class osi3::UltrasonicSensorView> &", pybind11::return_value_policy::automatic);
		cl.def("has_version", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_version, "C++: osi3::SensorView::has_version() const --> bool");
		cl.def("clear_version", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_version, "C++: osi3::SensorView::clear_version() --> void");
		cl.def("version", (const class osi3::InterfaceVersion & (osi3::SensorView::*)() const) &osi3::SensorView::version, "C++: osi3::SensorView::version() const --> const class osi3::InterfaceVersion &", pybind11::return_value_policy::automatic);
		cl.def("release_version", (class osi3::InterfaceVersion * (osi3::SensorView::*)()) &osi3::SensorView::release_version, "C++: osi3::SensorView::release_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("mutable_version", (class osi3::InterfaceVersion * (osi3::SensorView::*)()) &osi3::SensorView::mutable_version, "C++: osi3::SensorView::mutable_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_version", (void (osi3::SensorView::*)(class osi3::InterfaceVersion *)) &osi3::SensorView::set_allocated_version, "C++: osi3::SensorView::set_allocated_version(class osi3::InterfaceVersion *) --> void", pybind11::arg("version"));
		cl.def("unsafe_arena_set_allocated_version", (void (osi3::SensorView::*)(class osi3::InterfaceVersion *)) &osi3::SensorView::unsafe_arena_set_allocated_version, "C++: osi3::SensorView::unsafe_arena_set_allocated_version(class osi3::InterfaceVersion *) --> void", pybind11::arg("version"));
		cl.def("unsafe_arena_release_version", (class osi3::InterfaceVersion * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_version, "C++: osi3::SensorView::unsafe_arena_release_version() --> class osi3::InterfaceVersion *", pybind11::return_value_policy::reference);
		cl.def("has_timestamp", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_timestamp, "C++: osi3::SensorView::has_timestamp() const --> bool");
		cl.def("clear_timestamp", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_timestamp, "C++: osi3::SensorView::clear_timestamp() --> void");
		cl.def("timestamp", (const class osi3::Timestamp & (osi3::SensorView::*)() const) &osi3::SensorView::timestamp, "C++: osi3::SensorView::timestamp() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_timestamp", (class osi3::Timestamp * (osi3::SensorView::*)()) &osi3::SensorView::release_timestamp, "C++: osi3::SensorView::release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_timestamp", (class osi3::Timestamp * (osi3::SensorView::*)()) &osi3::SensorView::mutable_timestamp, "C++: osi3::SensorView::mutable_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_timestamp", (void (osi3::SensorView::*)(class osi3::Timestamp *)) &osi3::SensorView::set_allocated_timestamp, "C++: osi3::SensorView::set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_set_allocated_timestamp", (void (osi3::SensorView::*)(class osi3::Timestamp *)) &osi3::SensorView::unsafe_arena_set_allocated_timestamp, "C++: osi3::SensorView::unsafe_arena_set_allocated_timestamp(class osi3::Timestamp *) --> void", pybind11::arg("timestamp"));
		cl.def("unsafe_arena_release_timestamp", (class osi3::Timestamp * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_timestamp, "C++: osi3::SensorView::unsafe_arena_release_timestamp() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("has_sensor_id", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_sensor_id, "C++: osi3::SensorView::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_sensor_id, "C++: osi3::SensorView::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::SensorView::*)() const) &osi3::SensorView::sensor_id, "C++: osi3::SensorView::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::release_sensor_id, "C++: osi3::SensorView::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::mutable_sensor_id, "C++: osi3::SensorView::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::SensorView::*)(class osi3::Identifier *)) &osi3::SensorView::set_allocated_sensor_id, "C++: osi3::SensorView::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::SensorView::*)(class osi3::Identifier *)) &osi3::SensorView::unsafe_arena_set_allocated_sensor_id, "C++: osi3::SensorView::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_sensor_id, "C++: osi3::SensorView::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_mounting_position, "C++: osi3::SensorView::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_mounting_position, "C++: osi3::SensorView::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::SensorView::*)() const) &osi3::SensorView::mounting_position, "C++: osi3::SensorView::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::release_mounting_position, "C++: osi3::SensorView::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::mutable_mounting_position, "C++: osi3::SensorView::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::SensorView::*)(class osi3::MountingPosition *)) &osi3::SensorView::set_allocated_mounting_position, "C++: osi3::SensorView::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::SensorView::*)(class osi3::MountingPosition *)) &osi3::SensorView::unsafe_arena_set_allocated_mounting_position, "C++: osi3::SensorView::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_mounting_position, "C++: osi3::SensorView::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_mounting_position_rmse, "C++: osi3::SensorView::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_mounting_position_rmse, "C++: osi3::SensorView::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::SensorView::*)() const) &osi3::SensorView::mounting_position_rmse, "C++: osi3::SensorView::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::release_mounting_position_rmse, "C++: osi3::SensorView::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::mutable_mounting_position_rmse, "C++: osi3::SensorView::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::SensorView::*)(class osi3::MountingPosition *)) &osi3::SensorView::set_allocated_mounting_position_rmse, "C++: osi3::SensorView::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::SensorView::*)(class osi3::MountingPosition *)) &osi3::SensorView::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::SensorView::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_mounting_position_rmse, "C++: osi3::SensorView::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_host_vehicle_data", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_host_vehicle_data, "C++: osi3::SensorView::has_host_vehicle_data() const --> bool");
		cl.def("clear_host_vehicle_data", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_host_vehicle_data, "C++: osi3::SensorView::clear_host_vehicle_data() --> void");
		cl.def("host_vehicle_data", (const class osi3::HostVehicleData & (osi3::SensorView::*)() const) &osi3::SensorView::host_vehicle_data, "C++: osi3::SensorView::host_vehicle_data() const --> const class osi3::HostVehicleData &", pybind11::return_value_policy::automatic);
		cl.def("release_host_vehicle_data", (class osi3::HostVehicleData * (osi3::SensorView::*)()) &osi3::SensorView::release_host_vehicle_data, "C++: osi3::SensorView::release_host_vehicle_data() --> class osi3::HostVehicleData *", pybind11::return_value_policy::reference);
		cl.def("mutable_host_vehicle_data", (class osi3::HostVehicleData * (osi3::SensorView::*)()) &osi3::SensorView::mutable_host_vehicle_data, "C++: osi3::SensorView::mutable_host_vehicle_data() --> class osi3::HostVehicleData *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_host_vehicle_data", (void (osi3::SensorView::*)(class osi3::HostVehicleData *)) &osi3::SensorView::set_allocated_host_vehicle_data, "C++: osi3::SensorView::set_allocated_host_vehicle_data(class osi3::HostVehicleData *) --> void", pybind11::arg("host_vehicle_data"));
		cl.def("unsafe_arena_set_allocated_host_vehicle_data", (void (osi3::SensorView::*)(class osi3::HostVehicleData *)) &osi3::SensorView::unsafe_arena_set_allocated_host_vehicle_data, "C++: osi3::SensorView::unsafe_arena_set_allocated_host_vehicle_data(class osi3::HostVehicleData *) --> void", pybind11::arg("host_vehicle_data"));
		cl.def("unsafe_arena_release_host_vehicle_data", (class osi3::HostVehicleData * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_host_vehicle_data, "C++: osi3::SensorView::unsafe_arena_release_host_vehicle_data() --> class osi3::HostVehicleData *", pybind11::return_value_policy::reference);
		cl.def("has_global_ground_truth", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_global_ground_truth, "C++: osi3::SensorView::has_global_ground_truth() const --> bool");
		cl.def("clear_global_ground_truth", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_global_ground_truth, "C++: osi3::SensorView::clear_global_ground_truth() --> void");
		cl.def("global_ground_truth", (const class osi3::GroundTruth & (osi3::SensorView::*)() const) &osi3::SensorView::global_ground_truth, "C++: osi3::SensorView::global_ground_truth() const --> const class osi3::GroundTruth &", pybind11::return_value_policy::automatic);
		cl.def("release_global_ground_truth", (class osi3::GroundTruth * (osi3::SensorView::*)()) &osi3::SensorView::release_global_ground_truth, "C++: osi3::SensorView::release_global_ground_truth() --> class osi3::GroundTruth *", pybind11::return_value_policy::reference);
		cl.def("mutable_global_ground_truth", (class osi3::GroundTruth * (osi3::SensorView::*)()) &osi3::SensorView::mutable_global_ground_truth, "C++: osi3::SensorView::mutable_global_ground_truth() --> class osi3::GroundTruth *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_global_ground_truth", (void (osi3::SensorView::*)(class osi3::GroundTruth *)) &osi3::SensorView::set_allocated_global_ground_truth, "C++: osi3::SensorView::set_allocated_global_ground_truth(class osi3::GroundTruth *) --> void", pybind11::arg("global_ground_truth"));
		cl.def("unsafe_arena_set_allocated_global_ground_truth", (void (osi3::SensorView::*)(class osi3::GroundTruth *)) &osi3::SensorView::unsafe_arena_set_allocated_global_ground_truth, "C++: osi3::SensorView::unsafe_arena_set_allocated_global_ground_truth(class osi3::GroundTruth *) --> void", pybind11::arg("global_ground_truth"));
		cl.def("unsafe_arena_release_global_ground_truth", (class osi3::GroundTruth * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_global_ground_truth, "C++: osi3::SensorView::unsafe_arena_release_global_ground_truth() --> class osi3::GroundTruth *", pybind11::return_value_policy::reference);
		cl.def("has_host_vehicle_id", (bool (osi3::SensorView::*)() const) &osi3::SensorView::has_host_vehicle_id, "C++: osi3::SensorView::has_host_vehicle_id() const --> bool");
		cl.def("clear_host_vehicle_id", (void (osi3::SensorView::*)()) &osi3::SensorView::clear_host_vehicle_id, "C++: osi3::SensorView::clear_host_vehicle_id() --> void");
		cl.def("host_vehicle_id", (const class osi3::Identifier & (osi3::SensorView::*)() const) &osi3::SensorView::host_vehicle_id, "C++: osi3::SensorView::host_vehicle_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_host_vehicle_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::release_host_vehicle_id, "C++: osi3::SensorView::release_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_host_vehicle_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::mutable_host_vehicle_id, "C++: osi3::SensorView::mutable_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_host_vehicle_id", (void (osi3::SensorView::*)(class osi3::Identifier *)) &osi3::SensorView::set_allocated_host_vehicle_id, "C++: osi3::SensorView::set_allocated_host_vehicle_id(class osi3::Identifier *) --> void", pybind11::arg("host_vehicle_id"));
		cl.def("unsafe_arena_set_allocated_host_vehicle_id", (void (osi3::SensorView::*)(class osi3::Identifier *)) &osi3::SensorView::unsafe_arena_set_allocated_host_vehicle_id, "C++: osi3::SensorView::unsafe_arena_set_allocated_host_vehicle_id(class osi3::Identifier *) --> void", pybind11::arg("host_vehicle_id"));
		cl.def("unsafe_arena_release_host_vehicle_id", (class osi3::Identifier * (osi3::SensorView::*)()) &osi3::SensorView::unsafe_arena_release_host_vehicle_id, "C++: osi3::SensorView::unsafe_arena_release_host_vehicle_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_40.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_40(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B428_[osi3::GenericSensorView] ";
	{ // osi3::GenericSensorView file: line:488
		pybind11::class_<osi3::GenericSensorView, std::shared_ptr<osi3::GenericSensorView>, google::protobuf::Message> cl(M("osi3"), "GenericSensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::GenericSensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::GenericSensorView const &o){ return new osi3::GenericSensorView(o); } ) );
		cl.def("assign", (class osi3::GenericSensorView & (osi3::GenericSensorView::*)(const class osi3::GenericSensorView &)) &osi3::GenericSensorView::operator=, "C++: osi3::GenericSensorView::operator=(const class osi3::GenericSensorView &) --> class osi3::GenericSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GenericSensorView::descriptor, "C++: osi3::GenericSensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::GenericSensorView::GetDescriptor, "C++: osi3::GenericSensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::GenericSensorView::GetReflection, "C++: osi3::GenericSensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::GenericSensorView & (*)()) &osi3::GenericSensorView::default_instance, "C++: osi3::GenericSensorView::default_instance() --> const class osi3::GenericSensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::GenericSensorView * (*)()) &osi3::GenericSensorView::internal_default_instance, "C++: osi3::GenericSensorView::internal_default_instance() --> const class osi3::GenericSensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::GenericSensorView::*)(class osi3::GenericSensorView *)) &osi3::GenericSensorView::Swap, "C++: osi3::GenericSensorView::Swap(class osi3::GenericSensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::GenericSensorView::*)(class osi3::GenericSensorView *)) &osi3::GenericSensorView::UnsafeArenaSwap, "C++: osi3::GenericSensorView::UnsafeArenaSwap(class osi3::GenericSensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::GenericSensorView * (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::New, "C++: osi3::GenericSensorView::New() const --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::GenericSensorView * (osi3::GenericSensorView::*)(class google::protobuf::Arena *) const) &osi3::GenericSensorView::New, "C++: osi3::GenericSensorView::New(class google::protobuf::Arena *) const --> class osi3::GenericSensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::GenericSensorView::*)(const class google::protobuf::Message &)) &osi3::GenericSensorView::CopyFrom, "C++: osi3::GenericSensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GenericSensorView::*)(const class google::protobuf::Message &)) &osi3::GenericSensorView::MergeFrom, "C++: osi3::GenericSensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::GenericSensorView::*)(const class osi3::GenericSensorView &)) &osi3::GenericSensorView::CopyFrom, "C++: osi3::GenericSensorView::CopyFrom(const class osi3::GenericSensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::GenericSensorView::*)(const class osi3::GenericSensorView &)) &osi3::GenericSensorView::MergeFrom, "C++: osi3::GenericSensorView::MergeFrom(const class osi3::GenericSensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::GenericSensorView::*)()) &osi3::GenericSensorView::Clear, "C++: osi3::GenericSensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::IsInitialized, "C++: osi3::GenericSensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::ByteSizeLong, "C++: osi3::GenericSensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::GenericSensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::GenericSensorView::_InternalParse, "C++: osi3::GenericSensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::GenericSensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::GenericSensorView::_InternalSerialize, "C++: osi3::GenericSensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::GetCachedSize, "C++: osi3::GenericSensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::GetMetadata, "C++: osi3::GenericSensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_view_configuration", (bool (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::has_view_configuration, "C++: osi3::GenericSensorView::has_view_configuration() const --> bool");
		cl.def("clear_view_configuration", (void (osi3::GenericSensorView::*)()) &osi3::GenericSensorView::clear_view_configuration, "C++: osi3::GenericSensorView::clear_view_configuration() --> void");
		cl.def("view_configuration", (const class osi3::GenericSensorViewConfiguration & (osi3::GenericSensorView::*)() const) &osi3::GenericSensorView::view_configuration, "C++: osi3::GenericSensorView::view_configuration() const --> const class osi3::GenericSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def("release_view_configuration", (class osi3::GenericSensorViewConfiguration * (osi3::GenericSensorView::*)()) &osi3::GenericSensorView::release_view_configuration, "C++: osi3::GenericSensorView::release_view_configuration() --> class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("mutable_view_configuration", (class osi3::GenericSensorViewConfiguration * (osi3::GenericSensorView::*)()) &osi3::GenericSensorView::mutable_view_configuration, "C++: osi3::GenericSensorView::mutable_view_configuration() --> class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_view_configuration", (void (osi3::GenericSensorView::*)(class osi3::GenericSensorViewConfiguration *)) &osi3::GenericSensorView::set_allocated_view_configuration, "C++: osi3::GenericSensorView::set_allocated_view_configuration(class osi3::GenericSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_set_allocated_view_configuration", (void (osi3::GenericSensorView::*)(class osi3::GenericSensorViewConfiguration *)) &osi3::GenericSensorView::unsafe_arena_set_allocated_view_configuration, "C++: osi3::GenericSensorView::unsafe_arena_set_allocated_view_configuration(class osi3::GenericSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_release_view_configuration", (class osi3::GenericSensorViewConfiguration * (osi3::GenericSensorView::*)()) &osi3::GenericSensorView::unsafe_arena_release_view_configuration, "C++: osi3::GenericSensorView::unsafe_arena_release_view_configuration() --> class osi3::GenericSensorViewConfiguration *", pybind11::return_value_policy::reference);
	}
	std::cout << "B429_[void osi3::swap(class osi3::GenericSensorView &, class osi3::GenericSensorView &)] ";
	std::cout << "B430_[osi3::RadarSensorView_Reflection] ";
	{ // osi3::RadarSensorView_Reflection file: line:634
		pybind11::class_<osi3::RadarSensorView_Reflection, std::shared_ptr<osi3::RadarSensorView_Reflection>, google::protobuf::Message> cl(M("osi3"), "RadarSensorView_Reflection", "");
		cl.def( pybind11::init( [](){ return new osi3::RadarSensorView_Reflection(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RadarSensorView_Reflection const &o){ return new osi3::RadarSensorView_Reflection(o); } ) );
		cl.def("assign", (class osi3::RadarSensorView_Reflection & (osi3::RadarSensorView_Reflection::*)(const class osi3::RadarSensorView_Reflection &)) &osi3::RadarSensorView_Reflection::operator=, "C++: osi3::RadarSensorView_Reflection::operator=(const class osi3::RadarSensorView_Reflection &) --> class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorView_Reflection::descriptor, "C++: osi3::RadarSensorView_Reflection::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorView_Reflection::GetDescriptor, "C++: osi3::RadarSensorView_Reflection::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RadarSensorView_Reflection::GetReflection, "C++: osi3::RadarSensorView_Reflection::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RadarSensorView_Reflection & (*)()) &osi3::RadarSensorView_Reflection::default_instance, "C++: osi3::RadarSensorView_Reflection::default_instance() --> const class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RadarSensorView_Reflection * (*)()) &osi3::RadarSensorView_Reflection::internal_default_instance, "C++: osi3::RadarSensorView_Reflection::internal_default_instance() --> const class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RadarSensorView_Reflection::*)(class osi3::RadarSensorView_Reflection *)) &osi3::RadarSensorView_Reflection::Swap, "C++: osi3::RadarSensorView_Reflection::Swap(class osi3::RadarSensorView_Reflection *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RadarSensorView_Reflection::*)(class osi3::RadarSensorView_Reflection *)) &osi3::RadarSensorView_Reflection::UnsafeArenaSwap, "C++: osi3::RadarSensorView_Reflection::UnsafeArenaSwap(class osi3::RadarSensorView_Reflection *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RadarSensorView_Reflection * (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::New, "C++: osi3::RadarSensorView_Reflection::New() const --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RadarSensorView_Reflection * (osi3::RadarSensorView_Reflection::*)(class google::protobuf::Arena *) const) &osi3::RadarSensorView_Reflection::New, "C++: osi3::RadarSensorView_Reflection::New(class google::protobuf::Arena *) const --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RadarSensorView_Reflection::*)(const class google::protobuf::Message &)) &osi3::RadarSensorView_Reflection::CopyFrom, "C++: osi3::RadarSensorView_Reflection::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorView_Reflection::*)(const class google::protobuf::Message &)) &osi3::RadarSensorView_Reflection::MergeFrom, "C++: osi3::RadarSensorView_Reflection::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RadarSensorView_Reflection::*)(const class osi3::RadarSensorView_Reflection &)) &osi3::RadarSensorView_Reflection::CopyFrom, "C++: osi3::RadarSensorView_Reflection::CopyFrom(const class osi3::RadarSensorView_Reflection &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorView_Reflection::*)(const class osi3::RadarSensorView_Reflection &)) &osi3::RadarSensorView_Reflection::MergeFrom, "C++: osi3::RadarSensorView_Reflection::MergeFrom(const class osi3::RadarSensorView_Reflection &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::Clear, "C++: osi3::RadarSensorView_Reflection::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::IsInitialized, "C++: osi3::RadarSensorView_Reflection::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::ByteSizeLong, "C++: osi3::RadarSensorView_Reflection::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RadarSensorView_Reflection::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RadarSensorView_Reflection::_InternalParse, "C++: osi3::RadarSensorView_Reflection::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RadarSensorView_Reflection::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RadarSensorView_Reflection::_InternalSerialize, "C++: osi3::RadarSensorView_Reflection::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::GetCachedSize, "C++: osi3::RadarSensorView_Reflection::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::GetMetadata, "C++: osi3::RadarSensorView_Reflection::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_signal_strength", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::clear_signal_strength, "C++: osi3::RadarSensorView_Reflection::clear_signal_strength() --> void");
		cl.def("signal_strength", (double (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::signal_strength, "C++: osi3::RadarSensorView_Reflection::signal_strength() const --> double");
		cl.def("set_signal_strength", (void (osi3::RadarSensorView_Reflection::*)(double)) &osi3::RadarSensorView_Reflection::set_signal_strength, "C++: osi3::RadarSensorView_Reflection::set_signal_strength(double) --> void", pybind11::arg("value"));
		cl.def("clear_time_of_flight", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::clear_time_of_flight, "C++: osi3::RadarSensorView_Reflection::clear_time_of_flight() --> void");
		cl.def("time_of_flight", (double (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::time_of_flight, "C++: osi3::RadarSensorView_Reflection::time_of_flight() const --> double");
		cl.def("set_time_of_flight", (void (osi3::RadarSensorView_Reflection::*)(double)) &osi3::RadarSensorView_Reflection::set_time_of_flight, "C++: osi3::RadarSensorView_Reflection::set_time_of_flight(double) --> void", pybind11::arg("value"));
		cl.def("clear_doppler_shift", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::clear_doppler_shift, "C++: osi3::RadarSensorView_Reflection::clear_doppler_shift() --> void");
		cl.def("doppler_shift", (double (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::doppler_shift, "C++: osi3::RadarSensorView_Reflection::doppler_shift() const --> double");
		cl.def("set_doppler_shift", (void (osi3::RadarSensorView_Reflection::*)(double)) &osi3::RadarSensorView_Reflection::set_doppler_shift, "C++: osi3::RadarSensorView_Reflection::set_doppler_shift(double) --> void", pybind11::arg("value"));
		cl.def("clear_source_horizontal_angle", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::clear_source_horizontal_angle, "C++: osi3::RadarSensorView_Reflection::clear_source_horizontal_angle() --> void");
		cl.def("source_horizontal_angle", (double (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::source_horizontal_angle, "C++: osi3::RadarSensorView_Reflection::source_horizontal_angle() const --> double");
		cl.def("set_source_horizontal_angle", (void (osi3::RadarSensorView_Reflection::*)(double)) &osi3::RadarSensorView_Reflection::set_source_horizontal_angle, "C++: osi3::RadarSensorView_Reflection::set_source_horizontal_angle(double) --> void", pybind11::arg("value"));
		cl.def("clear_source_vertical_angle", (void (osi3::RadarSensorView_Reflection::*)()) &osi3::RadarSensorView_Reflection::clear_source_vertical_angle, "C++: osi3::RadarSensorView_Reflection::clear_source_vertical_angle() --> void");
		cl.def("source_vertical_angle", (double (osi3::RadarSensorView_Reflection::*)() const) &osi3::RadarSensorView_Reflection::source_vertical_angle, "C++: osi3::RadarSensorView_Reflection::source_vertical_angle() const --> double");
		cl.def("set_source_vertical_angle", (void (osi3::RadarSensorView_Reflection::*)(double)) &osi3::RadarSensorView_Reflection::set_source_vertical_angle, "C++: osi3::RadarSensorView_Reflection::set_source_vertical_angle(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_41.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_41(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B431_[osi3::RadarSensorView] ";
	{ // osi3::RadarSensorView file: line:815
		pybind11::class_<osi3::RadarSensorView, std::shared_ptr<osi3::RadarSensorView>, google::protobuf::Message> cl(M("osi3"), "RadarSensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::RadarSensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::RadarSensorView const &o){ return new osi3::RadarSensorView(o); } ) );
		cl.def("assign", (class osi3::RadarSensorView & (osi3::RadarSensorView::*)(const class osi3::RadarSensorView &)) &osi3::RadarSensorView::operator=, "C++: osi3::RadarSensorView::operator=(const class osi3::RadarSensorView &) --> class osi3::RadarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorView::descriptor, "C++: osi3::RadarSensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::RadarSensorView::GetDescriptor, "C++: osi3::RadarSensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::RadarSensorView::GetReflection, "C++: osi3::RadarSensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::RadarSensorView & (*)()) &osi3::RadarSensorView::default_instance, "C++: osi3::RadarSensorView::default_instance() --> const class osi3::RadarSensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::RadarSensorView * (*)()) &osi3::RadarSensorView::internal_default_instance, "C++: osi3::RadarSensorView::internal_default_instance() --> const class osi3::RadarSensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::RadarSensorView::*)(class osi3::RadarSensorView *)) &osi3::RadarSensorView::Swap, "C++: osi3::RadarSensorView::Swap(class osi3::RadarSensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::RadarSensorView::*)(class osi3::RadarSensorView *)) &osi3::RadarSensorView::UnsafeArenaSwap, "C++: osi3::RadarSensorView::UnsafeArenaSwap(class osi3::RadarSensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::RadarSensorView * (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::New, "C++: osi3::RadarSensorView::New() const --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::RadarSensorView * (osi3::RadarSensorView::*)(class google::protobuf::Arena *) const) &osi3::RadarSensorView::New, "C++: osi3::RadarSensorView::New(class google::protobuf::Arena *) const --> class osi3::RadarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::RadarSensorView::*)(const class google::protobuf::Message &)) &osi3::RadarSensorView::CopyFrom, "C++: osi3::RadarSensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorView::*)(const class google::protobuf::Message &)) &osi3::RadarSensorView::MergeFrom, "C++: osi3::RadarSensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::RadarSensorView::*)(const class osi3::RadarSensorView &)) &osi3::RadarSensorView::CopyFrom, "C++: osi3::RadarSensorView::CopyFrom(const class osi3::RadarSensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::RadarSensorView::*)(const class osi3::RadarSensorView &)) &osi3::RadarSensorView::MergeFrom, "C++: osi3::RadarSensorView::MergeFrom(const class osi3::RadarSensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::Clear, "C++: osi3::RadarSensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::IsInitialized, "C++: osi3::RadarSensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::ByteSizeLong, "C++: osi3::RadarSensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::RadarSensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::RadarSensorView::_InternalParse, "C++: osi3::RadarSensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::RadarSensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::RadarSensorView::_InternalSerialize, "C++: osi3::RadarSensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::GetCachedSize, "C++: osi3::RadarSensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::GetMetadata, "C++: osi3::RadarSensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("reflection_size", (int (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::reflection_size, "C++: osi3::RadarSensorView::reflection_size() const --> int");
		cl.def("clear_reflection", (void (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::clear_reflection, "C++: osi3::RadarSensorView::clear_reflection() --> void");
		cl.def("mutable_reflection", (class osi3::RadarSensorView_Reflection * (osi3::RadarSensorView::*)(int)) &osi3::RadarSensorView::mutable_reflection, "C++: osi3::RadarSensorView::mutable_reflection(int) --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_reflection", (class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> * (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::mutable_reflection, "C++: osi3::RadarSensorView::mutable_reflection() --> class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> *", pybind11::return_value_policy::reference);
		cl.def("reflection", (const class osi3::RadarSensorView_Reflection & (osi3::RadarSensorView::*)(int) const) &osi3::RadarSensorView::reflection, "C++: osi3::RadarSensorView::reflection(int) const --> const class osi3::RadarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_reflection", (class osi3::RadarSensorView_Reflection * (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::add_reflection, "C++: osi3::RadarSensorView::add_reflection() --> class osi3::RadarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("reflection", (const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> & (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::reflection, "C++: osi3::RadarSensorView::reflection() const --> const class google::protobuf::RepeatedPtrField<class osi3::RadarSensorView_Reflection> &", pybind11::return_value_policy::automatic);
		cl.def("has_view_configuration", (bool (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::has_view_configuration, "C++: osi3::RadarSensorView::has_view_configuration() const --> bool");
		cl.def("clear_view_configuration", (void (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::clear_view_configuration, "C++: osi3::RadarSensorView::clear_view_configuration() --> void");
		cl.def("view_configuration", (const class osi3::RadarSensorViewConfiguration & (osi3::RadarSensorView::*)() const) &osi3::RadarSensorView::view_configuration, "C++: osi3::RadarSensorView::view_configuration() const --> const class osi3::RadarSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def("release_view_configuration", (class osi3::RadarSensorViewConfiguration * (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::release_view_configuration, "C++: osi3::RadarSensorView::release_view_configuration() --> class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("mutable_view_configuration", (class osi3::RadarSensorViewConfiguration * (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::mutable_view_configuration, "C++: osi3::RadarSensorView::mutable_view_configuration() --> class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_view_configuration", (void (osi3::RadarSensorView::*)(class osi3::RadarSensorViewConfiguration *)) &osi3::RadarSensorView::set_allocated_view_configuration, "C++: osi3::RadarSensorView::set_allocated_view_configuration(class osi3::RadarSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_set_allocated_view_configuration", (void (osi3::RadarSensorView::*)(class osi3::RadarSensorViewConfiguration *)) &osi3::RadarSensorView::unsafe_arena_set_allocated_view_configuration, "C++: osi3::RadarSensorView::unsafe_arena_set_allocated_view_configuration(class osi3::RadarSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_release_view_configuration", (class osi3::RadarSensorViewConfiguration * (osi3::RadarSensorView::*)()) &osi3::RadarSensorView::unsafe_arena_release_view_configuration, "C++: osi3::RadarSensorView::unsafe_arena_release_view_configuration() --> class osi3::RadarSensorViewConfiguration *", pybind11::return_value_policy::reference);
	}
	std::cout << "B432_[void osi3::swap(class osi3::RadarSensorView &, class osi3::RadarSensorView &)] ";
	std::cout << "B433_[osi3::LidarSensorView_Reflection] ";
	{ // osi3::LidarSensorView_Reflection file: line:983
		pybind11::class_<osi3::LidarSensorView_Reflection, std::shared_ptr<osi3::LidarSensorView_Reflection>, google::protobuf::Message> cl(M("osi3"), "LidarSensorView_Reflection", "");
		cl.def( pybind11::init( [](){ return new osi3::LidarSensorView_Reflection(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LidarSensorView_Reflection const &o){ return new osi3::LidarSensorView_Reflection(o); } ) );
		cl.def("assign", (class osi3::LidarSensorView_Reflection & (osi3::LidarSensorView_Reflection::*)(const class osi3::LidarSensorView_Reflection &)) &osi3::LidarSensorView_Reflection::operator=, "C++: osi3::LidarSensorView_Reflection::operator=(const class osi3::LidarSensorView_Reflection &) --> class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorView_Reflection::descriptor, "C++: osi3::LidarSensorView_Reflection::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorView_Reflection::GetDescriptor, "C++: osi3::LidarSensorView_Reflection::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LidarSensorView_Reflection::GetReflection, "C++: osi3::LidarSensorView_Reflection::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LidarSensorView_Reflection & (*)()) &osi3::LidarSensorView_Reflection::default_instance, "C++: osi3::LidarSensorView_Reflection::default_instance() --> const class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LidarSensorView_Reflection * (*)()) &osi3::LidarSensorView_Reflection::internal_default_instance, "C++: osi3::LidarSensorView_Reflection::internal_default_instance() --> const class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LidarSensorView_Reflection::*)(class osi3::LidarSensorView_Reflection *)) &osi3::LidarSensorView_Reflection::Swap, "C++: osi3::LidarSensorView_Reflection::Swap(class osi3::LidarSensorView_Reflection *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LidarSensorView_Reflection::*)(class osi3::LidarSensorView_Reflection *)) &osi3::LidarSensorView_Reflection::UnsafeArenaSwap, "C++: osi3::LidarSensorView_Reflection::UnsafeArenaSwap(class osi3::LidarSensorView_Reflection *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LidarSensorView_Reflection * (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::New, "C++: osi3::LidarSensorView_Reflection::New() const --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LidarSensorView_Reflection * (osi3::LidarSensorView_Reflection::*)(class google::protobuf::Arena *) const) &osi3::LidarSensorView_Reflection::New, "C++: osi3::LidarSensorView_Reflection::New(class google::protobuf::Arena *) const --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LidarSensorView_Reflection::*)(const class google::protobuf::Message &)) &osi3::LidarSensorView_Reflection::CopyFrom, "C++: osi3::LidarSensorView_Reflection::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorView_Reflection::*)(const class google::protobuf::Message &)) &osi3::LidarSensorView_Reflection::MergeFrom, "C++: osi3::LidarSensorView_Reflection::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LidarSensorView_Reflection::*)(const class osi3::LidarSensorView_Reflection &)) &osi3::LidarSensorView_Reflection::CopyFrom, "C++: osi3::LidarSensorView_Reflection::CopyFrom(const class osi3::LidarSensorView_Reflection &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorView_Reflection::*)(const class osi3::LidarSensorView_Reflection &)) &osi3::LidarSensorView_Reflection::MergeFrom, "C++: osi3::LidarSensorView_Reflection::MergeFrom(const class osi3::LidarSensorView_Reflection &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::Clear, "C++: osi3::LidarSensorView_Reflection::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::IsInitialized, "C++: osi3::LidarSensorView_Reflection::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::ByteSizeLong, "C++: osi3::LidarSensorView_Reflection::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LidarSensorView_Reflection::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LidarSensorView_Reflection::_InternalParse, "C++: osi3::LidarSensorView_Reflection::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LidarSensorView_Reflection::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LidarSensorView_Reflection::_InternalSerialize, "C++: osi3::LidarSensorView_Reflection::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::GetCachedSize, "C++: osi3::LidarSensorView_Reflection::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::GetMetadata, "C++: osi3::LidarSensorView_Reflection::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_normal_to_surface", (bool (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::has_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::has_normal_to_surface() const --> bool");
		cl.def("clear_normal_to_surface", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::clear_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::clear_normal_to_surface() --> void");
		cl.def("normal_to_surface", (const class osi3::Vector3d & (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::normal_to_surface, "C++: osi3::LidarSensorView_Reflection::normal_to_surface() const --> const class osi3::Vector3d &", pybind11::return_value_policy::automatic);
		cl.def("release_normal_to_surface", (class osi3::Vector3d * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::release_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::release_normal_to_surface() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("mutable_normal_to_surface", (class osi3::Vector3d * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::mutable_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::mutable_normal_to_surface() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_normal_to_surface", (void (osi3::LidarSensorView_Reflection::*)(class osi3::Vector3d *)) &osi3::LidarSensorView_Reflection::set_allocated_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::set_allocated_normal_to_surface(class osi3::Vector3d *) --> void", pybind11::arg("normal_to_surface"));
		cl.def("unsafe_arena_set_allocated_normal_to_surface", (void (osi3::LidarSensorView_Reflection::*)(class osi3::Vector3d *)) &osi3::LidarSensorView_Reflection::unsafe_arena_set_allocated_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::unsafe_arena_set_allocated_normal_to_surface(class osi3::Vector3d *) --> void", pybind11::arg("normal_to_surface"));
		cl.def("unsafe_arena_release_normal_to_surface", (class osi3::Vector3d * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::unsafe_arena_release_normal_to_surface, "C++: osi3::LidarSensorView_Reflection::unsafe_arena_release_normal_to_surface() --> class osi3::Vector3d *", pybind11::return_value_policy::reference);
		cl.def("has_object_id", (bool (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::has_object_id, "C++: osi3::LidarSensorView_Reflection::has_object_id() const --> bool");
		cl.def("clear_object_id", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::clear_object_id, "C++: osi3::LidarSensorView_Reflection::clear_object_id() --> void");
		cl.def("object_id", (const class osi3::Identifier & (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::object_id, "C++: osi3::LidarSensorView_Reflection::object_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_object_id", (class osi3::Identifier * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::release_object_id, "C++: osi3::LidarSensorView_Reflection::release_object_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_object_id", (class osi3::Identifier * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::mutable_object_id, "C++: osi3::LidarSensorView_Reflection::mutable_object_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_object_id", (void (osi3::LidarSensorView_Reflection::*)(class osi3::Identifier *)) &osi3::LidarSensorView_Reflection::set_allocated_object_id, "C++: osi3::LidarSensorView_Reflection::set_allocated_object_id(class osi3::Identifier *) --> void", pybind11::arg("object_id"));
		cl.def("unsafe_arena_set_allocated_object_id", (void (osi3::LidarSensorView_Reflection::*)(class osi3::Identifier *)) &osi3::LidarSensorView_Reflection::unsafe_arena_set_allocated_object_id, "C++: osi3::LidarSensorView_Reflection::unsafe_arena_set_allocated_object_id(class osi3::Identifier *) --> void", pybind11::arg("object_id"));
		cl.def("unsafe_arena_release_object_id", (class osi3::Identifier * (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::unsafe_arena_release_object_id, "C++: osi3::LidarSensorView_Reflection::unsafe_arena_release_object_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("clear_signal_strength", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::clear_signal_strength, "C++: osi3::LidarSensorView_Reflection::clear_signal_strength() --> void");
		cl.def("signal_strength", (double (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::signal_strength, "C++: osi3::LidarSensorView_Reflection::signal_strength() const --> double");
		cl.def("set_signal_strength", (void (osi3::LidarSensorView_Reflection::*)(double)) &osi3::LidarSensorView_Reflection::set_signal_strength, "C++: osi3::LidarSensorView_Reflection::set_signal_strength(double) --> void", pybind11::arg("value"));
		cl.def("clear_time_of_flight", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::clear_time_of_flight, "C++: osi3::LidarSensorView_Reflection::clear_time_of_flight() --> void");
		cl.def("time_of_flight", (double (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::time_of_flight, "C++: osi3::LidarSensorView_Reflection::time_of_flight() const --> double");
		cl.def("set_time_of_flight", (void (osi3::LidarSensorView_Reflection::*)(double)) &osi3::LidarSensorView_Reflection::set_time_of_flight, "C++: osi3::LidarSensorView_Reflection::set_time_of_flight(double) --> void", pybind11::arg("value"));
		cl.def("clear_doppler_shift", (void (osi3::LidarSensorView_Reflection::*)()) &osi3::LidarSensorView_Reflection::clear_doppler_shift, "C++: osi3::LidarSensorView_Reflection::clear_doppler_shift() --> void");
		cl.def("doppler_shift", (double (osi3::LidarSensorView_Reflection::*)() const) &osi3::LidarSensorView_Reflection::doppler_shift, "C++: osi3::LidarSensorView_Reflection::doppler_shift() const --> double");
		cl.def("set_doppler_shift", (void (osi3::LidarSensorView_Reflection::*)(double)) &osi3::LidarSensorView_Reflection::set_doppler_shift, "C++: osi3::LidarSensorView_Reflection::set_doppler_shift(double) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_42.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_42(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B434_[osi3::LidarSensorView] ";
	{ // osi3::LidarSensorView file: line:1182
		pybind11::class_<osi3::LidarSensorView, std::shared_ptr<osi3::LidarSensorView>, google::protobuf::Message> cl(M("osi3"), "LidarSensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::LidarSensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LidarSensorView const &o){ return new osi3::LidarSensorView(o); } ) );
		cl.def("assign", (class osi3::LidarSensorView & (osi3::LidarSensorView::*)(const class osi3::LidarSensorView &)) &osi3::LidarSensorView::operator=, "C++: osi3::LidarSensorView::operator=(const class osi3::LidarSensorView &) --> class osi3::LidarSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorView::descriptor, "C++: osi3::LidarSensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LidarSensorView::GetDescriptor, "C++: osi3::LidarSensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LidarSensorView::GetReflection, "C++: osi3::LidarSensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LidarSensorView & (*)()) &osi3::LidarSensorView::default_instance, "C++: osi3::LidarSensorView::default_instance() --> const class osi3::LidarSensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LidarSensorView * (*)()) &osi3::LidarSensorView::internal_default_instance, "C++: osi3::LidarSensorView::internal_default_instance() --> const class osi3::LidarSensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LidarSensorView::*)(class osi3::LidarSensorView *)) &osi3::LidarSensorView::Swap, "C++: osi3::LidarSensorView::Swap(class osi3::LidarSensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LidarSensorView::*)(class osi3::LidarSensorView *)) &osi3::LidarSensorView::UnsafeArenaSwap, "C++: osi3::LidarSensorView::UnsafeArenaSwap(class osi3::LidarSensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LidarSensorView * (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::New, "C++: osi3::LidarSensorView::New() const --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LidarSensorView * (osi3::LidarSensorView::*)(class google::protobuf::Arena *) const) &osi3::LidarSensorView::New, "C++: osi3::LidarSensorView::New(class google::protobuf::Arena *) const --> class osi3::LidarSensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LidarSensorView::*)(const class google::protobuf::Message &)) &osi3::LidarSensorView::CopyFrom, "C++: osi3::LidarSensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorView::*)(const class google::protobuf::Message &)) &osi3::LidarSensorView::MergeFrom, "C++: osi3::LidarSensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LidarSensorView::*)(const class osi3::LidarSensorView &)) &osi3::LidarSensorView::CopyFrom, "C++: osi3::LidarSensorView::CopyFrom(const class osi3::LidarSensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LidarSensorView::*)(const class osi3::LidarSensorView &)) &osi3::LidarSensorView::MergeFrom, "C++: osi3::LidarSensorView::MergeFrom(const class osi3::LidarSensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::Clear, "C++: osi3::LidarSensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::IsInitialized, "C++: osi3::LidarSensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::ByteSizeLong, "C++: osi3::LidarSensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LidarSensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LidarSensorView::_InternalParse, "C++: osi3::LidarSensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LidarSensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LidarSensorView::_InternalSerialize, "C++: osi3::LidarSensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::GetCachedSize, "C++: osi3::LidarSensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::GetMetadata, "C++: osi3::LidarSensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("reflection_size", (int (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::reflection_size, "C++: osi3::LidarSensorView::reflection_size() const --> int");
		cl.def("clear_reflection", (void (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::clear_reflection, "C++: osi3::LidarSensorView::clear_reflection() --> void");
		cl.def("mutable_reflection", (class osi3::LidarSensorView_Reflection * (osi3::LidarSensorView::*)(int)) &osi3::LidarSensorView::mutable_reflection, "C++: osi3::LidarSensorView::mutable_reflection(int) --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_reflection", (class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> * (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::mutable_reflection, "C++: osi3::LidarSensorView::mutable_reflection() --> class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> *", pybind11::return_value_policy::reference);
		cl.def("reflection", (const class osi3::LidarSensorView_Reflection & (osi3::LidarSensorView::*)(int) const) &osi3::LidarSensorView::reflection, "C++: osi3::LidarSensorView::reflection(int) const --> const class osi3::LidarSensorView_Reflection &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_reflection", (class osi3::LidarSensorView_Reflection * (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::add_reflection, "C++: osi3::LidarSensorView::add_reflection() --> class osi3::LidarSensorView_Reflection *", pybind11::return_value_policy::reference);
		cl.def("reflection", (const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> & (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::reflection, "C++: osi3::LidarSensorView::reflection() const --> const class google::protobuf::RepeatedPtrField<class osi3::LidarSensorView_Reflection> &", pybind11::return_value_policy::automatic);
		cl.def("has_view_configuration", (bool (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::has_view_configuration, "C++: osi3::LidarSensorView::has_view_configuration() const --> bool");
		cl.def("clear_view_configuration", (void (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::clear_view_configuration, "C++: osi3::LidarSensorView::clear_view_configuration() --> void");
		cl.def("view_configuration", (const class osi3::LidarSensorViewConfiguration & (osi3::LidarSensorView::*)() const) &osi3::LidarSensorView::view_configuration, "C++: osi3::LidarSensorView::view_configuration() const --> const class osi3::LidarSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def("release_view_configuration", (class osi3::LidarSensorViewConfiguration * (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::release_view_configuration, "C++: osi3::LidarSensorView::release_view_configuration() --> class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("mutable_view_configuration", (class osi3::LidarSensorViewConfiguration * (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::mutable_view_configuration, "C++: osi3::LidarSensorView::mutable_view_configuration() --> class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_view_configuration", (void (osi3::LidarSensorView::*)(class osi3::LidarSensorViewConfiguration *)) &osi3::LidarSensorView::set_allocated_view_configuration, "C++: osi3::LidarSensorView::set_allocated_view_configuration(class osi3::LidarSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_set_allocated_view_configuration", (void (osi3::LidarSensorView::*)(class osi3::LidarSensorViewConfiguration *)) &osi3::LidarSensorView::unsafe_arena_set_allocated_view_configuration, "C++: osi3::LidarSensorView::unsafe_arena_set_allocated_view_configuration(class osi3::LidarSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_release_view_configuration", (class osi3::LidarSensorViewConfiguration * (osi3::LidarSensorView::*)()) &osi3::LidarSensorView::unsafe_arena_release_view_configuration, "C++: osi3::LidarSensorView::unsafe_arena_release_view_configuration() --> class osi3::LidarSensorViewConfiguration *", pybind11::return_value_policy::reference);
	}
	std::cout << "B435_[void osi3::swap(class osi3::LidarSensorView &, class osi3::LidarSensorView &)] ";
	std::cout << "B436_[osi3::CameraSensorView] ";
	{ // osi3::CameraSensorView file: line:1350
		pybind11::class_<osi3::CameraSensorView, std::shared_ptr<osi3::CameraSensorView>, google::protobuf::Message> cl(M("osi3"), "CameraSensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::CameraSensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::CameraSensorView const &o){ return new osi3::CameraSensorView(o); } ) );
		cl.def("assign", (class osi3::CameraSensorView & (osi3::CameraSensorView::*)(const class osi3::CameraSensorView &)) &osi3::CameraSensorView::operator=, "C++: osi3::CameraSensorView::operator=(const class osi3::CameraSensorView &) --> class osi3::CameraSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraSensorView::descriptor, "C++: osi3::CameraSensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraSensorView::GetDescriptor, "C++: osi3::CameraSensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::CameraSensorView::GetReflection, "C++: osi3::CameraSensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::CameraSensorView & (*)()) &osi3::CameraSensorView::default_instance, "C++: osi3::CameraSensorView::default_instance() --> const class osi3::CameraSensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::CameraSensorView * (*)()) &osi3::CameraSensorView::internal_default_instance, "C++: osi3::CameraSensorView::internal_default_instance() --> const class osi3::CameraSensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::CameraSensorView::*)(class osi3::CameraSensorView *)) &osi3::CameraSensorView::Swap, "C++: osi3::CameraSensorView::Swap(class osi3::CameraSensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::CameraSensorView::*)(class osi3::CameraSensorView *)) &osi3::CameraSensorView::UnsafeArenaSwap, "C++: osi3::CameraSensorView::UnsafeArenaSwap(class osi3::CameraSensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::CameraSensorView * (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::New, "C++: osi3::CameraSensorView::New() const --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::CameraSensorView * (osi3::CameraSensorView::*)(class google::protobuf::Arena *) const) &osi3::CameraSensorView::New, "C++: osi3::CameraSensorView::New(class google::protobuf::Arena *) const --> class osi3::CameraSensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::CameraSensorView::*)(const class google::protobuf::Message &)) &osi3::CameraSensorView::CopyFrom, "C++: osi3::CameraSensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraSensorView::*)(const class google::protobuf::Message &)) &osi3::CameraSensorView::MergeFrom, "C++: osi3::CameraSensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::CameraSensorView::*)(const class osi3::CameraSensorView &)) &osi3::CameraSensorView::CopyFrom, "C++: osi3::CameraSensorView::CopyFrom(const class osi3::CameraSensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraSensorView::*)(const class osi3::CameraSensorView &)) &osi3::CameraSensorView::MergeFrom, "C++: osi3::CameraSensorView::MergeFrom(const class osi3::CameraSensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::Clear, "C++: osi3::CameraSensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::IsInitialized, "C++: osi3::CameraSensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::ByteSizeLong, "C++: osi3::CameraSensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::CameraSensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::CameraSensorView::_InternalParse, "C++: osi3::CameraSensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::CameraSensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::CameraSensorView::_InternalSerialize, "C++: osi3::CameraSensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::GetCachedSize, "C++: osi3::CameraSensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::GetMetadata, "C++: osi3::CameraSensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_image_data", (void (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::clear_image_data, "C++: osi3::CameraSensorView::clear_image_data() --> void");
		cl.def("set_image_data", (void (osi3::CameraSensorView::*)(const char *)) &osi3::CameraSensorView::set_image_data, "C++: osi3::CameraSensorView::set_image_data(const char *) --> void", pybind11::arg("value"));
		cl.def("set_image_data", (void (osi3::CameraSensorView::*)(const void *, unsigned long)) &osi3::CameraSensorView::set_image_data, "C++: osi3::CameraSensorView::set_image_data(const void *, unsigned long) --> void", pybind11::arg("value"), pybind11::arg("size"));
		cl.def("has_view_configuration", (bool (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::has_view_configuration, "C++: osi3::CameraSensorView::has_view_configuration() const --> bool");
		cl.def("clear_view_configuration", (void (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::clear_view_configuration, "C++: osi3::CameraSensorView::clear_view_configuration() --> void");
		cl.def("view_configuration", (const class osi3::CameraSensorViewConfiguration & (osi3::CameraSensorView::*)() const) &osi3::CameraSensorView::view_configuration, "C++: osi3::CameraSensorView::view_configuration() const --> const class osi3::CameraSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def("release_view_configuration", (class osi3::CameraSensorViewConfiguration * (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::release_view_configuration, "C++: osi3::CameraSensorView::release_view_configuration() --> class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("mutable_view_configuration", (class osi3::CameraSensorViewConfiguration * (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::mutable_view_configuration, "C++: osi3::CameraSensorView::mutable_view_configuration() --> class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_view_configuration", (void (osi3::CameraSensorView::*)(class osi3::CameraSensorViewConfiguration *)) &osi3::CameraSensorView::set_allocated_view_configuration, "C++: osi3::CameraSensorView::set_allocated_view_configuration(class osi3::CameraSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_set_allocated_view_configuration", (void (osi3::CameraSensorView::*)(class osi3::CameraSensorViewConfiguration *)) &osi3::CameraSensorView::unsafe_arena_set_allocated_view_configuration, "C++: osi3::CameraSensorView::unsafe_arena_set_allocated_view_configuration(class osi3::CameraSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_release_view_configuration", (class osi3::CameraSensorViewConfiguration * (osi3::CameraSensorView::*)()) &osi3::CameraSensorView::unsafe_arena_release_view_configuration, "C++: osi3::CameraSensorView::unsafe_arena_release_view_configuration() --> class osi3::CameraSensorViewConfiguration *", pybind11::return_value_policy::reference);
	}
}


// File: unknown/unknown_43.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_43(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B437_[osi3::UltrasonicSensorView] ";
	{ // osi3::UltrasonicSensorView file: line:1514
		pybind11::class_<osi3::UltrasonicSensorView, std::shared_ptr<osi3::UltrasonicSensorView>, google::protobuf::Message> cl(M("osi3"), "UltrasonicSensorView", "");
		cl.def( pybind11::init( [](){ return new osi3::UltrasonicSensorView(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::UltrasonicSensorView const &o){ return new osi3::UltrasonicSensorView(o); } ) );
		cl.def("assign", (class osi3::UltrasonicSensorView & (osi3::UltrasonicSensorView::*)(const class osi3::UltrasonicSensorView &)) &osi3::UltrasonicSensorView::operator=, "C++: osi3::UltrasonicSensorView::operator=(const class osi3::UltrasonicSensorView &) --> class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicSensorView::descriptor, "C++: osi3::UltrasonicSensorView::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicSensorView::GetDescriptor, "C++: osi3::UltrasonicSensorView::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::UltrasonicSensorView::GetReflection, "C++: osi3::UltrasonicSensorView::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::UltrasonicSensorView & (*)()) &osi3::UltrasonicSensorView::default_instance, "C++: osi3::UltrasonicSensorView::default_instance() --> const class osi3::UltrasonicSensorView &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::UltrasonicSensorView * (*)()) &osi3::UltrasonicSensorView::internal_default_instance, "C++: osi3::UltrasonicSensorView::internal_default_instance() --> const class osi3::UltrasonicSensorView *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::UltrasonicSensorView::*)(class osi3::UltrasonicSensorView *)) &osi3::UltrasonicSensorView::Swap, "C++: osi3::UltrasonicSensorView::Swap(class osi3::UltrasonicSensorView *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::UltrasonicSensorView::*)(class osi3::UltrasonicSensorView *)) &osi3::UltrasonicSensorView::UnsafeArenaSwap, "C++: osi3::UltrasonicSensorView::UnsafeArenaSwap(class osi3::UltrasonicSensorView *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::UltrasonicSensorView * (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::New, "C++: osi3::UltrasonicSensorView::New() const --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::UltrasonicSensorView * (osi3::UltrasonicSensorView::*)(class google::protobuf::Arena *) const) &osi3::UltrasonicSensorView::New, "C++: osi3::UltrasonicSensorView::New(class google::protobuf::Arena *) const --> class osi3::UltrasonicSensorView *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::UltrasonicSensorView::*)(const class google::protobuf::Message &)) &osi3::UltrasonicSensorView::CopyFrom, "C++: osi3::UltrasonicSensorView::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicSensorView::*)(const class google::protobuf::Message &)) &osi3::UltrasonicSensorView::MergeFrom, "C++: osi3::UltrasonicSensorView::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::UltrasonicSensorView::*)(const class osi3::UltrasonicSensorView &)) &osi3::UltrasonicSensorView::CopyFrom, "C++: osi3::UltrasonicSensorView::CopyFrom(const class osi3::UltrasonicSensorView &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicSensorView::*)(const class osi3::UltrasonicSensorView &)) &osi3::UltrasonicSensorView::MergeFrom, "C++: osi3::UltrasonicSensorView::MergeFrom(const class osi3::UltrasonicSensorView &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::UltrasonicSensorView::*)()) &osi3::UltrasonicSensorView::Clear, "C++: osi3::UltrasonicSensorView::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::IsInitialized, "C++: osi3::UltrasonicSensorView::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::ByteSizeLong, "C++: osi3::UltrasonicSensorView::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::UltrasonicSensorView::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::UltrasonicSensorView::_InternalParse, "C++: osi3::UltrasonicSensorView::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::UltrasonicSensorView::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::UltrasonicSensorView::_InternalSerialize, "C++: osi3::UltrasonicSensorView::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::GetCachedSize, "C++: osi3::UltrasonicSensorView::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::GetMetadata, "C++: osi3::UltrasonicSensorView::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("has_view_configuration", (bool (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::has_view_configuration, "C++: osi3::UltrasonicSensorView::has_view_configuration() const --> bool");
		cl.def("clear_view_configuration", (void (osi3::UltrasonicSensorView::*)()) &osi3::UltrasonicSensorView::clear_view_configuration, "C++: osi3::UltrasonicSensorView::clear_view_configuration() --> void");
		cl.def("view_configuration", (const class osi3::UltrasonicSensorViewConfiguration & (osi3::UltrasonicSensorView::*)() const) &osi3::UltrasonicSensorView::view_configuration, "C++: osi3::UltrasonicSensorView::view_configuration() const --> const class osi3::UltrasonicSensorViewConfiguration &", pybind11::return_value_policy::automatic);
		cl.def("release_view_configuration", (class osi3::UltrasonicSensorViewConfiguration * (osi3::UltrasonicSensorView::*)()) &osi3::UltrasonicSensorView::release_view_configuration, "C++: osi3::UltrasonicSensorView::release_view_configuration() --> class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("mutable_view_configuration", (class osi3::UltrasonicSensorViewConfiguration * (osi3::UltrasonicSensorView::*)()) &osi3::UltrasonicSensorView::mutable_view_configuration, "C++: osi3::UltrasonicSensorView::mutable_view_configuration() --> class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_view_configuration", (void (osi3::UltrasonicSensorView::*)(class osi3::UltrasonicSensorViewConfiguration *)) &osi3::UltrasonicSensorView::set_allocated_view_configuration, "C++: osi3::UltrasonicSensorView::set_allocated_view_configuration(class osi3::UltrasonicSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_set_allocated_view_configuration", (void (osi3::UltrasonicSensorView::*)(class osi3::UltrasonicSensorViewConfiguration *)) &osi3::UltrasonicSensorView::unsafe_arena_set_allocated_view_configuration, "C++: osi3::UltrasonicSensorView::unsafe_arena_set_allocated_view_configuration(class osi3::UltrasonicSensorViewConfiguration *) --> void", pybind11::arg("view_configuration"));
		cl.def("unsafe_arena_release_view_configuration", (class osi3::UltrasonicSensorViewConfiguration * (osi3::UltrasonicSensorView::*)()) &osi3::UltrasonicSensorView::unsafe_arena_release_view_configuration, "C++: osi3::UltrasonicSensorView::unsafe_arena_release_view_configuration() --> class osi3::UltrasonicSensorViewConfiguration *", pybind11::return_value_policy::reference);
	}
	std::cout << "B438_[void osi3::swap(class osi3::UltrasonicSensorView &, class osi3::UltrasonicSensorView &)] ";
}


// File: unknown/unknown_44.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_44(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B439_[osi3::SensorDetectionHeader_DataQualifier] ";
	// osi3::SensorDetectionHeader_DataQualifier file: line:122
	pybind11::enum_<osi3::SensorDetectionHeader_DataQualifier>(M("osi3"), "SensorDetectionHeader_DataQualifier", pybind11::arithmetic(), "")
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_OTHER", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_OTHER)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE)
		.value("SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_INVALID", osi3::SensorDetectionHeader_DataQualifier_DATA_QUALIFIER_INVALID)
		.value("SensorDetectionHeader_DataQualifier_SensorDetectionHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::SensorDetectionHeader_DataQualifier_SensorDetectionHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("SensorDetectionHeader_DataQualifier_SensorDetectionHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::SensorDetectionHeader_DataQualifier_SensorDetectionHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B440_[bool osi3::SensorDetectionHeader_DataQualifier_IsValid(int)] ";
	std::cout << "B441_[const class google::protobuf::EnumDescriptor * osi3::SensorDetectionHeader_DataQualifier_descriptor()] ";
	std::cout << "B442_[bool osi3::SensorDetectionHeader_DataQualifier_Parse(const std::string &, enum osi3::SensorDetectionHeader_DataQualifier *)] ";
	std::cout << "B443_[osi3::SensorDetectionHeader_ExtendedQualifier] ";
	// osi3::SensorDetectionHeader_ExtendedQualifier file: line:153
	pybind11::enum_<osi3::SensorDetectionHeader_ExtendedQualifier>(M("osi3"), "SensorDetectionHeader_ExtendedQualifier", pybind11::arithmetic(), "")
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_UNKNOWN", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_UNKNOWN)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_OTHER", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_OTHER)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_NORMAL_OPERATION_MODE", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_NORMAL_OPERATION_MODE)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_POWER_UP_OR_DOWN", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_POWER_UP_OR_DOWN)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_NOT_CALIBRATED", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_NOT_CALIBRATED)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_BLOCKED", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_BLOCKED)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_MISALIGNED", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_SENSOR_MISALIGNED)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_BAD_SENSOR_ENVIRONMENTAL_CONDITION", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_BAD_SENSOR_ENVIRONMENTAL_CONDITION)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_REDUCED_FIELD_OF_VIEW", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_REDUCED_FIELD_OF_VIEW)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_INPUT_NOT_AVAILABLE", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_INPUT_NOT_AVAILABLE)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_INTERNAL_REASON", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_INTERNAL_REASON)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_EXTERNAL_DISTURBANCE", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_EXTERNAL_DISTURBANCE)
		.value("SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_BEGINNING_BLOCKAGE", osi3::SensorDetectionHeader_ExtendedQualifier_EXTENDED_QUALIFIER_BEGINNING_BLOCKAGE)
		.value("SensorDetectionHeader_ExtendedQualifier_SensorDetectionHeader_ExtendedQualifier_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::SensorDetectionHeader_ExtendedQualifier_SensorDetectionHeader_ExtendedQualifier_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("SensorDetectionHeader_ExtendedQualifier_SensorDetectionHeader_ExtendedQualifier_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::SensorDetectionHeader_ExtendedQualifier_SensorDetectionHeader_ExtendedQualifier_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B444_[bool osi3::SensorDetectionHeader_ExtendedQualifier_IsValid(int)] ";
	std::cout << "B445_[const class google::protobuf::EnumDescriptor * osi3::SensorDetectionHeader_ExtendedQualifier_descriptor()] ";
	std::cout << "B446_[bool osi3::SensorDetectionHeader_ExtendedQualifier_Parse(const std::string &, enum osi3::SensorDetectionHeader_ExtendedQualifier *)] ";
	std::cout << "B447_[osi3::CameraDetection_Color] ";
	std::cout << "B448_[bool osi3::CameraDetection_Color_IsValid(int)] ";
	std::cout << "B449_[const class google::protobuf::EnumDescriptor * osi3::CameraDetection_Color_descriptor()] ";
	std::cout << "B450_[bool osi3::CameraDetection_Color_Parse(const std::string &, enum osi3::CameraDetection_Color *)] ";
	std::cout << "B451_[osi3::CameraDetection_ImageShapeType] ";
	std::cout << "B452_[bool osi3::CameraDetection_ImageShapeType_IsValid(int)] ";
	std::cout << "B453_[const class google::protobuf::EnumDescriptor * osi3::CameraDetection_ImageShapeType_descriptor()] ";
	std::cout << "B454_[bool osi3::CameraDetection_ImageShapeType_Parse(const std::string &, enum osi3::CameraDetection_ImageShapeType *)] ";
	std::cout << "B455_[osi3::DetectionClassification] ";
	std::cout << "B456_[bool osi3::DetectionClassification_IsValid(int)] ";
	std::cout << "B457_[const class google::protobuf::EnumDescriptor * osi3::DetectionClassification_descriptor()] ";
	std::cout << "B458_[bool osi3::DetectionClassification_Parse(const std::string &, enum osi3::DetectionClassification *)] ";
	std::cout << "B459_[osi3::FeatureData] ";
	std::cout << "B460_[void osi3::swap(class osi3::FeatureData &, class osi3::FeatureData &)] ";
	std::cout << "B461_[osi3::SensorDetectionHeader] ";
	{ // osi3::SensorDetectionHeader file: line:512
		pybind11::class_<osi3::SensorDetectionHeader, std::shared_ptr<osi3::SensorDetectionHeader>, google::protobuf::Message> cl(M("osi3"), "SensorDetectionHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::SensorDetectionHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::SensorDetectionHeader const &o){ return new osi3::SensorDetectionHeader(o); } ) );
		cl.def("assign", (class osi3::SensorDetectionHeader & (osi3::SensorDetectionHeader::*)(const class osi3::SensorDetectionHeader &)) &osi3::SensorDetectionHeader::operator=, "C++: osi3::SensorDetectionHeader::operator=(const class osi3::SensorDetectionHeader &) --> class osi3::SensorDetectionHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::SensorDetectionHeader::descriptor, "C++: osi3::SensorDetectionHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::SensorDetectionHeader::GetDescriptor, "C++: osi3::SensorDetectionHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::SensorDetectionHeader::GetReflection, "C++: osi3::SensorDetectionHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::SensorDetectionHeader & (*)()) &osi3::SensorDetectionHeader::default_instance, "C++: osi3::SensorDetectionHeader::default_instance() --> const class osi3::SensorDetectionHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::SensorDetectionHeader * (*)()) &osi3::SensorDetectionHeader::internal_default_instance, "C++: osi3::SensorDetectionHeader::internal_default_instance() --> const class osi3::SensorDetectionHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::SensorDetectionHeader::*)(class osi3::SensorDetectionHeader *)) &osi3::SensorDetectionHeader::Swap, "C++: osi3::SensorDetectionHeader::Swap(class osi3::SensorDetectionHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::SensorDetectionHeader::*)(class osi3::SensorDetectionHeader *)) &osi3::SensorDetectionHeader::UnsafeArenaSwap, "C++: osi3::SensorDetectionHeader::UnsafeArenaSwap(class osi3::SensorDetectionHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::SensorDetectionHeader * (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::New, "C++: osi3::SensorDetectionHeader::New() const --> class osi3::SensorDetectionHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::SensorDetectionHeader * (osi3::SensorDetectionHeader::*)(class google::protobuf::Arena *) const) &osi3::SensorDetectionHeader::New, "C++: osi3::SensorDetectionHeader::New(class google::protobuf::Arena *) const --> class osi3::SensorDetectionHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::SensorDetectionHeader::*)(const class google::protobuf::Message &)) &osi3::SensorDetectionHeader::CopyFrom, "C++: osi3::SensorDetectionHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::SensorDetectionHeader::*)(const class google::protobuf::Message &)) &osi3::SensorDetectionHeader::MergeFrom, "C++: osi3::SensorDetectionHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::SensorDetectionHeader::*)(const class osi3::SensorDetectionHeader &)) &osi3::SensorDetectionHeader::CopyFrom, "C++: osi3::SensorDetectionHeader::CopyFrom(const class osi3::SensorDetectionHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::SensorDetectionHeader::*)(const class osi3::SensorDetectionHeader &)) &osi3::SensorDetectionHeader::MergeFrom, "C++: osi3::SensorDetectionHeader::MergeFrom(const class osi3::SensorDetectionHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::Clear, "C++: osi3::SensorDetectionHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::IsInitialized, "C++: osi3::SensorDetectionHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::ByteSizeLong, "C++: osi3::SensorDetectionHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::SensorDetectionHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::SensorDetectionHeader::_InternalParse, "C++: osi3::SensorDetectionHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::SensorDetectionHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::SensorDetectionHeader::_InternalSerialize, "C++: osi3::SensorDetectionHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::GetCachedSize, "C++: osi3::SensorDetectionHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::GetMetadata, "C++: osi3::SensorDetectionHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("DataQualifier_IsValid", (bool (*)(int)) &osi3::SensorDetectionHeader::DataQualifier_IsValid, "C++: osi3::SensorDetectionHeader::DataQualifier_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("DataQualifier_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::SensorDetectionHeader::DataQualifier_descriptor, "C++: osi3::SensorDetectionHeader::DataQualifier_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("DataQualifier_Parse", (bool (*)(const std::string &, enum osi3::SensorDetectionHeader_DataQualifier *)) &osi3::SensorDetectionHeader::DataQualifier_Parse, "C++: osi3::SensorDetectionHeader::DataQualifier_Parse(const std::string &, enum osi3::SensorDetectionHeader_DataQualifier *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def_static("ExtendedQualifier_IsValid", (bool (*)(int)) &osi3::SensorDetectionHeader::ExtendedQualifier_IsValid, "C++: osi3::SensorDetectionHeader::ExtendedQualifier_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("ExtendedQualifier_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::SensorDetectionHeader::ExtendedQualifier_descriptor, "C++: osi3::SensorDetectionHeader::ExtendedQualifier_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("ExtendedQualifier_Parse", (bool (*)(const std::string &, enum osi3::SensorDetectionHeader_ExtendedQualifier *)) &osi3::SensorDetectionHeader::ExtendedQualifier_Parse, "C++: osi3::SensorDetectionHeader::ExtendedQualifier_Parse(const std::string &, enum osi3::SensorDetectionHeader_ExtendedQualifier *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("has_measurement_time", (bool (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::has_measurement_time, "C++: osi3::SensorDetectionHeader::has_measurement_time() const --> bool");
		cl.def("clear_measurement_time", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_measurement_time, "C++: osi3::SensorDetectionHeader::clear_measurement_time() --> void");
		cl.def("measurement_time", (const class osi3::Timestamp & (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::measurement_time, "C++: osi3::SensorDetectionHeader::measurement_time() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_measurement_time", (class osi3::Timestamp * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::release_measurement_time, "C++: osi3::SensorDetectionHeader::release_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_measurement_time", (class osi3::Timestamp * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::mutable_measurement_time, "C++: osi3::SensorDetectionHeader::mutable_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_measurement_time", (void (osi3::SensorDetectionHeader::*)(class osi3::Timestamp *)) &osi3::SensorDetectionHeader::set_allocated_measurement_time, "C++: osi3::SensorDetectionHeader::set_allocated_measurement_time(class osi3::Timestamp *) --> void", pybind11::arg("measurement_time"));
		cl.def("unsafe_arena_set_allocated_measurement_time", (void (osi3::SensorDetectionHeader::*)(class osi3::Timestamp *)) &osi3::SensorDetectionHeader::unsafe_arena_set_allocated_measurement_time, "C++: osi3::SensorDetectionHeader::unsafe_arena_set_allocated_measurement_time(class osi3::Timestamp *) --> void", pybind11::arg("measurement_time"));
		cl.def("unsafe_arena_release_measurement_time", (class osi3::Timestamp * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::unsafe_arena_release_measurement_time, "C++: osi3::SensorDetectionHeader::unsafe_arena_release_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position", (bool (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::has_mounting_position, "C++: osi3::SensorDetectionHeader::has_mounting_position() const --> bool");
		cl.def("clear_mounting_position", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_mounting_position, "C++: osi3::SensorDetectionHeader::clear_mounting_position() --> void");
		cl.def("mounting_position", (const class osi3::MountingPosition & (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::mounting_position, "C++: osi3::SensorDetectionHeader::mounting_position() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::release_mounting_position, "C++: osi3::SensorDetectionHeader::release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::mutable_mounting_position, "C++: osi3::SensorDetectionHeader::mutable_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position", (void (osi3::SensorDetectionHeader::*)(class osi3::MountingPosition *)) &osi3::SensorDetectionHeader::set_allocated_mounting_position, "C++: osi3::SensorDetectionHeader::set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_set_allocated_mounting_position", (void (osi3::SensorDetectionHeader::*)(class osi3::MountingPosition *)) &osi3::SensorDetectionHeader::unsafe_arena_set_allocated_mounting_position, "C++: osi3::SensorDetectionHeader::unsafe_arena_set_allocated_mounting_position(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position"));
		cl.def("unsafe_arena_release_mounting_position", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::unsafe_arena_release_mounting_position, "C++: osi3::SensorDetectionHeader::unsafe_arena_release_mounting_position() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_mounting_position_rmse", (bool (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::has_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::has_mounting_position_rmse() const --> bool");
		cl.def("clear_mounting_position_rmse", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::clear_mounting_position_rmse() --> void");
		cl.def("mounting_position_rmse", (const class osi3::MountingPosition & (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::mounting_position_rmse, "C++: osi3::SensorDetectionHeader::mounting_position_rmse() const --> const class osi3::MountingPosition &", pybind11::return_value_policy::automatic);
		cl.def("release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::release_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("mutable_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::mutable_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::mutable_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_mounting_position_rmse", (void (osi3::SensorDetectionHeader::*)(class osi3::MountingPosition *)) &osi3::SensorDetectionHeader::set_allocated_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_set_allocated_mounting_position_rmse", (void (osi3::SensorDetectionHeader::*)(class osi3::MountingPosition *)) &osi3::SensorDetectionHeader::unsafe_arena_set_allocated_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::unsafe_arena_set_allocated_mounting_position_rmse(class osi3::MountingPosition *) --> void", pybind11::arg("mounting_position_rmse"));
		cl.def("unsafe_arena_release_mounting_position_rmse", (class osi3::MountingPosition * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::unsafe_arena_release_mounting_position_rmse, "C++: osi3::SensorDetectionHeader::unsafe_arena_release_mounting_position_rmse() --> class osi3::MountingPosition *", pybind11::return_value_policy::reference);
		cl.def("has_sensor_id", (bool (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::has_sensor_id, "C++: osi3::SensorDetectionHeader::has_sensor_id() const --> bool");
		cl.def("clear_sensor_id", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_sensor_id, "C++: osi3::SensorDetectionHeader::clear_sensor_id() --> void");
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::sensor_id, "C++: osi3::SensorDetectionHeader::sensor_id() const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic);
		cl.def("release_sensor_id", (class osi3::Identifier * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::release_sensor_id, "C++: osi3::SensorDetectionHeader::release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::mutable_sensor_id, "C++: osi3::SensorDetectionHeader::mutable_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_sensor_id", (void (osi3::SensorDetectionHeader::*)(class osi3::Identifier *)) &osi3::SensorDetectionHeader::set_allocated_sensor_id, "C++: osi3::SensorDetectionHeader::set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_set_allocated_sensor_id", (void (osi3::SensorDetectionHeader::*)(class osi3::Identifier *)) &osi3::SensorDetectionHeader::unsafe_arena_set_allocated_sensor_id, "C++: osi3::SensorDetectionHeader::unsafe_arena_set_allocated_sensor_id(class osi3::Identifier *) --> void", pybind11::arg("sensor_id"));
		cl.def("unsafe_arena_release_sensor_id", (class osi3::Identifier * (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::unsafe_arena_release_sensor_id, "C++: osi3::SensorDetectionHeader::unsafe_arena_release_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("clear_cycle_counter", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_cycle_counter, "C++: osi3::SensorDetectionHeader::clear_cycle_counter() --> void");
		cl.def("cycle_counter", (unsigned long (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::cycle_counter, "C++: osi3::SensorDetectionHeader::cycle_counter() const --> unsigned long");
		cl.def("set_cycle_counter", (void (osi3::SensorDetectionHeader::*)(unsigned long)) &osi3::SensorDetectionHeader::set_cycle_counter, "C++: osi3::SensorDetectionHeader::set_cycle_counter(unsigned long) --> void", pybind11::arg("value"));
		cl.def("clear_data_qualifier", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_data_qualifier, "C++: osi3::SensorDetectionHeader::clear_data_qualifier() --> void");
		cl.def("data_qualifier", (enum osi3::SensorDetectionHeader_DataQualifier (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::data_qualifier, "C++: osi3::SensorDetectionHeader::data_qualifier() const --> enum osi3::SensorDetectionHeader_DataQualifier");
		cl.def("set_data_qualifier", (void (osi3::SensorDetectionHeader::*)(enum osi3::SensorDetectionHeader_DataQualifier)) &osi3::SensorDetectionHeader::set_data_qualifier, "C++: osi3::SensorDetectionHeader::set_data_qualifier(enum osi3::SensorDetectionHeader_DataQualifier) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_valid_detections", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_number_of_valid_detections, "C++: osi3::SensorDetectionHeader::clear_number_of_valid_detections() --> void");
		cl.def("number_of_valid_detections", (unsigned int (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::number_of_valid_detections, "C++: osi3::SensorDetectionHeader::number_of_valid_detections() const --> unsigned int");
		cl.def("set_number_of_valid_detections", (void (osi3::SensorDetectionHeader::*)(unsigned int)) &osi3::SensorDetectionHeader::set_number_of_valid_detections, "C++: osi3::SensorDetectionHeader::set_number_of_valid_detections(unsigned int) --> void", pybind11::arg("value"));
		cl.def("clear_extended_qualifier", (void (osi3::SensorDetectionHeader::*)()) &osi3::SensorDetectionHeader::clear_extended_qualifier, "C++: osi3::SensorDetectionHeader::clear_extended_qualifier() --> void");
		cl.def("extended_qualifier", (enum osi3::SensorDetectionHeader_ExtendedQualifier (osi3::SensorDetectionHeader::*)() const) &osi3::SensorDetectionHeader::extended_qualifier, "C++: osi3::SensorDetectionHeader::extended_qualifier() const --> enum osi3::SensorDetectionHeader_ExtendedQualifier");
		cl.def("set_extended_qualifier", (void (osi3::SensorDetectionHeader::*)(enum osi3::SensorDetectionHeader_ExtendedQualifier)) &osi3::SensorDetectionHeader::set_extended_qualifier, "C++: osi3::SensorDetectionHeader::set_extended_qualifier(enum osi3::SensorDetectionHeader_ExtendedQualifier) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_45.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_45(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B462_[osi3::UltrasonicDetectionSpecificHeader] ";
	{ // osi3::UltrasonicDetectionSpecificHeader file: line:1734
		pybind11::class_<osi3::UltrasonicDetectionSpecificHeader, std::shared_ptr<osi3::UltrasonicDetectionSpecificHeader>, google::protobuf::Message> cl(M("osi3"), "UltrasonicDetectionSpecificHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::UltrasonicDetectionSpecificHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::UltrasonicDetectionSpecificHeader const &o){ return new osi3::UltrasonicDetectionSpecificHeader(o); } ) );
		cl.def("assign", (class osi3::UltrasonicDetectionSpecificHeader & (osi3::UltrasonicDetectionSpecificHeader::*)(const class osi3::UltrasonicDetectionSpecificHeader &)) &osi3::UltrasonicDetectionSpecificHeader::operator=, "C++: osi3::UltrasonicDetectionSpecificHeader::operator=(const class osi3::UltrasonicDetectionSpecificHeader &) --> class osi3::UltrasonicDetectionSpecificHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicDetectionSpecificHeader::descriptor, "C++: osi3::UltrasonicDetectionSpecificHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::UltrasonicDetectionSpecificHeader::GetDescriptor, "C++: osi3::UltrasonicDetectionSpecificHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::UltrasonicDetectionSpecificHeader::GetReflection, "C++: osi3::UltrasonicDetectionSpecificHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::UltrasonicDetectionSpecificHeader & (*)()) &osi3::UltrasonicDetectionSpecificHeader::default_instance, "C++: osi3::UltrasonicDetectionSpecificHeader::default_instance() --> const class osi3::UltrasonicDetectionSpecificHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::UltrasonicDetectionSpecificHeader * (*)()) &osi3::UltrasonicDetectionSpecificHeader::internal_default_instance, "C++: osi3::UltrasonicDetectionSpecificHeader::internal_default_instance() --> const class osi3::UltrasonicDetectionSpecificHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::UltrasonicDetectionSpecificHeader::*)(class osi3::UltrasonicDetectionSpecificHeader *)) &osi3::UltrasonicDetectionSpecificHeader::Swap, "C++: osi3::UltrasonicDetectionSpecificHeader::Swap(class osi3::UltrasonicDetectionSpecificHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::UltrasonicDetectionSpecificHeader::*)(class osi3::UltrasonicDetectionSpecificHeader *)) &osi3::UltrasonicDetectionSpecificHeader::UnsafeArenaSwap, "C++: osi3::UltrasonicDetectionSpecificHeader::UnsafeArenaSwap(class osi3::UltrasonicDetectionSpecificHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::UltrasonicDetectionSpecificHeader * (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::New, "C++: osi3::UltrasonicDetectionSpecificHeader::New() const --> class osi3::UltrasonicDetectionSpecificHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::UltrasonicDetectionSpecificHeader * (osi3::UltrasonicDetectionSpecificHeader::*)(class google::protobuf::Arena *) const) &osi3::UltrasonicDetectionSpecificHeader::New, "C++: osi3::UltrasonicDetectionSpecificHeader::New(class google::protobuf::Arena *) const --> class osi3::UltrasonicDetectionSpecificHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::UltrasonicDetectionSpecificHeader::*)(const class google::protobuf::Message &)) &osi3::UltrasonicDetectionSpecificHeader::CopyFrom, "C++: osi3::UltrasonicDetectionSpecificHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicDetectionSpecificHeader::*)(const class google::protobuf::Message &)) &osi3::UltrasonicDetectionSpecificHeader::MergeFrom, "C++: osi3::UltrasonicDetectionSpecificHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::UltrasonicDetectionSpecificHeader::*)(const class osi3::UltrasonicDetectionSpecificHeader &)) &osi3::UltrasonicDetectionSpecificHeader::CopyFrom, "C++: osi3::UltrasonicDetectionSpecificHeader::CopyFrom(const class osi3::UltrasonicDetectionSpecificHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::UltrasonicDetectionSpecificHeader::*)(const class osi3::UltrasonicDetectionSpecificHeader &)) &osi3::UltrasonicDetectionSpecificHeader::MergeFrom, "C++: osi3::UltrasonicDetectionSpecificHeader::MergeFrom(const class osi3::UltrasonicDetectionSpecificHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::UltrasonicDetectionSpecificHeader::*)()) &osi3::UltrasonicDetectionSpecificHeader::Clear, "C++: osi3::UltrasonicDetectionSpecificHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::IsInitialized, "C++: osi3::UltrasonicDetectionSpecificHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::ByteSizeLong, "C++: osi3::UltrasonicDetectionSpecificHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::UltrasonicDetectionSpecificHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::UltrasonicDetectionSpecificHeader::_InternalParse, "C++: osi3::UltrasonicDetectionSpecificHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::UltrasonicDetectionSpecificHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::UltrasonicDetectionSpecificHeader::_InternalSerialize, "C++: osi3::UltrasonicDetectionSpecificHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::GetCachedSize, "C++: osi3::UltrasonicDetectionSpecificHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::GetMetadata, "C++: osi3::UltrasonicDetectionSpecificHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_max_range", (void (osi3::UltrasonicDetectionSpecificHeader::*)()) &osi3::UltrasonicDetectionSpecificHeader::clear_max_range, "C++: osi3::UltrasonicDetectionSpecificHeader::clear_max_range() --> void");
		cl.def("max_range", (double (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::max_range, "C++: osi3::UltrasonicDetectionSpecificHeader::max_range() const --> double");
		cl.def("set_max_range", (void (osi3::UltrasonicDetectionSpecificHeader::*)(double)) &osi3::UltrasonicDetectionSpecificHeader::set_max_range, "C++: osi3::UltrasonicDetectionSpecificHeader::set_max_range(double) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_valid_indirect_detections", (void (osi3::UltrasonicDetectionSpecificHeader::*)()) &osi3::UltrasonicDetectionSpecificHeader::clear_number_of_valid_indirect_detections, "C++: osi3::UltrasonicDetectionSpecificHeader::clear_number_of_valid_indirect_detections() --> void");
		cl.def("number_of_valid_indirect_detections", (unsigned int (osi3::UltrasonicDetectionSpecificHeader::*)() const) &osi3::UltrasonicDetectionSpecificHeader::number_of_valid_indirect_detections, "C++: osi3::UltrasonicDetectionSpecificHeader::number_of_valid_indirect_detections() const --> unsigned int");
		cl.def("set_number_of_valid_indirect_detections", (void (osi3::UltrasonicDetectionSpecificHeader::*)(unsigned int)) &osi3::UltrasonicDetectionSpecificHeader::set_number_of_valid_indirect_detections, "C++: osi3::UltrasonicDetectionSpecificHeader::set_number_of_valid_indirect_detections(unsigned int) --> void", pybind11::arg("value"));
	}
	std::cout << "B463_[void osi3::swap(class osi3::UltrasonicDetectionSpecificHeader &, class osi3::UltrasonicDetectionSpecificHeader &)] ";
	std::cout << "B464_[osi3::UltrasonicDetectionData] ";
	std::cout << "B465_[void osi3::swap(class osi3::UltrasonicDetectionData &, class osi3::UltrasonicDetectionData &)] ";
	std::cout << "B466_[osi3::UltrasonicDetection] ";
	std::cout << "B467_[void osi3::swap(class osi3::UltrasonicDetection &, class osi3::UltrasonicDetection &)] ";
	std::cout << "B468_[osi3::UltrasonicIndirectDetection] ";
	std::cout << "B469_[void osi3::swap(class osi3::UltrasonicIndirectDetection &, class osi3::UltrasonicIndirectDetection &)] ";
	std::cout << "B470_[osi3::CameraDetectionSpecificHeader] ";
	{ // osi3::CameraDetectionSpecificHeader file: line:2475
		pybind11::class_<osi3::CameraDetectionSpecificHeader, std::shared_ptr<osi3::CameraDetectionSpecificHeader>, google::protobuf::Message> cl(M("osi3"), "CameraDetectionSpecificHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::CameraDetectionSpecificHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::CameraDetectionSpecificHeader const &o){ return new osi3::CameraDetectionSpecificHeader(o); } ) );
		cl.def("assign", (class osi3::CameraDetectionSpecificHeader & (osi3::CameraDetectionSpecificHeader::*)(const class osi3::CameraDetectionSpecificHeader &)) &osi3::CameraDetectionSpecificHeader::operator=, "C++: osi3::CameraDetectionSpecificHeader::operator=(const class osi3::CameraDetectionSpecificHeader &) --> class osi3::CameraDetectionSpecificHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraDetectionSpecificHeader::descriptor, "C++: osi3::CameraDetectionSpecificHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::CameraDetectionSpecificHeader::GetDescriptor, "C++: osi3::CameraDetectionSpecificHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::CameraDetectionSpecificHeader::GetReflection, "C++: osi3::CameraDetectionSpecificHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::CameraDetectionSpecificHeader & (*)()) &osi3::CameraDetectionSpecificHeader::default_instance, "C++: osi3::CameraDetectionSpecificHeader::default_instance() --> const class osi3::CameraDetectionSpecificHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::CameraDetectionSpecificHeader * (*)()) &osi3::CameraDetectionSpecificHeader::internal_default_instance, "C++: osi3::CameraDetectionSpecificHeader::internal_default_instance() --> const class osi3::CameraDetectionSpecificHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::CameraDetectionSpecificHeader::*)(class osi3::CameraDetectionSpecificHeader *)) &osi3::CameraDetectionSpecificHeader::Swap, "C++: osi3::CameraDetectionSpecificHeader::Swap(class osi3::CameraDetectionSpecificHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::CameraDetectionSpecificHeader::*)(class osi3::CameraDetectionSpecificHeader *)) &osi3::CameraDetectionSpecificHeader::UnsafeArenaSwap, "C++: osi3::CameraDetectionSpecificHeader::UnsafeArenaSwap(class osi3::CameraDetectionSpecificHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::CameraDetectionSpecificHeader * (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::New, "C++: osi3::CameraDetectionSpecificHeader::New() const --> class osi3::CameraDetectionSpecificHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::CameraDetectionSpecificHeader * (osi3::CameraDetectionSpecificHeader::*)(class google::protobuf::Arena *) const) &osi3::CameraDetectionSpecificHeader::New, "C++: osi3::CameraDetectionSpecificHeader::New(class google::protobuf::Arena *) const --> class osi3::CameraDetectionSpecificHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::CameraDetectionSpecificHeader::*)(const class google::protobuf::Message &)) &osi3::CameraDetectionSpecificHeader::CopyFrom, "C++: osi3::CameraDetectionSpecificHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraDetectionSpecificHeader::*)(const class google::protobuf::Message &)) &osi3::CameraDetectionSpecificHeader::MergeFrom, "C++: osi3::CameraDetectionSpecificHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::CameraDetectionSpecificHeader::*)(const class osi3::CameraDetectionSpecificHeader &)) &osi3::CameraDetectionSpecificHeader::CopyFrom, "C++: osi3::CameraDetectionSpecificHeader::CopyFrom(const class osi3::CameraDetectionSpecificHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::CameraDetectionSpecificHeader::*)(const class osi3::CameraDetectionSpecificHeader &)) &osi3::CameraDetectionSpecificHeader::MergeFrom, "C++: osi3::CameraDetectionSpecificHeader::MergeFrom(const class osi3::CameraDetectionSpecificHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::CameraDetectionSpecificHeader::*)()) &osi3::CameraDetectionSpecificHeader::Clear, "C++: osi3::CameraDetectionSpecificHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::IsInitialized, "C++: osi3::CameraDetectionSpecificHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::ByteSizeLong, "C++: osi3::CameraDetectionSpecificHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::CameraDetectionSpecificHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::CameraDetectionSpecificHeader::_InternalParse, "C++: osi3::CameraDetectionSpecificHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::CameraDetectionSpecificHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::CameraDetectionSpecificHeader::_InternalSerialize, "C++: osi3::CameraDetectionSpecificHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::GetCachedSize, "C++: osi3::CameraDetectionSpecificHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::GetMetadata, "C++: osi3::CameraDetectionSpecificHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def("clear_number_of_valid_points", (void (osi3::CameraDetectionSpecificHeader::*)()) &osi3::CameraDetectionSpecificHeader::clear_number_of_valid_points, "C++: osi3::CameraDetectionSpecificHeader::clear_number_of_valid_points() --> void");
		cl.def("number_of_valid_points", (unsigned int (osi3::CameraDetectionSpecificHeader::*)() const) &osi3::CameraDetectionSpecificHeader::number_of_valid_points, "C++: osi3::CameraDetectionSpecificHeader::number_of_valid_points() const --> unsigned int");
		cl.def("set_number_of_valid_points", (void (osi3::CameraDetectionSpecificHeader::*)(unsigned int)) &osi3::CameraDetectionSpecificHeader::set_number_of_valid_points, "C++: osi3::CameraDetectionSpecificHeader::set_number_of_valid_points(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_46.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_46(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B471_[osi3::LogicalDetectionDataHeader_DataQualifier] ";
	// osi3::LogicalDetectionDataHeader_DataQualifier file: line:78
	pybind11::enum_<osi3::LogicalDetectionDataHeader_DataQualifier>(M("osi3"), "LogicalDetectionDataHeader_DataQualifier", pybind11::arithmetic(), "")
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_OTHER", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_OTHER)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE)
		.value("LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_INVALID", osi3::LogicalDetectionDataHeader_DataQualifier_DATA_QUALIFIER_INVALID)
		.value("LogicalDetectionDataHeader_DataQualifier_LogicalDetectionDataHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::LogicalDetectionDataHeader_DataQualifier_LogicalDetectionDataHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("LogicalDetectionDataHeader_DataQualifier_LogicalDetectionDataHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::LogicalDetectionDataHeader_DataQualifier_LogicalDetectionDataHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B472_[bool osi3::LogicalDetectionDataHeader_DataQualifier_IsValid(int)] ";
	std::cout << "B473_[const class google::protobuf::EnumDescriptor * osi3::LogicalDetectionDataHeader_DataQualifier_descriptor()] ";
	std::cout << "B474_[bool osi3::LogicalDetectionDataHeader_DataQualifier_Parse(const std::string &, enum osi3::LogicalDetectionDataHeader_DataQualifier *)] ";
	std::cout << "B475_[osi3::LogicalDetectionClassification] ";
	std::cout << "B476_[bool osi3::LogicalDetectionClassification_IsValid(int)] ";
	std::cout << "B477_[const class google::protobuf::EnumDescriptor * osi3::LogicalDetectionClassification_descriptor()] ";
	std::cout << "B478_[bool osi3::LogicalDetectionClassification_Parse(const std::string &, enum osi3::LogicalDetectionClassification *)] ";
	std::cout << "B479_[osi3::LogicalDetectionData] ";
	std::cout << "B480_[void osi3::swap(class osi3::LogicalDetectionData &, class osi3::LogicalDetectionData &)] ";
	std::cout << "B481_[osi3::LogicalDetectionDataHeader] ";
	{ // osi3::LogicalDetectionDataHeader file: line:326
		pybind11::class_<osi3::LogicalDetectionDataHeader, std::shared_ptr<osi3::LogicalDetectionDataHeader>, google::protobuf::Message> cl(M("osi3"), "LogicalDetectionDataHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::LogicalDetectionDataHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::LogicalDetectionDataHeader const &o){ return new osi3::LogicalDetectionDataHeader(o); } ) );
		cl.def("assign", (class osi3::LogicalDetectionDataHeader & (osi3::LogicalDetectionDataHeader::*)(const class osi3::LogicalDetectionDataHeader &)) &osi3::LogicalDetectionDataHeader::operator=, "C++: osi3::LogicalDetectionDataHeader::operator=(const class osi3::LogicalDetectionDataHeader &) --> class osi3::LogicalDetectionDataHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LogicalDetectionDataHeader::descriptor, "C++: osi3::LogicalDetectionDataHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::LogicalDetectionDataHeader::GetDescriptor, "C++: osi3::LogicalDetectionDataHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::LogicalDetectionDataHeader::GetReflection, "C++: osi3::LogicalDetectionDataHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::LogicalDetectionDataHeader & (*)()) &osi3::LogicalDetectionDataHeader::default_instance, "C++: osi3::LogicalDetectionDataHeader::default_instance() --> const class osi3::LogicalDetectionDataHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::LogicalDetectionDataHeader * (*)()) &osi3::LogicalDetectionDataHeader::internal_default_instance, "C++: osi3::LogicalDetectionDataHeader::internal_default_instance() --> const class osi3::LogicalDetectionDataHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::LogicalDetectionDataHeader::*)(class osi3::LogicalDetectionDataHeader *)) &osi3::LogicalDetectionDataHeader::Swap, "C++: osi3::LogicalDetectionDataHeader::Swap(class osi3::LogicalDetectionDataHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::LogicalDetectionDataHeader::*)(class osi3::LogicalDetectionDataHeader *)) &osi3::LogicalDetectionDataHeader::UnsafeArenaSwap, "C++: osi3::LogicalDetectionDataHeader::UnsafeArenaSwap(class osi3::LogicalDetectionDataHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::LogicalDetectionDataHeader * (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::New, "C++: osi3::LogicalDetectionDataHeader::New() const --> class osi3::LogicalDetectionDataHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::LogicalDetectionDataHeader * (osi3::LogicalDetectionDataHeader::*)(class google::protobuf::Arena *) const) &osi3::LogicalDetectionDataHeader::New, "C++: osi3::LogicalDetectionDataHeader::New(class google::protobuf::Arena *) const --> class osi3::LogicalDetectionDataHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::LogicalDetectionDataHeader::*)(const class google::protobuf::Message &)) &osi3::LogicalDetectionDataHeader::CopyFrom, "C++: osi3::LogicalDetectionDataHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LogicalDetectionDataHeader::*)(const class google::protobuf::Message &)) &osi3::LogicalDetectionDataHeader::MergeFrom, "C++: osi3::LogicalDetectionDataHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::LogicalDetectionDataHeader::*)(const class osi3::LogicalDetectionDataHeader &)) &osi3::LogicalDetectionDataHeader::CopyFrom, "C++: osi3::LogicalDetectionDataHeader::CopyFrom(const class osi3::LogicalDetectionDataHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::LogicalDetectionDataHeader::*)(const class osi3::LogicalDetectionDataHeader &)) &osi3::LogicalDetectionDataHeader::MergeFrom, "C++: osi3::LogicalDetectionDataHeader::MergeFrom(const class osi3::LogicalDetectionDataHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::Clear, "C++: osi3::LogicalDetectionDataHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::IsInitialized, "C++: osi3::LogicalDetectionDataHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::ByteSizeLong, "C++: osi3::LogicalDetectionDataHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::LogicalDetectionDataHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::LogicalDetectionDataHeader::_InternalParse, "C++: osi3::LogicalDetectionDataHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::LogicalDetectionDataHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::LogicalDetectionDataHeader::_InternalSerialize, "C++: osi3::LogicalDetectionDataHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::GetCachedSize, "C++: osi3::LogicalDetectionDataHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::GetMetadata, "C++: osi3::LogicalDetectionDataHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("DataQualifier_IsValid", (bool (*)(int)) &osi3::LogicalDetectionDataHeader::DataQualifier_IsValid, "C++: osi3::LogicalDetectionDataHeader::DataQualifier_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("DataQualifier_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::LogicalDetectionDataHeader::DataQualifier_descriptor, "C++: osi3::LogicalDetectionDataHeader::DataQualifier_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("DataQualifier_Parse", (bool (*)(const std::string &, enum osi3::LogicalDetectionDataHeader_DataQualifier *)) &osi3::LogicalDetectionDataHeader::DataQualifier_Parse, "C++: osi3::LogicalDetectionDataHeader::DataQualifier_Parse(const std::string &, enum osi3::LogicalDetectionDataHeader_DataQualifier *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("sensor_id_size", (int (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::sensor_id_size, "C++: osi3::LogicalDetectionDataHeader::sensor_id_size() const --> int");
		cl.def("clear_sensor_id", (void (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::clear_sensor_id, "C++: osi3::LogicalDetectionDataHeader::clear_sensor_id() --> void");
		cl.def("mutable_sensor_id", (class osi3::Identifier * (osi3::LogicalDetectionDataHeader::*)(int)) &osi3::LogicalDetectionDataHeader::mutable_sensor_id, "C++: osi3::LogicalDetectionDataHeader::mutable_sensor_id(int) --> class osi3::Identifier *", pybind11::return_value_policy::reference, pybind11::arg("index"));
		cl.def("mutable_sensor_id", (class google::protobuf::RepeatedPtrField<class osi3::Identifier> * (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::mutable_sensor_id, "C++: osi3::LogicalDetectionDataHeader::mutable_sensor_id() --> class google::protobuf::RepeatedPtrField<class osi3::Identifier> *", pybind11::return_value_policy::reference);
		cl.def("sensor_id", (const class osi3::Identifier & (osi3::LogicalDetectionDataHeader::*)(int) const) &osi3::LogicalDetectionDataHeader::sensor_id, "C++: osi3::LogicalDetectionDataHeader::sensor_id(int) const --> const class osi3::Identifier &", pybind11::return_value_policy::automatic, pybind11::arg("index"));
		cl.def("add_sensor_id", (class osi3::Identifier * (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::add_sensor_id, "C++: osi3::LogicalDetectionDataHeader::add_sensor_id() --> class osi3::Identifier *", pybind11::return_value_policy::reference);
		cl.def("sensor_id", (const class google::protobuf::RepeatedPtrField<class osi3::Identifier> & (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::sensor_id, "C++: osi3::LogicalDetectionDataHeader::sensor_id() const --> const class google::protobuf::RepeatedPtrField<class osi3::Identifier> &", pybind11::return_value_policy::automatic);
		cl.def("has_logical_detection_time", (bool (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::has_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::has_logical_detection_time() const --> bool");
		cl.def("clear_logical_detection_time", (void (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::clear_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::clear_logical_detection_time() --> void");
		cl.def("logical_detection_time", (const class osi3::Timestamp & (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::logical_detection_time() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_logical_detection_time", (class osi3::Timestamp * (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::release_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::release_logical_detection_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_logical_detection_time", (class osi3::Timestamp * (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::mutable_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::mutable_logical_detection_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_logical_detection_time", (void (osi3::LogicalDetectionDataHeader::*)(class osi3::Timestamp *)) &osi3::LogicalDetectionDataHeader::set_allocated_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::set_allocated_logical_detection_time(class osi3::Timestamp *) --> void", pybind11::arg("logical_detection_time"));
		cl.def("unsafe_arena_set_allocated_logical_detection_time", (void (osi3::LogicalDetectionDataHeader::*)(class osi3::Timestamp *)) &osi3::LogicalDetectionDataHeader::unsafe_arena_set_allocated_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::unsafe_arena_set_allocated_logical_detection_time(class osi3::Timestamp *) --> void", pybind11::arg("logical_detection_time"));
		cl.def("unsafe_arena_release_logical_detection_time", (class osi3::Timestamp * (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::unsafe_arena_release_logical_detection_time, "C++: osi3::LogicalDetectionDataHeader::unsafe_arena_release_logical_detection_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("clear_data_qualifier", (void (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::clear_data_qualifier, "C++: osi3::LogicalDetectionDataHeader::clear_data_qualifier() --> void");
		cl.def("data_qualifier", (enum osi3::LogicalDetectionDataHeader_DataQualifier (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::data_qualifier, "C++: osi3::LogicalDetectionDataHeader::data_qualifier() const --> enum osi3::LogicalDetectionDataHeader_DataQualifier");
		cl.def("set_data_qualifier", (void (osi3::LogicalDetectionDataHeader::*)(enum osi3::LogicalDetectionDataHeader_DataQualifier)) &osi3::LogicalDetectionDataHeader::set_data_qualifier, "C++: osi3::LogicalDetectionDataHeader::set_data_qualifier(enum osi3::LogicalDetectionDataHeader_DataQualifier) --> void", pybind11::arg("value"));
		cl.def("clear_number_of_valid_logical_detections", (void (osi3::LogicalDetectionDataHeader::*)()) &osi3::LogicalDetectionDataHeader::clear_number_of_valid_logical_detections, "C++: osi3::LogicalDetectionDataHeader::clear_number_of_valid_logical_detections() --> void");
		cl.def("number_of_valid_logical_detections", (unsigned int (osi3::LogicalDetectionDataHeader::*)() const) &osi3::LogicalDetectionDataHeader::number_of_valid_logical_detections, "C++: osi3::LogicalDetectionDataHeader::number_of_valid_logical_detections() const --> unsigned int");
		cl.def("set_number_of_valid_logical_detections", (void (osi3::LogicalDetectionDataHeader::*)(unsigned int)) &osi3::LogicalDetectionDataHeader::set_number_of_valid_logical_detections, "C++: osi3::LogicalDetectionDataHeader::set_number_of_valid_logical_detections(unsigned int) --> void", pybind11::arg("value"));
	}
}


// File: unknown/unknown_47.cpp
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/arena.h> // google::protobuf::ArenaOptions
#include <google/protobuf/descriptor.h> // 
#include <google/protobuf/descriptor.h> // google::protobuf::DebugStringOptions
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.h> // google::protobuf::DescriptorPool
#include <google/protobuf/descriptor.h> // google::protobuf::EnumDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::EnumValueDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FieldDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::FileDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::OneofDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::ServiceDescriptor
#include <google/protobuf/descriptor.h> // google::protobuf::SourceLocation
#include <google/protobuf/descriptor.pb.h> // google::protobuf::DescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumDescriptorProto_EnumReservedRange
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileDescriptorProto
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/descriptor.pb.h> // google::protobuf::UninterpretedOption
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::MessageFactory
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::MessageLite
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedField
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <memory> // std::allocator
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_47(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B482_[osi3::DetectedEntityHeader_DataQualifier] ";
	// osi3::DetectedEntityHeader_DataQualifier file: line:83
	pybind11::enum_<osi3::DetectedEntityHeader_DataQualifier>(M("osi3"), "DetectedEntityHeader_DataQualifier", pybind11::arithmetic(), "")
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_UNKNOWN)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_OTHER", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_OTHER)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_AVAILABLE_REDUCED)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_NOT_AVAILABLE)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_BLINDNESS)
		.value("DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE", osi3::DetectedEntityHeader_DataQualifier_DATA_QUALIFIER_TEMPORARY_AVAILABLE)
		.value("DetectedEntityHeader_DataQualifier_DetectedEntityHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_", osi3::DetectedEntityHeader_DataQualifier_DetectedEntityHeader_DataQualifier_INT_MIN_SENTINEL_DO_NOT_USE_)
		.value("DetectedEntityHeader_DataQualifier_DetectedEntityHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_", osi3::DetectedEntityHeader_DataQualifier_DetectedEntityHeader_DataQualifier_INT_MAX_SENTINEL_DO_NOT_USE_)
		.export_values();

;

	std::cout << "B483_[bool osi3::DetectedEntityHeader_DataQualifier_IsValid(int)] ";
	std::cout << "B484_[const class google::protobuf::EnumDescriptor * osi3::DetectedEntityHeader_DataQualifier_descriptor()] ";
	std::cout << "B485_[bool osi3::DetectedEntityHeader_DataQualifier_Parse(const std::string &, enum osi3::DetectedEntityHeader_DataQualifier *)] ";
	std::cout << "B486_[osi3::DetectedEntityHeader] ";
	{ // osi3::DetectedEntityHeader file: line:115
		pybind11::class_<osi3::DetectedEntityHeader, std::shared_ptr<osi3::DetectedEntityHeader>, google::protobuf::Message> cl(M("osi3"), "DetectedEntityHeader", "");
		cl.def( pybind11::init( [](){ return new osi3::DetectedEntityHeader(); } ) );
		cl.def( pybind11::init<struct google::protobuf::internal::ConstantInitialized>(), pybind11::arg("") );

		cl.def( pybind11::init( [](osi3::DetectedEntityHeader const &o){ return new osi3::DetectedEntityHeader(o); } ) );
		cl.def("assign", (class osi3::DetectedEntityHeader & (osi3::DetectedEntityHeader::*)(const class osi3::DetectedEntityHeader &)) &osi3::DetectedEntityHeader::operator=, "C++: osi3::DetectedEntityHeader::operator=(const class osi3::DetectedEntityHeader &) --> class osi3::DetectedEntityHeader &", pybind11::return_value_policy::automatic, pybind11::arg("from"));
		cl.def_static("descriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedEntityHeader::descriptor, "C++: osi3::DetectedEntityHeader::descriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetDescriptor", (const class google::protobuf::Descriptor * (*)()) &osi3::DetectedEntityHeader::GetDescriptor, "C++: osi3::DetectedEntityHeader::GetDescriptor() --> const class google::protobuf::Descriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("GetReflection", (const class google::protobuf::Reflection * (*)()) &osi3::DetectedEntityHeader::GetReflection, "C++: osi3::DetectedEntityHeader::GetReflection() --> const class google::protobuf::Reflection *", pybind11::return_value_policy::automatic);
		cl.def_static("default_instance", (const class osi3::DetectedEntityHeader & (*)()) &osi3::DetectedEntityHeader::default_instance, "C++: osi3::DetectedEntityHeader::default_instance() --> const class osi3::DetectedEntityHeader &", pybind11::return_value_policy::automatic);
		cl.def_static("internal_default_instance", (const class osi3::DetectedEntityHeader * (*)()) &osi3::DetectedEntityHeader::internal_default_instance, "C++: osi3::DetectedEntityHeader::internal_default_instance() --> const class osi3::DetectedEntityHeader *", pybind11::return_value_policy::automatic);
		cl.def("Swap", (void (osi3::DetectedEntityHeader::*)(class osi3::DetectedEntityHeader *)) &osi3::DetectedEntityHeader::Swap, "C++: osi3::DetectedEntityHeader::Swap(class osi3::DetectedEntityHeader *) --> void", pybind11::arg("other"));
		cl.def("UnsafeArenaSwap", (void (osi3::DetectedEntityHeader::*)(class osi3::DetectedEntityHeader *)) &osi3::DetectedEntityHeader::UnsafeArenaSwap, "C++: osi3::DetectedEntityHeader::UnsafeArenaSwap(class osi3::DetectedEntityHeader *) --> void", pybind11::arg("other"));
		cl.def("New", (class osi3::DetectedEntityHeader * (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::New, "C++: osi3::DetectedEntityHeader::New() const --> class osi3::DetectedEntityHeader *", pybind11::return_value_policy::reference);
		cl.def("New", (class osi3::DetectedEntityHeader * (osi3::DetectedEntityHeader::*)(class google::protobuf::Arena *) const) &osi3::DetectedEntityHeader::New, "C++: osi3::DetectedEntityHeader::New(class google::protobuf::Arena *) const --> class osi3::DetectedEntityHeader *", pybind11::return_value_policy::reference, pybind11::arg("arena"));
		cl.def("CopyFrom", (void (osi3::DetectedEntityHeader::*)(const class google::protobuf::Message &)) &osi3::DetectedEntityHeader::CopyFrom, "C++: osi3::DetectedEntityHeader::CopyFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedEntityHeader::*)(const class google::protobuf::Message &)) &osi3::DetectedEntityHeader::MergeFrom, "C++: osi3::DetectedEntityHeader::MergeFrom(const class google::protobuf::Message &) --> void", pybind11::arg("from"));
		cl.def("CopyFrom", (void (osi3::DetectedEntityHeader::*)(const class osi3::DetectedEntityHeader &)) &osi3::DetectedEntityHeader::CopyFrom, "C++: osi3::DetectedEntityHeader::CopyFrom(const class osi3::DetectedEntityHeader &) --> void", pybind11::arg("from"));
		cl.def("MergeFrom", (void (osi3::DetectedEntityHeader::*)(const class osi3::DetectedEntityHeader &)) &osi3::DetectedEntityHeader::MergeFrom, "C++: osi3::DetectedEntityHeader::MergeFrom(const class osi3::DetectedEntityHeader &) --> void", pybind11::arg("from"));
		cl.def("Clear", (void (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::Clear, "C++: osi3::DetectedEntityHeader::Clear() --> void");
		cl.def("IsInitialized", (bool (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::IsInitialized, "C++: osi3::DetectedEntityHeader::IsInitialized() const --> bool");
		cl.def("ByteSizeLong", (unsigned long (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::ByteSizeLong, "C++: osi3::DetectedEntityHeader::ByteSizeLong() const --> unsigned long");
		cl.def("_InternalParse", (const char * (osi3::DetectedEntityHeader::*)(const char *, class google::protobuf::internal::ParseContext *)) &osi3::DetectedEntityHeader::_InternalParse, "C++: osi3::DetectedEntityHeader::_InternalParse(const char *, class google::protobuf::internal::ParseContext *) --> const char *", pybind11::return_value_policy::reference, pybind11::arg("ptr"), pybind11::arg("ctx"));
		cl.def("_InternalSerialize", (unsigned char * (osi3::DetectedEntityHeader::*)(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const) &osi3::DetectedEntityHeader::_InternalSerialize, "C++: osi3::DetectedEntityHeader::_InternalSerialize(unsigned char *, class google::protobuf::io::EpsCopyOutputStream *) const --> unsigned char *", pybind11::return_value_policy::reference, pybind11::arg("target"), pybind11::arg("stream"));
		cl.def("GetCachedSize", (int (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::GetCachedSize, "C++: osi3::DetectedEntityHeader::GetCachedSize() const --> int");
		cl.def("GetMetadata", (struct google::protobuf::Metadata (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::GetMetadata, "C++: osi3::DetectedEntityHeader::GetMetadata() const --> struct google::protobuf::Metadata");
		cl.def_static("DataQualifier_IsValid", (bool (*)(int)) &osi3::DetectedEntityHeader::DataQualifier_IsValid, "C++: osi3::DetectedEntityHeader::DataQualifier_IsValid(int) --> bool", pybind11::arg("value"));
		cl.def_static("DataQualifier_descriptor", (const class google::protobuf::EnumDescriptor * (*)()) &osi3::DetectedEntityHeader::DataQualifier_descriptor, "C++: osi3::DetectedEntityHeader::DataQualifier_descriptor() --> const class google::protobuf::EnumDescriptor *", pybind11::return_value_policy::automatic);
		cl.def_static("DataQualifier_Parse", (bool (*)(const std::string &, enum osi3::DetectedEntityHeader_DataQualifier *)) &osi3::DetectedEntityHeader::DataQualifier_Parse, "C++: osi3::DetectedEntityHeader::DataQualifier_Parse(const std::string &, enum osi3::DetectedEntityHeader_DataQualifier *) --> bool", pybind11::arg("name"), pybind11::arg("value"));
		cl.def("has_measurement_time", (bool (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::has_measurement_time, "C++: osi3::DetectedEntityHeader::has_measurement_time() const --> bool");
		cl.def("clear_measurement_time", (void (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::clear_measurement_time, "C++: osi3::DetectedEntityHeader::clear_measurement_time() --> void");
		cl.def("measurement_time", (const class osi3::Timestamp & (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::measurement_time, "C++: osi3::DetectedEntityHeader::measurement_time() const --> const class osi3::Timestamp &", pybind11::return_value_policy::automatic);
		cl.def("release_measurement_time", (class osi3::Timestamp * (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::release_measurement_time, "C++: osi3::DetectedEntityHeader::release_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("mutable_measurement_time", (class osi3::Timestamp * (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::mutable_measurement_time, "C++: osi3::DetectedEntityHeader::mutable_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("set_allocated_measurement_time", (void (osi3::DetectedEntityHeader::*)(class osi3::Timestamp *)) &osi3::DetectedEntityHeader::set_allocated_measurement_time, "C++: osi3::DetectedEntityHeader::set_allocated_measurement_time(class osi3::Timestamp *) --> void", pybind11::arg("measurement_time"));
		cl.def("unsafe_arena_set_allocated_measurement_time", (void (osi3::DetectedEntityHeader::*)(class osi3::Timestamp *)) &osi3::DetectedEntityHeader::unsafe_arena_set_allocated_measurement_time, "C++: osi3::DetectedEntityHeader::unsafe_arena_set_allocated_measurement_time(class osi3::Timestamp *) --> void", pybind11::arg("measurement_time"));
		cl.def("unsafe_arena_release_measurement_time", (class osi3::Timestamp * (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::unsafe_arena_release_measurement_time, "C++: osi3::DetectedEntityHeader::unsafe_arena_release_measurement_time() --> class osi3::Timestamp *", pybind11::return_value_policy::reference);
		cl.def("clear_cycle_counter", (void (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::clear_cycle_counter, "C++: osi3::DetectedEntityHeader::clear_cycle_counter() --> void");
		cl.def("cycle_counter", (unsigned long (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::cycle_counter, "C++: osi3::DetectedEntityHeader::cycle_counter() const --> unsigned long");
		cl.def("set_cycle_counter", (void (osi3::DetectedEntityHeader::*)(unsigned long)) &osi3::DetectedEntityHeader::set_cycle_counter, "C++: osi3::DetectedEntityHeader::set_cycle_counter(unsigned long) --> void", pybind11::arg("value"));
		cl.def("clear_data_qualifier", (void (osi3::DetectedEntityHeader::*)()) &osi3::DetectedEntityHeader::clear_data_qualifier, "C++: osi3::DetectedEntityHeader::clear_data_qualifier() --> void");
		cl.def("data_qualifier", (enum osi3::DetectedEntityHeader_DataQualifier (osi3::DetectedEntityHeader::*)() const) &osi3::DetectedEntityHeader::data_qualifier, "C++: osi3::DetectedEntityHeader::data_qualifier() const --> enum osi3::DetectedEntityHeader_DataQualifier");
		cl.def("set_data_qualifier", (void (osi3::DetectedEntityHeader::*)(enum osi3::DetectedEntityHeader_DataQualifier)) &osi3::DetectedEntityHeader::set_data_qualifier, "C++: osi3::DetectedEntityHeader::set_data_qualifier(enum osi3::DetectedEntityHeader_DataQualifier) --> void", pybind11::arg("value"));
	}
	std::cout << "B487_[void osi3::swap(class osi3::DetectedEntityHeader &, class osi3::DetectedEntityHeader &)] ";
	std::cout << "B488_[osi3::SensorData] ";
	std::cout << "B489_[void osi3::swap(class osi3::SensorData &, class osi3::SensorData &)] ";
}


// File: unknown/unknown_48.cpp
#include <functional> // std::less
#include <google/protobuf/arena.h> // google::protobuf::Arena
#include <google/protobuf/descriptor.h> // google::protobuf::Descriptor
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::EnumValueOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ExtensionRangeOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FieldOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::FileOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MessageOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::MethodOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::OneofOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::ServiceOptions
#include <google/protobuf/descriptor.pb.h> // google::protobuf::SourceCodeInfo
#include <google/protobuf/implicit_weak_message.h> // google::protobuf::internal::ImplicitWeakMessage
#include <google/protobuf/io/coded_stream.h> // google::protobuf::io::EpsCopyOutputStream
#include <google/protobuf/message.h> // google::protobuf::Message
#include <google/protobuf/message.h> // google::protobuf::Metadata
#include <google/protobuf/message.h> // google::protobuf::Reflection
#include <google/protobuf/message_lite.h> // google::protobuf::internal::ConstantInitialized
#include <google/protobuf/metadata_lite.h> // google::protobuf::internal::InternalMetadata
#include <google/protobuf/parse_context.h> // google::protobuf::internal::ParseContext
#include <google/protobuf/repeated_field.h> // google::protobuf::RepeatedPtrField
#include <google/protobuf/unknown_field_set.h> // google::protobuf::UnknownFieldSet
#include <iostream> // --trace
#include <iterator> // __gnu_cxx::__normal_iterator
#include <map> // std::map
#include <memory> // std::allocator
#include <osg/ApplicationUsage> // 
#include <osg/ApplicationUsage> // osg::ApplicationUsage
#include <osg/ArgumentParser> // 
#include <osg/ArgumentParser> // osg::ArgumentParser
#include <osg/Array> // 
#include <osg/Array> // osg::TemplateArray
#include <osg/Billboard> // osg::Billboard
#include <osg/BoundingBox> // osg::BoundingBoxImpl
#include <osg/BoundingSphere> // osg::BoundingSphereImpl
#include <osg/Callback> // osg::Callback
#include <osg/Camera> // osg::Camera
#include <osg/ClearNode> // osg::ClearNode
#include <osg/CoordinateSystemNode> // osg::CoordinateSystemNode
#include <osg/CopyOp> // osg::CopyOp
#include <osg/CullStack> // osg::CullStack
#include <osg/Drawable> // osg::Drawable
#include <osg/FrameStamp> // osg::FrameStamp
#include <osg/Geode> // osg::Geode
#include <osg/Geometry> // osg::Geometry
#include <osg/Group> // osg::Group
#include <osg/LOD> // osg::LOD
#include <osg/LightSource> // osg::LightSource
#include <osg/MatrixTransform> // osg::MatrixTransform
#include <osg/Node> // osg::Node
#include <osg/NodeVisitor> // 
#include <osg/NodeVisitor> // osg::NodeVisitor
#include <osg/Object> // osg::Object
#include <osg/OccluderNode> // osg::OccluderNode
#include <osg/PagedLOD> // osg::PagedLOD
#include <osg/PositionAttitudeTransform> // osg::PositionAttitudeTransform
#include <osg/Projection> // osg::Projection
#include <osg/State> // osg::State
#include <osg/StateSet> // osg::StateSet
#include <osg/Stats> // osg::Stats
#include <osg/Switch> // osg::Switch
#include <osg/Transform> // osg::Transform
#include <osg/ValueMap> // osg::ValueMap
#include <osg/ValueStack> // osg::ValueStack
#include <osg/Vec2f> // osg::Vec2f
#include <osg/Vec3f> // osg::Vec3f
#include <osg/Vec4f> // osg::Vec4f
#include <osg/View> // osg::View
#include <osg/observer_ptr> // osg::observer_ptr
#include <osg/ref_ptr> // osg::ref_ptr
#include <osgGA/EventVisitor> // osgGA::EventVisitor
#include <osgUtil/CullVisitor> // osgUtil::CullVisitor
#include <osgUtil/IntersectionVisitor> // osgUtil::IntersectionVisitor
#include <osgUtil/UpdateVisitor> // osgUtil::UpdateVisitor
#include <osgViewer/GraphicsWindow> // osgViewer::GraphicsWindowEmbedded
#include <osgViewer/Viewer> // osgViewer::Viewer
#include <ostream> // std::basic_ostream
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <utility> // std::pair
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

// viewer::EntityModel file: line:230
struct PyCallBack_viewer_EntityModel : public viewer::EntityModel {
	using viewer::EntityModel::EntityModel;

	enum viewer::EntityModel::EntityType GetType() override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const viewer::EntityModel *>(this), "GetType");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<enum viewer::EntityModel::EntityType>::value) {
				static pybind11::detail::override_caster_t<enum viewer::EntityModel::EntityType> caster;
				return pybind11::detail::cast_ref<enum viewer::EntityModel::EntityType>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<enum viewer::EntityModel::EntityType>(std::move(o));
		}
		return EntityModel::GetType();
	}
};

// viewer::CarModel file: line:271
struct PyCallBack_viewer_CarModel : public viewer::CarModel {
	using viewer::CarModel::CarModel;

	enum viewer::EntityModel::EntityType GetType() override {
		pybind11::gil_scoped_acquire gil;
		pybind11::function overload = pybind11::get_overload(static_cast<const viewer::CarModel *>(this), "GetType");
		if (overload) {
			auto o = overload.operator()<pybind11::return_value_policy::reference>();
			if (pybind11::detail::cast_is_temporary_value_reference<enum viewer::EntityModel::EntityType>::value) {
				static pybind11::detail::override_caster_t<enum viewer::EntityModel::EntityType> caster;
				return pybind11::detail::cast_ref<enum viewer::EntityModel::EntityType>(std::move(o), caster);
			}
			else return pybind11::detail::cast_safe<enum viewer::EntityModel::EntityType>(std::move(o));
		}
		return CarModel::GetType();
	}
};

// viewer::VisibilityCallback file: line:292
struct PyCallBack_viewer_VisibilityCallback : public viewer::VisibilityCallback {
	using viewer::VisibilityCallback::VisibilityCallback;

};

void bind_unknown_unknown_48(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B490_[viewer::PolyLine] ";
	{ // viewer::PolyLine file: line:65
		pybind11::class_<viewer::PolyLine, std::shared_ptr<viewer::PolyLine>> cl(M("viewer"), "PolyLine", "");
		cl.def( pybind11::init( [](viewer::PolyLine const &o){ return new viewer::PolyLine(o); } ) );
		cl.def_readwrite("pline_vertex_data_", &viewer::PolyLine::pline_vertex_data_);
		cl.def_readwrite("color_", &viewer::PolyLine::color_);
		cl.def_readwrite("pline_geom_", &viewer::PolyLine::pline_geom_);
		cl.def_readwrite("dots_geom_", &viewer::PolyLine::dots_geom_);
		cl.def_readwrite("dot3D_shape_", &viewer::PolyLine::dot3D_shape_);
		cl.def_readwrite("dot3D_geode_", &viewer::PolyLine::dot3D_geode_);
		cl.def_readwrite("dots3D_group_", &viewer::PolyLine::dots3D_group_);
		cl.def("Update", (void (viewer::PolyLine::*)()) &viewer::PolyLine::Update, "C++: viewer::PolyLine::Update() --> void");
		cl.def("Redraw", (void (viewer::PolyLine::*)()) &viewer::PolyLine::Redraw, "C++: viewer::PolyLine::Redraw() --> void");
		cl.def("SetNodeMaskLines", (void (viewer::PolyLine::*)(int)) &viewer::PolyLine::SetNodeMaskLines, "C++: viewer::PolyLine::SetNodeMaskLines(int) --> void", pybind11::arg("nodemask"));
		cl.def("SetNodeMaskDots", (void (viewer::PolyLine::*)(int)) &viewer::PolyLine::SetNodeMaskDots, "C++: viewer::PolyLine::SetNodeMaskDots(int) --> void", pybind11::arg("nodemask"));
	}
	std::cout << "B491_[viewer::SensorViewFrustum] ";
	{ // viewer::SensorViewFrustum file: line:124
		pybind11::class_<viewer::SensorViewFrustum, std::shared_ptr<viewer::SensorViewFrustum>> cl(M("viewer"), "SensorViewFrustum", "");
		cl.def( pybind11::init( [](viewer::SensorViewFrustum const &o){ return new viewer::SensorViewFrustum(o); } ) );
		cl.def_readwrite("txNode_", &viewer::SensorViewFrustum::txNode_);
		cl.def_readwrite("line_group_", &viewer::SensorViewFrustum::line_group_);
		cl.def_readwrite("plines_", &viewer::SensorViewFrustum::plines_);
		cl.def("Update", (void (viewer::SensorViewFrustum::*)()) &viewer::SensorViewFrustum::Update, "C++: viewer::SensorViewFrustum::Update() --> void");
	}
	std::cout << "B492_[viewer::OSIDetectedPoint] ";
	{ // viewer::OSIDetectedPoint file: line:137
		pybind11::class_<viewer::OSIDetectedPoint, std::shared_ptr<viewer::OSIDetectedPoint>> cl(M("viewer"), "OSIDetectedPoint", "");
		cl.def( pybind11::init( [](viewer::OSIDetectedPoint const &o){ return new viewer::OSIDetectedPoint(o); } ) );
		cl.def_readwrite("parent_", &viewer::OSIDetectedPoint::parent_);
		cl.def_readwrite("osi_detection_geom_", &viewer::OSIDetectedPoint::osi_detection_geom_);
		cl.def_readwrite("osi_detection_points_", &viewer::OSIDetectedPoint::osi_detection_points_);
		cl.def_readwrite("osi_detection_color_", &viewer::OSIDetectedPoint::osi_detection_color_);
		cl.def_readwrite("showing_", &viewer::OSIDetectedPoint::showing_);
		cl.def("Show", (void (viewer::OSIDetectedPoint::*)()) &viewer::OSIDetectedPoint::Show, "C++: viewer::OSIDetectedPoint::Show() --> void");
		cl.def("Hide", (void (viewer::OSIDetectedPoint::*)()) &viewer::OSIDetectedPoint::Hide, "C++: viewer::OSIDetectedPoint::Hide() --> void");
	}
	std::cout << "B493_[viewer::OSIDetectedCar] ";
	{ // viewer::OSIDetectedCar file: line:153
		pybind11::class_<viewer::OSIDetectedCar, std::shared_ptr<viewer::OSIDetectedCar>> cl(M("viewer"), "OSIDetectedCar", "");
		cl.def( pybind11::init( [](viewer::OSIDetectedCar const &o){ return new viewer::OSIDetectedCar(o); } ) );
		cl.def_readwrite("parent_", &viewer::OSIDetectedCar::parent_);
		cl.def_readwrite("car_", &viewer::OSIDetectedCar::car_);
		cl.def_readwrite("osi_detection_geode_box_", &viewer::OSIDetectedCar::osi_detection_geode_box_);
		cl.def_readwrite("osi_detection_geode_center_", &viewer::OSIDetectedCar::osi_detection_geode_center_);
		cl.def_readwrite("osi_detection_tx_", &viewer::OSIDetectedCar::osi_detection_tx_);
		cl.def_readwrite("bb_dimensions_", &viewer::OSIDetectedCar::bb_dimensions_);
		cl.def_readwrite("showing_", &viewer::OSIDetectedCar::showing_);
		cl.def("Show", (void (viewer::OSIDetectedCar::*)()) &viewer::OSIDetectedCar::Show, "C++: viewer::OSIDetectedCar::Show() --> void");
		cl.def("Hide", (void (viewer::OSIDetectedCar::*)()) &viewer::OSIDetectedCar::Hide, "C++: viewer::OSIDetectedCar::Hide() --> void");
	}
	std::cout << "B494_[viewer::OSISensorDetection] ";
	{ // viewer::OSISensorDetection file: line:171
		pybind11::class_<viewer::OSISensorDetection, std::shared_ptr<viewer::OSISensorDetection>> cl(M("viewer"), "OSISensorDetection", "");
		cl.def( pybind11::init( [](viewer::OSISensorDetection const &o){ return new viewer::OSISensorDetection(o); } ) );
		cl.def_readwrite("parent_", &viewer::OSISensorDetection::parent_);
		cl.def_readwrite("detected_points_group_", &viewer::OSISensorDetection::detected_points_group_);
		cl.def_readwrite("detected_bb_group_", &viewer::OSISensorDetection::detected_bb_group_);
		cl.def_readwrite("detected_points_", &viewer::OSISensorDetection::detected_points_);
		cl.def_readwrite("detected_cars_", &viewer::OSISensorDetection::detected_cars_);
		cl.def("Update", (void (viewer::OSISensorDetection::*)(class osi3::SensorView *)) &viewer::OSISensorDetection::Update, "C++: viewer::OSISensorDetection::Update(class osi3::SensorView *) --> void", pybind11::arg("sv"));
	}
	std::cout << "B495_[viewer::Trajectory] ";
	{ // viewer::Trajectory file: line:186
		pybind11::class_<viewer::Trajectory, std::shared_ptr<viewer::Trajectory>> cl(M("viewer"), "Trajectory", "");
		cl.def( pybind11::init( [](viewer::Trajectory const &o){ return new viewer::Trajectory(o); } ) );
		cl.def_readwrite("vertices_", &viewer::Trajectory::vertices_);
		cl.def("Disable", (void (viewer::Trajectory::*)()) &viewer::Trajectory::Disable, "C++: viewer::Trajectory::Disable() --> void");
	}
	std::cout << "B496_[viewer::PointSensor] ";
	{ // viewer::PointSensor file: line:213
		pybind11::class_<viewer::PointSensor, std::shared_ptr<viewer::PointSensor>> cl(M("viewer"), "PointSensor", "");
		cl.def( pybind11::init( [](){ return new viewer::PointSensor(); } ) );
		cl.def( pybind11::init( [](viewer::PointSensor const &o){ return new viewer::PointSensor(o); } ) );
		cl.def_readwrite("group_", &viewer::PointSensor::group_);
		cl.def_readwrite("ball_", &viewer::PointSensor::ball_);
		cl.def_readwrite("ball_radius_", &viewer::PointSensor::ball_radius_);
		cl.def_readwrite("line_", &viewer::PointSensor::line_);
		cl.def_readwrite("line_vertex_data_", &viewer::PointSensor::line_vertex_data_);
		cl.def_readwrite("pivot_pos", &viewer::PointSensor::pivot_pos);
		cl.def_readwrite("target_pos", &viewer::PointSensor::target_pos);
		cl.def("Show", (void (viewer::PointSensor::*)()) &viewer::PointSensor::Show, "C++: viewer::PointSensor::Show() --> void");
		cl.def("Hide", (void (viewer::PointSensor::*)()) &viewer::PointSensor::Hide, "C++: viewer::PointSensor::Hide() --> void");
	}
	std::cout << "B497_[viewer::EntityModel] ";
	{ // viewer::EntityModel file: line:230
		pybind11::class_<viewer::EntityModel, std::shared_ptr<viewer::EntityModel>, PyCallBack_viewer_EntityModel> cl(M("viewer"), "EntityModel", "");
		cl.def( pybind11::init( [](PyCallBack_viewer_EntityModel const &o){ return new PyCallBack_viewer_EntityModel(o); } ) );
		cl.def( pybind11::init( [](viewer::EntityModel const &o){ return new viewer::EntityModel(o); } ) );

		pybind11::enum_<viewer::EntityModel::EntityType>(cl, "EntityType", "")
			.value("VEHICLE", viewer::EntityModel::EntityType::VEHICLE)
			.value("OTHER", viewer::EntityModel::EntityType::OTHER);

		cl.def_readwrite("group_", &viewer::EntityModel::group_);
		cl.def_readwrite("model_", &viewer::EntityModel::model_);
		cl.def_readwrite("lod_", &viewer::EntityModel::lod_);
		cl.def_readwrite("txNode_", &viewer::EntityModel::txNode_);
		cl.def_readwrite("quat_", &viewer::EntityModel::quat_);
		cl.def_readwrite("parent_", &viewer::EntityModel::parent_);
		cl.def_readwrite("modelBB_", &viewer::EntityModel::modelBB_);
		cl.def_readwrite("name_", &viewer::EntityModel::name_);
		cl.def_readwrite("filename_", &viewer::EntityModel::filename_);
		cl.def_readwrite("blend_color_", &viewer::EntityModel::blend_color_);
		cl.def_readwrite("state_set_", &viewer::EntityModel::state_set_);
		cl.def("GetType", (enum viewer::EntityModel::EntityType (viewer::EntityModel::*)()) &viewer::EntityModel::GetType, "C++: viewer::EntityModel::GetType() --> enum viewer::EntityModel::EntityType");
		cl.def("SetPosition", (void (viewer::EntityModel::*)(double, double, double)) &viewer::EntityModel::SetPosition, "C++: viewer::EntityModel::SetPosition(double, double, double) --> void", pybind11::arg("x"), pybind11::arg("y"), pybind11::arg("z"));
		cl.def("SetRotation", (void (viewer::EntityModel::*)(double, double, double, double)) &viewer::EntityModel::SetRotation, "C++: viewer::EntityModel::SetRotation(double, double, double, double) --> void", pybind11::arg("hRoad"), pybind11::arg("pRoad"), pybind11::arg("hRelative"), pybind11::arg("r"));
		cl.def("SetRotation", (void (viewer::EntityModel::*)(double, double, double)) &viewer::EntityModel::SetRotation, "C++: viewer::EntityModel::SetRotation(double, double, double) --> void", pybind11::arg("h"), pybind11::arg("p"), pybind11::arg("r"));
		cl.def("SetTransparency", (void (viewer::EntityModel::*)(double)) &viewer::EntityModel::SetTransparency, "C++: viewer::EntityModel::SetTransparency(double) --> void", pybind11::arg("factor"));
		cl.def("assign", (class viewer::EntityModel & (viewer::EntityModel::*)(const class viewer::EntityModel &)) &viewer::EntityModel::operator=, "C++: viewer::EntityModel::operator=(const class viewer::EntityModel &) --> class viewer::EntityModel &", pybind11::return_value_policy::automatic, pybind11::arg(""));
	}
	std::cout << "B498_[viewer::CarModel] ";
	{ // viewer::CarModel file: line:271
		pybind11::class_<viewer::CarModel, std::shared_ptr<viewer::CarModel>, PyCallBack_viewer_CarModel, viewer::EntityModel> cl(M("viewer"), "CarModel", "");
		cl.def( pybind11::init( [](PyCallBack_viewer_CarModel const &o){ return new PyCallBack_viewer_CarModel(o); } ) );
		cl.def( pybind11::init( [](viewer::CarModel const &o){ return new viewer::CarModel(o); } ) );
		cl.def_readwrite("wheel_", &viewer::CarModel::wheel_);
		cl.def_readwrite("wheel_angle_", &viewer::CarModel::wheel_angle_);
		cl.def_readwrite("wheel_rot_", &viewer::CarModel::wheel_rot_);
		cl.def("GetType", (enum viewer::EntityModel::EntityType (viewer::CarModel::*)()) &viewer::CarModel::GetType, "C++: viewer::CarModel::GetType() --> enum viewer::EntityModel::EntityType");
		cl.def("UpdateWheels", (void (viewer::CarModel::*)(double, double)) &viewer::CarModel::UpdateWheels, "C++: viewer::CarModel::UpdateWheels(double, double) --> void", pybind11::arg("wheel_angle"), pybind11::arg("wheel_rotation"));
		cl.def("UpdateWheelsDelta", (void (viewer::CarModel::*)(double, double)) &viewer::CarModel::UpdateWheelsDelta, "C++: viewer::CarModel::UpdateWheelsDelta(double, double) --> void", pybind11::arg("wheel_angle"), pybind11::arg("wheel_rotation_delta"));
		cl.def("assign", (class viewer::CarModel & (viewer::CarModel::*)(const class viewer::CarModel &)) &viewer::CarModel::operator=, "C++: viewer::CarModel::operator=(const class viewer::CarModel &) --> class viewer::CarModel &", pybind11::return_value_policy::automatic, pybind11::arg(""));
	}
	std::cout << "B499_[viewer::VisibilityCallback] ";
	{ // viewer::VisibilityCallback file: line:292
		pybind11::class_<viewer::VisibilityCallback, std::shared_ptr<viewer::VisibilityCallback>, PyCallBack_viewer_VisibilityCallback> cl(M("viewer"), "VisibilityCallback", "");
		cl.def( pybind11::init( [](PyCallBack_viewer_VisibilityCallback const &o){ return new PyCallBack_viewer_VisibilityCallback(o); } ) );
		cl.def( pybind11::init( [](viewer::VisibilityCallback const &o){ return new viewer::VisibilityCallback(o); } ) );
	}
	std::cout << "B500_[viewer::Viewer] ";
	{ // viewer::Viewer file: line:335
		pybind11::class_<viewer::Viewer, std::shared_ptr<viewer::Viewer>> cl(M("viewer"), "Viewer", "");
		cl.def( pybind11::init( [](viewer::Viewer const &o){ return new viewer::Viewer(o); } ) );
		cl.def_readwrite("currentCarInFocus_", &viewer::Viewer::currentCarInFocus_);
		cl.def_readwrite("camMode_", &viewer::Viewer::camMode_);
		cl.def_readwrite("line_node_", &viewer::Viewer::line_node_);
		cl.def_readwrite("shadow_node_", &viewer::Viewer::shadow_node_);
		cl.def_readwrite("dot_node_", &viewer::Viewer::dot_node_);
		cl.def_readwrite("odrLines_", &viewer::Viewer::odrLines_);
		cl.def_readwrite("osiFeatures_", &viewer::Viewer::osiFeatures_);
		cl.def_readwrite("trajectoryLines_", &viewer::Viewer::trajectoryLines_);
		cl.def_readwrite("envTx_", &viewer::Viewer::envTx_);
		cl.def_readwrite("environment_", &viewer::Viewer::environment_);
		cl.def_readwrite("rubberbandManipulator_", &viewer::Viewer::rubberbandManipulator_);
		cl.def_readwrite("nodeTrackerManipulator_", &viewer::Viewer::nodeTrackerManipulator_);
		cl.def_readwrite("entities_", &viewer::Viewer::entities_);
		cl.def_readwrite("lodScale_", &viewer::Viewer::lodScale_);
		cl.def_readwrite("roadSensors_", &viewer::Viewer::roadSensors_);
		cl.def_readwrite("trails_", &viewer::Viewer::trails_);
		cl.def_readwrite("showInfoText", &viewer::Viewer::showInfoText);
		cl.def_readwrite("exe_path_", &viewer::Viewer::exe_path_);
		cl.def_readwrite("callback_", &viewer::Viewer::callback_);
		cl.def_readwrite("infoTextCamera", &viewer::Viewer::infoTextCamera);
		cl.def_readwrite("infoText", &viewer::Viewer::infoText);
		cl.def_readwrite("polyLine_", &viewer::Viewer::polyLine_);
		cl.def_static("PrintUsage", (void (*)()) &viewer::Viewer::PrintUsage, "C++: viewer::Viewer::PrintUsage() --> void");
		cl.def("AddCustomCamera", (void (viewer::Viewer::*)(double, double, double, double, double)) &viewer::Viewer::AddCustomCamera, "C++: viewer::Viewer::AddCustomCamera(double, double, double, double, double) --> void", pybind11::arg("x"), pybind11::arg("y"), pybind11::arg("z"), pybind11::arg("h"), pybind11::arg("p"));
		cl.def("SetCameraMode", (void (viewer::Viewer::*)(int)) &viewer::Viewer::SetCameraMode, "Set mode of the esmini camera model\n \n\n According to the RubberbandManipulator::CAMERA_MODE enum, plus any number of custom cameras. Set -1 to select the last.\n\nC++: viewer::Viewer::SetCameraMode(int) --> void", pybind11::arg("mode"));
		cl.def("GetNumberOfCameraModes", (int (viewer::Viewer::*)()) &viewer::Viewer::GetNumberOfCameraModes, "C++: viewer::Viewer::GetNumberOfCameraModes() --> int");
		cl.def("UpdateCameraFOV", (void (viewer::Viewer::*)()) &viewer::Viewer::UpdateCameraFOV, "C++: viewer::Viewer::UpdateCameraFOV() --> void");
		cl.def("SetVehicleInFocus", (void (viewer::Viewer::*)(int)) &viewer::Viewer::SetVehicleInFocus, "C++: viewer::Viewer::SetVehicleInFocus(int) --> void", pybind11::arg("idx"));
		cl.def("GetEntityInFocus", (int (viewer::Viewer::*)()) &viewer::Viewer::GetEntityInFocus, "C++: viewer::Viewer::GetEntityInFocus() --> int");
		cl.def("AddEntityModel", (int (viewer::Viewer::*)(class viewer::EntityModel *)) &viewer::Viewer::AddEntityModel, "C++: viewer::Viewer::AddEntityModel(class viewer::EntityModel *) --> int", pybind11::arg("model"));
		cl.def("RemoveCar", (void (viewer::Viewer::*)(int)) &viewer::Viewer::RemoveCar, "C++: viewer::Viewer::RemoveCar(int) --> void", pybind11::arg("index"));
		cl.def("ReplaceCar", (void (viewer::Viewer::*)(int, class viewer::EntityModel *)) &viewer::Viewer::ReplaceCar, "C++: viewer::Viewer::ReplaceCar(int, class viewer::EntityModel *) --> void", pybind11::arg("index"), pybind11::arg("model"));
		cl.def("AddEnvironment", (int (viewer::Viewer::*)(const char *)) &viewer::Viewer::AddEnvironment, "C++: viewer::Viewer::AddEnvironment(const char *) --> int", pybind11::arg("filename"));
		cl.def("UpdateSensor", (void (viewer::Viewer::*)(class viewer::PointSensor *)) &viewer::Viewer::UpdateSensor, "C++: viewer::Viewer::UpdateSensor(class viewer::PointSensor *) --> void", pybind11::arg("sensor"));
		cl.def("SensorSetPivotPos", (void (viewer::Viewer::*)(class viewer::PointSensor *, double, double, double)) &viewer::Viewer::SensorSetPivotPos, "C++: viewer::Viewer::SensorSetPivotPos(class viewer::PointSensor *, double, double, double) --> void", pybind11::arg("sensor"), pybind11::arg("x"), pybind11::arg("y"), pybind11::arg("z"));
		cl.def("SensorSetTargetPos", (void (viewer::Viewer::*)(class viewer::PointSensor *, double, double, double)) &viewer::Viewer::SensorSetTargetPos, "C++: viewer::Viewer::SensorSetTargetPos(class viewer::PointSensor *, double, double, double) --> void", pybind11::arg("sensor"), pybind11::arg("x"), pybind11::arg("y"), pybind11::arg("z"));
		cl.def("setKeyUp", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::setKeyUp, "C++: viewer::Viewer::setKeyUp(bool) --> void", pybind11::arg("pressed"));
		cl.def("setKeyDown", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::setKeyDown, "C++: viewer::Viewer::setKeyDown(bool) --> void", pybind11::arg("pressed"));
		cl.def("setKeyLeft", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::setKeyLeft, "C++: viewer::Viewer::setKeyLeft(bool) --> void", pybind11::arg("pressed"));
		cl.def("setKeyRight", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::setKeyRight, "C++: viewer::Viewer::setKeyRight(bool) --> void", pybind11::arg("pressed"));
		cl.def("getKeyUp", (bool (viewer::Viewer::*)()) &viewer::Viewer::getKeyUp, "C++: viewer::Viewer::getKeyUp() --> bool");
		cl.def("getKeyDown", (bool (viewer::Viewer::*)()) &viewer::Viewer::getKeyDown, "C++: viewer::Viewer::getKeyDown() --> bool");
		cl.def("getKeyLeft", (bool (viewer::Viewer::*)()) &viewer::Viewer::getKeyLeft, "C++: viewer::Viewer::getKeyLeft() --> bool");
		cl.def("getKeyRight", (bool (viewer::Viewer::*)()) &viewer::Viewer::getKeyRight, "C++: viewer::Viewer::getKeyRight() --> bool");
		cl.def("SetQuitRequest", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::SetQuitRequest, "C++: viewer::Viewer::SetQuitRequest(bool) --> void", pybind11::arg("value"));
		cl.def("GetQuitRequest", (bool (viewer::Viewer::*)()) &viewer::Viewer::GetQuitRequest, "C++: viewer::Viewer::GetQuitRequest() --> bool");
		cl.def("SetInfoTextProjection", (void (viewer::Viewer::*)(int, int)) &viewer::Viewer::SetInfoTextProjection, "C++: viewer::Viewer::SetInfoTextProjection(int, int) --> void", pybind11::arg("width"), pybind11::arg("height"));
		cl.def("SetInfoText", (void (viewer::Viewer::*)(const char *)) &viewer::Viewer::SetInfoText, "C++: viewer::Viewer::SetInfoText(const char *) --> void", pybind11::arg("text"));
		cl.def("SetNodeMaskBits", (void (viewer::Viewer::*)(int)) &viewer::Viewer::SetNodeMaskBits, "C++: viewer::Viewer::SetNodeMaskBits(int) --> void", pybind11::arg("bits"));
		cl.def("SetNodeMaskBits", (void (viewer::Viewer::*)(int, int)) &viewer::Viewer::SetNodeMaskBits, "C++: viewer::Viewer::SetNodeMaskBits(int, int) --> void", pybind11::arg("mask"), pybind11::arg("bits"));
		cl.def("ClearNodeMaskBits", (void (viewer::Viewer::*)(int)) &viewer::Viewer::ClearNodeMaskBits, "C++: viewer::Viewer::ClearNodeMaskBits(int) --> void", pybind11::arg("bits"));
		cl.def("ToggleNodeMaskBits", (void (viewer::Viewer::*)(int)) &viewer::Viewer::ToggleNodeMaskBits, "C++: viewer::Viewer::ToggleNodeMaskBits(int) --> void", pybind11::arg("bits"));
		cl.def("GetNodeMaskBit", (int (viewer::Viewer::*)(int)) &viewer::Viewer::GetNodeMaskBit, "C++: viewer::Viewer::GetNodeMaskBit(int) --> int", pybind11::arg("mask"));
		cl.def("CreateRoadSensors", (bool (viewer::Viewer::*)(class viewer::CarModel *)) &viewer::Viewer::CreateRoadSensors, "C++: viewer::Viewer::CreateRoadSensors(class viewer::CarModel *) --> bool", pybind11::arg("vehicle_model"));
		cl.def("CaptureNextFrame", (void (viewer::Viewer::*)()) &viewer::Viewer::CaptureNextFrame, "C++: viewer::Viewer::CaptureNextFrame() --> void");
		cl.def("CaptureContinuously", (void (viewer::Viewer::*)(bool)) &viewer::Viewer::CaptureContinuously, "C++: viewer::Viewer::CaptureContinuously(bool) --> void", pybind11::arg("state"));
	}
}


// File: unknown/unknown_49.cpp
#include <functional> // std::less
#include <iostream> // --trace
#include <memory> // std::allocator
#include <osg/ArgumentParser> // osg::ArgumentParser
#include <osg/Array> // 
#include <osg/Array> // osg::TemplateArray
#include <osg/BoundingBox> // osg::BoundingBoxImpl
#include <osg/CopyOp> // osg::CopyOp
#include <osg/GraphicsContext> // osg::GraphicsContext
#include <osg/Group> // osg::Group
#include <osg/Matrixd> // osg::Matrixd
#include <osg/Node> // osg::Node
#include <osg/Object> // osg::Object
#include <osg/Vec3f> // osg::Vec3f
#include <osg/Vec4f> // osg::Vec4f
#include <osg/View> // osg::View
#include <osg/ref_ptr> // osg::ref_ptr
#include <osgGA/GUIActionAdapter> // osgGA::GUIActionAdapter
#include <osgGA/GUIEventAdapter> // 
#include <osgGA/GUIEventAdapter> // osgGA::GUIEventAdapter
#include <osgGA/GUIEventAdapter> // osgGA::PointerData
#include <osgUtil/LineSegmentIntersector> // osgUtil::LineSegmentIntersector
#include <set> // std::multiset
#include <sstream> // __str__
#include <string> // std::basic_string
#include <string> // std::char_traits
#include <vector> // std::vector

#include <pybind11/pybind11.h>
#include <functional>
#include <string>
#include <pybind11/stl.h>
#include <pybind11/stl_bind.h>
#include <pybind11/functional.h>
#include <fstream>
#include "viewer.hpp"
#include <osgDB/ReadFile>
#include <osg/ComputeBoundsVisitor>
#include <osg/LineWidth>
#include <osg/Point>
#include <osg/BlendFunc>
#include <osg/BlendColor>
#include <osg/Geode>
#include <osg/Group>
#include <osg/ShapeDrawable>
#include <osg/CullFace>
#include <osgGA/StateSetManipulator>
#include <osgGA/TrackballManipulator>
#include <osgGA/KeySwitchMatrixManipulator>
#include <osgGA/FlightManipulator>
#include <osgGA/DriveManipulator>
#include <osgGA/TerrainManipulator>
#include <osgGA/SphericalManipulator>
#include <osgViewer/ViewerEventHandlers>
#include <osgDB/Registry>
#include <osgShadow/StandardShadowMap>
#include <osgShadow/ShadowMap>
#include <osgShadow/ShadowedScene>
#include <osgUtil/SmoothingVisitor>
#include "CommonMini.hpp"
#include "RubberbandManipulator.hpp"
#include "IdealSensor.hpp"
#include "RoadManager.hpp"
#include "CommonMini.hpp"
#include "roadgeom.hpp"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

// viewer::ViewerEventHandler file: line:444
struct PyCallBack_viewer_ViewerEventHandler : public viewer::ViewerEventHandler {
	using viewer::ViewerEventHandler::ViewerEventHandler;

};

void bind_unknown_unknown_49(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	std::cout << "B501_[viewer::ViewerEventHandler] ";
	{ // viewer::ViewerEventHandler file: line:444
		pybind11::class_<viewer::ViewerEventHandler, std::shared_ptr<viewer::ViewerEventHandler>, PyCallBack_viewer_ViewerEventHandler> cl(M("viewer"), "ViewerEventHandler", "");
		cl.def( pybind11::init<class viewer::Viewer *>(), pybind11::arg("viewer") );

		cl.def( pybind11::init( [](PyCallBack_viewer_ViewerEventHandler const &o){ return new PyCallBack_viewer_ViewerEventHandler(o); } ) );
		cl.def( pybind11::init( [](viewer::ViewerEventHandler const &o){ return new viewer::ViewerEventHandler(o); } ) );
	}
}


#include <map>
#include <memory>
#include <stdexcept>
#include <functional>
#include <string>

#include <pybind11/pybind11.h>

typedef std::function< pybind11::module & (std::string const &) > ModuleGetter;

void bind_google_protobuf_io_coded_stream(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_arena(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_metadata_lite(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_2(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_3(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_4(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_5(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_6(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_7(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_8(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_9(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_10(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_11(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_12(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_13(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_14(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_15(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_16(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_17(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_18(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_19(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_20(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_message_lite(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_message_lite_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_io_zero_copy_stream(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_21(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_repeated_field_22(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_implicit_weak_message(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_2(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_3(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_4(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_unknown_field_set(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_unknown_field_set_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_generated_message_reflection(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_message(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_message_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_message_2(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_2(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_3(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_4(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_5(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_6(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_7(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_8(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_9(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_10(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_11(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_12(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_13(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_google_protobuf_descriptor_pb_14(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_1(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_2(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_3(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_4(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_5(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_6(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_7(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_8(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_9(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_10(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_11(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_12(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_13(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_14(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_15(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_16(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_17(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_18(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_19(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_20(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_21(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_22(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_23(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_24(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_25(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_26(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_27(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_28(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_29(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_30(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_31(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_32(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_33(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_34(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_35(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_36(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_37(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_38(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_39(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_40(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_41(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_42(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_43(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_44(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_45(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_46(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_47(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_48(std::function< pybind11::module &(std::string const &namespace_) > &M);
void bind_unknown_unknown_49(std::function< pybind11::module &(std::string const &namespace_) > &M);


PYBIND11_MODULE(pyviewerbase, root_module) {
	root_module.doc() = "pyviewerbase module";

	std::map <std::string, pybind11::module> modules;
	ModuleGetter M = [&](std::string const &namespace_) -> pybind11::module & {
		auto it = modules.find(namespace_);
		if( it == modules.end() ) throw std::runtime_error("Attempt to access pybind11::module for namespace " + namespace_ + " before it was created!!!");
		return it->second;
	};

	modules[""] = root_module;

	std::vector< std::pair<std::string, std::string> > sub_modules {
		{"", "google"},
		{"google", "protobuf"},
		{"google::protobuf", "internal"},
		{"google::protobuf", "io"},
		{"", "osi3"},
		{"", "viewer"},
	};
	for(auto &p : sub_modules ) modules[p.first.size() ? p.first+"::"+p.second : p.second] = modules[p.first].def_submodule(p.second.c_str(), ("Bindings for " + p.first + "::" + p.second + " namespace").c_str() );

	//pybind11::class_<std::shared_ptr<void>>(M(""), "_encapsulated_data_");

	bind_google_protobuf_io_coded_stream(M);
	bind_google_protobuf_arena(M);
	bind_google_protobuf_metadata_lite(M);
	bind_google_protobuf_repeated_field(M);
	bind_google_protobuf_repeated_field_1(M);
	bind_google_protobuf_repeated_field_2(M);
	bind_google_protobuf_repeated_field_3(M);
	bind_google_protobuf_repeated_field_4(M);
	bind_google_protobuf_repeated_field_5(M);
	bind_google_protobuf_repeated_field_6(M);
	bind_google_protobuf_repeated_field_7(M);
	bind_google_protobuf_repeated_field_8(M);
	bind_google_protobuf_repeated_field_9(M);
	bind_google_protobuf_repeated_field_10(M);
	bind_google_protobuf_repeated_field_11(M);
	bind_google_protobuf_repeated_field_12(M);
	bind_google_protobuf_repeated_field_13(M);
	bind_google_protobuf_repeated_field_14(M);
	bind_google_protobuf_repeated_field_15(M);
	bind_google_protobuf_repeated_field_16(M);
	bind_google_protobuf_repeated_field_17(M);
	bind_google_protobuf_repeated_field_18(M);
	bind_google_protobuf_repeated_field_19(M);
	bind_google_protobuf_repeated_field_20(M);
	bind_google_protobuf_message_lite(M);
	bind_google_protobuf_message_lite_1(M);
	bind_google_protobuf_io_zero_copy_stream(M);
	bind_google_protobuf_repeated_field_21(M);
	bind_google_protobuf_repeated_field_22(M);
	bind_google_protobuf_implicit_weak_message(M);
	bind_google_protobuf_descriptor(M);
	bind_google_protobuf_descriptor_1(M);
	bind_google_protobuf_descriptor_2(M);
	bind_google_protobuf_descriptor_3(M);
	bind_google_protobuf_descriptor_4(M);
	bind_google_protobuf_unknown_field_set(M);
	bind_google_protobuf_unknown_field_set_1(M);
	bind_google_protobuf_generated_message_reflection(M);
	bind_google_protobuf_message(M);
	bind_google_protobuf_message_1(M);
	bind_google_protobuf_message_2(M);
	bind_google_protobuf_descriptor_pb(M);
	bind_google_protobuf_descriptor_pb_1(M);
	bind_google_protobuf_descriptor_pb_2(M);
	bind_google_protobuf_descriptor_pb_3(M);
	bind_google_protobuf_descriptor_pb_4(M);
	bind_google_protobuf_descriptor_pb_5(M);
	bind_google_protobuf_descriptor_pb_6(M);
	bind_google_protobuf_descriptor_pb_7(M);
	bind_google_protobuf_descriptor_pb_8(M);
	bind_google_protobuf_descriptor_pb_9(M);
	bind_google_protobuf_descriptor_pb_10(M);
	bind_google_protobuf_descriptor_pb_11(M);
	bind_google_protobuf_descriptor_pb_12(M);
	bind_google_protobuf_descriptor_pb_13(M);
	bind_google_protobuf_descriptor_pb_14(M);
	bind_unknown_unknown(M);
	bind_unknown_unknown_1(M);
	bind_unknown_unknown_2(M);
	bind_unknown_unknown_3(M);
	bind_unknown_unknown_4(M);
	bind_unknown_unknown_5(M);
	bind_unknown_unknown_6(M);
	bind_unknown_unknown_7(M);
	bind_unknown_unknown_8(M);
	bind_unknown_unknown_9(M);
	bind_unknown_unknown_10(M);
	bind_unknown_unknown_11(M);
	bind_unknown_unknown_12(M);
	bind_unknown_unknown_13(M);
	bind_unknown_unknown_14(M);
	bind_unknown_unknown_15(M);
	bind_unknown_unknown_16(M);
	bind_unknown_unknown_17(M);
	bind_unknown_unknown_18(M);
	bind_unknown_unknown_19(M);
	bind_unknown_unknown_20(M);
	bind_unknown_unknown_21(M);
	bind_unknown_unknown_22(M);
	bind_unknown_unknown_23(M);
	bind_unknown_unknown_24(M);
	bind_unknown_unknown_25(M);
	bind_unknown_unknown_26(M);
	bind_unknown_unknown_27(M);
	bind_unknown_unknown_28(M);
	bind_unknown_unknown_29(M);
	bind_unknown_unknown_30(M);
	bind_unknown_unknown_31(M);
	bind_unknown_unknown_32(M);
	bind_unknown_unknown_33(M);
	bind_unknown_unknown_34(M);
	bind_unknown_unknown_35(M);
	bind_unknown_unknown_36(M);
	bind_unknown_unknown_37(M);
	bind_unknown_unknown_38(M);
	bind_unknown_unknown_39(M);
	bind_unknown_unknown_40(M);
	bind_unknown_unknown_41(M);
	bind_unknown_unknown_42(M);
	bind_unknown_unknown_43(M);
	bind_unknown_unknown_44(M);
	bind_unknown_unknown_45(M);
	bind_unknown_unknown_46(M);
	bind_unknown_unknown_47(M);
	bind_unknown_unknown_48(M);
	bind_unknown_unknown_49(M);

}

// Source list file: /home/wave/repositories/python-esmini/src/viewerbase/pyviewerbase.sources
// pyviewerbase.cpp
// google/protobuf/io/coded_stream.cpp
// google/protobuf/arena.cpp
// google/protobuf/metadata_lite.cpp
// google/protobuf/repeated_field.cpp
// google/protobuf/repeated_field_1.cpp
// google/protobuf/repeated_field_2.cpp
// google/protobuf/repeated_field_3.cpp
// google/protobuf/repeated_field_4.cpp
// google/protobuf/repeated_field_5.cpp
// google/protobuf/repeated_field_6.cpp
// google/protobuf/repeated_field_7.cpp
// google/protobuf/repeated_field_8.cpp
// google/protobuf/repeated_field_9.cpp
// google/protobuf/repeated_field_10.cpp
// google/protobuf/repeated_field_11.cpp
// google/protobuf/repeated_field_12.cpp
// google/protobuf/repeated_field_13.cpp
// google/protobuf/repeated_field_14.cpp
// google/protobuf/repeated_field_15.cpp
// google/protobuf/repeated_field_16.cpp
// google/protobuf/repeated_field_17.cpp
// google/protobuf/repeated_field_18.cpp
// google/protobuf/repeated_field_19.cpp
// google/protobuf/repeated_field_20.cpp
// google/protobuf/message_lite.cpp
// google/protobuf/message_lite_1.cpp
// google/protobuf/io/zero_copy_stream.cpp
// google/protobuf/repeated_field_21.cpp
// google/protobuf/repeated_field_22.cpp
// google/protobuf/implicit_weak_message.cpp
// google/protobuf/descriptor.cpp
// google/protobuf/descriptor_1.cpp
// google/protobuf/descriptor_2.cpp
// google/protobuf/descriptor_3.cpp
// google/protobuf/descriptor_4.cpp
// google/protobuf/unknown_field_set.cpp
// google/protobuf/unknown_field_set_1.cpp
// google/protobuf/generated_message_reflection.cpp
// google/protobuf/message.cpp
// google/protobuf/message_1.cpp
// google/protobuf/message_2.cpp
// google/protobuf/descriptor_pb.cpp
// google/protobuf/descriptor_pb_1.cpp
// google/protobuf/descriptor_pb_2.cpp
// google/protobuf/descriptor_pb_3.cpp
// google/protobuf/descriptor_pb_4.cpp
// google/protobuf/descriptor_pb_5.cpp
// google/protobuf/descriptor_pb_6.cpp
// google/protobuf/descriptor_pb_7.cpp
// google/protobuf/descriptor_pb_8.cpp
// google/protobuf/descriptor_pb_9.cpp
// google/protobuf/descriptor_pb_10.cpp
// google/protobuf/descriptor_pb_11.cpp
// google/protobuf/descriptor_pb_12.cpp
// google/protobuf/descriptor_pb_13.cpp
// google/protobuf/descriptor_pb_14.cpp
// unknown/unknown.cpp
// unknown/unknown_1.cpp
// unknown/unknown_2.cpp
// unknown/unknown_3.cpp
// unknown/unknown_4.cpp
// unknown/unknown_5.cpp
// unknown/unknown_6.cpp
// unknown/unknown_7.cpp
// unknown/unknown_8.cpp
// unknown/unknown_9.cpp
// unknown/unknown_10.cpp
// unknown/unknown_11.cpp
// unknown/unknown_12.cpp
// unknown/unknown_13.cpp
// unknown/unknown_14.cpp
// unknown/unknown_15.cpp
// unknown/unknown_16.cpp
// unknown/unknown_17.cpp
// unknown/unknown_18.cpp
// unknown/unknown_19.cpp
// unknown/unknown_20.cpp
// unknown/unknown_21.cpp
// unknown/unknown_22.cpp
// unknown/unknown_23.cpp
// unknown/unknown_24.cpp
// unknown/unknown_25.cpp
// unknown/unknown_26.cpp
// unknown/unknown_27.cpp
// unknown/unknown_28.cpp
// unknown/unknown_29.cpp
// unknown/unknown_30.cpp
// unknown/unknown_31.cpp
// unknown/unknown_32.cpp
// unknown/unknown_33.cpp
// unknown/unknown_34.cpp
// unknown/unknown_35.cpp
// unknown/unknown_36.cpp
// unknown/unknown_37.cpp
// unknown/unknown_38.cpp
// unknown/unknown_39.cpp
// unknown/unknown_40.cpp
// unknown/unknown_41.cpp
// unknown/unknown_42.cpp
// unknown/unknown_43.cpp
// unknown/unknown_44.cpp
// unknown/unknown_45.cpp
// unknown/unknown_46.cpp
// unknown/unknown_47.cpp
// unknown/unknown_48.cpp
// unknown/unknown_49.cpp

// Modules list file: /home/wave/repositories/python-esmini/src/viewerbase/pyviewerbase.modules
// google google.protobuf google.protobuf.internal google.protobuf.io osi3 viewer 
